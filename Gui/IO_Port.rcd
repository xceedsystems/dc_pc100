/* 

This file is the master record / sample file for drivers.
see drvrid.h for layout details.
*/

#ifdef APSTUDIO_INVOKED
    #error this file is not editable by App Studio
#endif //APSTUDIO_INVOKED



#define  THIS_DRIVER    1               // driver rcd index 



// Do not modify this paragraph.
DRIVER_DLL_ID DRIVER_DLL_TYPE LOADONCALL DISCARDABLE
BEGIN
    DRVINST_CONTRACT,
    DRIVER_VERSION,
    "\270\245\311\222\324\225\355\374",
    1,
    NETWORK_TYPE, THIS_DRIVER,
    DRIVER_SENTINEL,
    0x30FFDD2BL,
END




////////////////////////////  Driver descriptor  /////////////////////////


THIS_DRIVER NETWORK_TYPE LOADONCALL DISCARDABLE     // paragraph #2     driver associated!
BEGIN
    DriverDCPC100,                     // DrvCookie
    DCPC100VERS,                       // Driver Uiot Version 
    MAX_DRV_INSTANCES,                  // max # of instances  
    "DCX-PC100 (ISA)\0",                       // Driver name 
    "The  DCX-PC100 driver for "
    "the Visual Logic Controller"
    " (" PRODUCT_VERSION ").\r\n"
    "This driver is meant to be used with DCX-PC100 card From PMC. "
    ""
    "Developed by AhKait@Pacific.Net.Sg\r\n"
    "driver ID 0x5e7f8d51L."
    "\0",                   
    0,
    DRVTAG_STOP_STATE, 2, NET_STOPSTATE, DRIVER_SENTINEL, //Use this DRVTAG to control all outputs state when stopping the project (0 or hold last).
    DRVTAG_DONE,
    0L, 0L, 0L,                     // Expansion 
    3,                              // Count of device names 
    0,                              // NeedsBuffer - <> 0 if requires extra buffer area for async transfers 
    NET_FUNC_TYPE,     // p.#3      // RT_USER FuncType - Resource type for network/device functions, 0 if none 
    DRIVER_FUNC,                    // RR_USER FuncRef - Ref to list of network function head, 0 if none 
  
    NET_CFG_TYPE,      // p.#4      // RT_USER CfgType - Resource type for network/device cfg 
    IDD_NETWORK,                    // RR_USER CfgRef - Ref to structure def of network config data, 0 if none 

    0,                              // RT_USER ErrorsType - Resource type for errors codes the driver can return 

// pmc
    DEVICE_TYPE, DEVICE_STATION,	        // p.#5  
    DEVICE_TYPE, DEVICE_MOTION_STATION,	        // p.#5  
    DEVICE_TYPE, DEVICE_OTHER_MOTION_STATION,	        // p.#5  

//    DEVICE_TYPE, DEVICE_MODULE_4W_INPUT,    // p.#5        
//    DEVICE_TYPE, DEVICE_MODULE_4W_OUTPUT,   // p.#5        
//	DEVICE_TYPE, DEVICE_MODULE_2W_INPUT,    // p.#5        
//	DEVICE_TYPE, DEVICE_MODULE_2W_OUTPUT,    // p.#5        
//	DEVICE_TYPE, DEVICE_MODULE_1W_INPUT,    // p.#5        
//	DEVICE_TYPE, DEVICE_MODULE_1W_OUTPUT,    // p.#5        
//	DEVICE_TYPE, DEVICE_MODULE_1B_INPUT,    // p.#5        
//	DEVICE_TYPE, DEVICE_MODULE_1B_OUTPUT,    // p.#5     
  //  DEVICE_TYPE, DEVICE_MODULEIO_GENERIC,     // p.#5    
//    DEVICE_TYPE, DEVICE_MODULEIO_4W_INPUT,    // p.#5        
//    DEVICE_TYPE, DEVICE_MODULEIO_4W_OUTPUT,   // p.#5        
//	DEVICE_TYPE, DEVICE_MODULEIO_2W_INPUT,    // p.#5        
//	DEVICE_TYPE, DEVICE_MODULEIO_2W_OUTPUT,    // p.#5        
//	DEVICE_TYPE, DEVICE_MODULEIO_1W_INPUT,    // p.#5        /
//	DEVICE_TYPE, DEVICE_MODULEIO_1W_OUTPUT,    // p.#5        
//	DEVICE_TYPE, DEVICE_MODULEIO_1B_INPUT,    // p.#5        
//	DEVICE_TYPE, DEVICE_MODULEIO_1B_OUTPUT,    // p.#5   
 //   DEVICE_TYPE, DEVICE_MODULEIO_4W_IORO,     // p.#5        
 //   DEVICE_TYPE, DEVICE_MODULEIO_2W_IORO,     // p.#5        
 //   DEVICE_TYPE, DEVICE_MODULEIO_1W_IORO,     // p.#5        
 //   DEVICE_TYPE, DEVICE_MODULEIO_1B_IORO,     // p.#5  
//	DEVICE_TYPE, DEVICE_MODULEIO_4W_IANDO,    // p.#5   
//	DEVICE_TYPE, DEVICE_MODULEIO_2W_IANDO,    // p.#5        
//	DEVICE_TYPE, DEVICE_MODULEIO_1W_IANDO,    // p.#5        
//	DEVICE_TYPE, DEVICE_MODULEIO_1B_IANDO,    // p.#5        
  
    DRIVER_SENTINEL        
END

    


IDD_NETWORK NET_CFG_TYPE LOADONCALL DISCARDABLE        // paragraph #4        Configure dlg_box  associated!
BEGIN
    IDD_NETWORK,                    // DLG_ID - Id of dialog for this function, 0 if use default dialog
    0,                              // CTRL_ID - DescId of the Description area
    IDC_PB_HELP,                    // HELP_ID - CtrlId of the Help button
    IDH_NETWORK                     // HELP_IDX - Help index into driver help file for this config ctrl
    0L, 0L, 0L, 0L                  // Expansion 
    NETCONFIG_SIZE,                 // UINT16 TotalSize - Number of bytes in config block
    12,                             // UINT16 CfgCount  - Number of inline control entries in IDD_NETWORK dlgbox
    DRIVER_SENTINEL    

    //  1 - UINT32  DriverId, Offset NET_ID, Size NET_ID_SIZE 
    "Driver Id\0",
    "Driver Id\0",
    0L, 0L, 0L, 0L,                 // Expansion 
    0,                              // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE,                  // HELP_IDX m_HelpIdx
    NET_ID,                         // UINT16 Offset in data block where value is
    0,                              // UINT16 m_Bit - Bit offset in byte indexed by offset
    NET_ID_SIZE,                    // UINT16 m_Bits - Number of bits wide the value is
    CT_CONST,                       // CFG_TYPES m_CfgType
    // Variable depending on CFG_TYPES
    NETCONFIG_ID,                   // UINT32 const value
    DRIVER_SENTINEL        

    //  2 - UINT32  DriverVers, Offset NET_VERS, Size NET_VERS_SIZE 
    "Driver Vers\0",
    "Driver Vers\0",
    0L, 0L, 0L, 0L,                 // Expansion 
    0,                              // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE,                  // HELP_IDX m_HelpIdx
    NET_VERS,                       // UINT16 Offset in data block where value is
    0,                              // UINT16 m_Bit - Bit offset in byte indexed by offset
    NET_VERS_SIZE,                  // UINT16 m_Bits - Number of bits wide the value is
    CT_CONST,                       // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
    NETCONFIG_VERS,                 // UINT32 const value
    DRIVER_SENTINEL        

    //  3 - UINT16 DualPortAddress, Offset NET_DPADR, Size NET_DPADR_SIZE 
    "DualPort Address\0",
    "DualPort Address\0",
    0L, 0L, 0L, 0L,                 // Expansion 
    IDC_CO_DPADR,                   // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE,                  // HELP_IDX m_HelpIdx
    NET_DPADR,                      // UINT16 Offset in NETCONFIG data block where value is
    0,                              // UINT16 m_Bit - Bit offset in byte indexed by offset
    NET_DPADR_SIZE,                 // UINT16 m_Bits - Number of bits wide the value is
    CT_VALLIST,                     // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
    DPADR_DEFAULT,                  // UINT32 m_Default
    DPADR_MIN,                      // UINT32 m_Min
    DPADR_MAX,                      // UINT32 m_Max
    DPADR_STEP,                     // UINT32 m_Step
    "%05lXh\0",                     // CString m_Text/Fmt
    DRIVER_SENTINEL        

    //  4 - UINT16 PortAddress, Offset NET_PORT, Size NET_PORT_SIZE 
    "Port Address\0",
    "Port Address\0",
    0L, 0L, 0L, 0L,                 // Expansion 
    IDC_CO_PORT,                    // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE,                  // HELP_IDX m_HelpIdx
    NET_PORT,                       // Offset in NETCONFIG data block where value is
    0,                              // UINT16 m_Bit - Bit offset in byte indexed by offset
    NET_PORT_SIZE,                  // UINT16 m_Bits - Number of bits wide the value is
    CT_VALLIST,                     // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
    PORT_DEFAULT,0,                 // UINT32 m_Default
    PORT_MIN,0,                     // UINT32 m_Min
    PORT_MAX,0,                     // UINT32 m_Max
    PORT_STEP,0,                    // UINT32 m_Step
    "0x%03lXh\0",                   // CString m_Text/Fmt
    DRIVER_SENTINEL        

    //  5 - UINT16 bSimulate; Offset NET_SIMULATE, Size NET_SIMULATE_SIZE 
    "Simulate driver\0",
    "If checked, the priject runs in simulate mode regardless the hardware. "
    "If clear, the LOAD command will fail on hardware issues.\0",
    0L, 0L, 0L, 0L,                 // Expansion 
    IDC_CB_SIMULATE,                // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE,                  // HELP_IDX m_HelpIdx
    NET_SIMULATE,                   // UINT16 Offset in data block where value is
    0,                              // UINT16 m_Bit - Bit offset in byte indexed by offset
    NET_SIMULATE_SIZE,              // UINT16 m_Bits - Number of bits wide the value is
    CT_CHECK,                       // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
    0L,                             // UINT32 m_Default
    0L,                             // UINT32 m_Off
    1L,                             // UINT32 m_On
    DRIVER_SENTINEL        

    //  6 - UINT16 DprHWTests; Offset NET_HWTEST, Size NET_HWTEST_SIZE 
    "Hardware Tests\0",
    "If 'DPR r/w', the declared dual port ram will have to pass a r/w test. "
    "If 'Skip HW tests', there will be no test.\0",
    0L, 0L, 0L, 0L,                 // Expansion 
    IDC_RB_HWTEST_RW,               // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE,                  // HELP_IDX m_HelpIdx
    NET_HWTEST,                     // UINT16 Offset in data block where value is
    0,                              // UINT16 m_Bit - Bit offset in byte indexed by offset
    NET_HWTEST_SIZE,                // UINT16 m_Bits - Number of bits wide the value is
    CT_RADIO,                       // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
    IDC_RB_HWTEST_OFF,              // UINT16 last RB's id       
    HWTEST_OFF+LONG_PAD,             // UINT32 m_Default   // , ensure UINT32
    NET_CFGLIST_TYPE, IDC_RB_HWTEST_RW,         // p.#6
    DRIVER_SENTINEL        

    //  7 - UINT16 InputRead; Offset NET_INPUTREAD, Size NET_INPUTREAD_SIZE 
    "Read Input Data\0",
    "If 'Only on change' the core of Input() will be performed based in some hardware indications, only on change of state (COS). "
    "This saves time on those scan cycles when input values keep their previous state. \r\n"
    "If 'Always', Input() will be completely performed every scan cycle weather input values changed their state or not ."
    "Use this option for test purpose or when the COS mechanism's relyability is dubious."
    "If there is no such a mechanism, this control should be removed and the 'Always' option should be hard coded. "
    "\0",
    0L, 0L, 0L, 0L,                 // Expansion 
    IDC_RB_INPUT_READ_COS,          // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE,                  // HELP_IDX m_HelpIdx
    NET_INPUTREAD,                  // UINT16 Offset in data block where value is
    0,                              // UINT16 m_Bit - Bit offset in byte indexed by offset
    NET_INPUTREAD_SIZE,             // UINT16 m_Bits - Number of bits wide the value is
    CT_RADIO,                       // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
    IDC_RB_INPUT_READ_CYCLIC,       // UINT16 last RB's id       
    INPUT_READ_CYCLIC+LONG_PAD,     // UINT32 m_Default   // , ensure UINT32
    NET_CFGLIST_TYPE, IDC_RB_INPUT_READ_COS,  // p.#6
    DRIVER_SENTINEL        

    //  8 - STOP_STATE_TYPES StopState;   Offset NET_STOPSTATE, Size NET_STOPSTATE_SIZE  
    "Stop State Behavior\0",
    "Behavior of outputs when user stops program: reset to zero, or remain as they are\0",
    0L, 0L, 0L, 0L,                 // Expansion 
    IDC_RB_HOLDLASTSTATE,           // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE,                  // HELP_IDX m_HelpIdx
    NET_STOPSTATE,                  // WORD MemoryBase - Offset in data block where value is
    0,                              // WORD m_Bit - Bit offset in byte indexed by offset
    NET_STOPSTATE_SIZE,             // WORD m_Bits - Number of bits wide the value is
    CT_RADIO,                       // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
    IDC_RB_ZEROOUTPUTS,             // UINT16 last RB's id       
    SS_ZERO+LONG_PAD,    // UINT32 m_Default   // , ensure UINT32
    NET_CFGLIST_TYPE, IDC_RB_HOLDLASTSTATE,         // p.#6
    DRIVER_SENTINEL        

    //  9 - UINT16 IrqLevel, Offset NET_IRQ, Size NET_IRQ_SIZE 
    "Interrupt Level\0",
    "Interrupt Level\0",
    0L, 0L, 0L, 0L,                 // Expansion 
    IDC_CO_IRQ,                     // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE,                  // HELP_IDX m_HelpIdx
    NET_IRQ,                        // Offset in NETCONFIG data block where value is
    0,                              // UINT16 m_Bit - Bit offset in byte indexed by offset
    NET_IRQ_SIZE,                   // UINT16 m_Bits - Number of bits wide the value is
    CT_STRLIST                      // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
    NO_IRQ,                         // UINT32 m_Default
    NET_CFGLIST_TYPE, IDC_CO_IRQ,   // p.#6                         
    DRIVER_SENTINEL        

    //  10 - UINT16 BaudRate, Offset NET_BAUDRATE, Size NET_BAUDRATE_SIZE 
    "BaudRate\0",
    "Baud Rate: 125 kbaud | 250 kbaud | 500 kbaud \0",
    0L, 0L, 0L, 0L,                 // Expansion 
    IDC_RB_BAUDRATE_125,            // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE                   // HELP_IDX m_HelpIdx
    NET_BAUDRATE                    // UINT16 MemoryBase - Offset in data block where value is
    0,                              // UINT16 m_Bit - Bit offset in byte indexed by offset
    NET_BAUDRATE_SIZE               // UINT16 m_Bits - Number of bits wide the value is
    CT_RADIO                        // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
    IDC_RB_BAUDRATE_500,            // UINT16 last RB's id       
    BAUDRATE_125+LONG_PAD,          // UINT32 m_Default   // ensure UINT32
    NET_CFGLIST_TYPE, IDC_RB_BAUDRATE_125,   // p.#6 
    DRIVER_SENTINEL        

    //  11 - UINT16 bWatchdog; Offset NET_WATCHDOG, Size NET_WATCHDOG_SIZE 
    "Watchdog on\0",
    "If checked, the driver will have to cyclicly kick the card's watchdog."
    "\0",
    0L, 0L, 0L, 0L,                 // Expansion 
    IDC_CB_WATCHDOG,                // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE,                  // HELP_IDX m_HelpIdx
    NET_WATCHDOG,                   // UINT16 Offset in data block where value is
    0,                              // UINT16 m_Bit - Bit offset in byte indexed by offset
    NET_WATCHDOG_SIZE,              // UINT16 m_Bits - Number of bits wide the value is
    CT_CHECK,                       // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
    0L,                             // UINT32 m_Default
    0L,                             // UINT32 m_Off
    1L,                             // UINT32 m_On
    DRIVER_SENTINEL        

    //  12 - UINT8 ConfigFile[128];   Offset NET_CONFIG_FILE, Size NET_CONFIG_FILE_SIZE 
    "Configuration File\0",
    "\0",
    0L, 0L, 0L, 0L,                     // Expansion 
    IDC_E_CONFIG_FILE,                  // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE,                      // HELP_IDX m_HelpIdx
    NET_CONFIG_FILE,                    // UINT16 DeviceNet_DualPortAddress - Offset in NETCONFIG data block where value is
    0,                                  // UINT16 m_Bit - Bit offset in byte indexed by offset
    NET_CONFIG_FILE_SIZE,               // UINT16 m_Bits - Number of bits wide the value is
    CT_EDIT,                            // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
    "\0"                                // CString m_Text/Fmt
    DRIVER_SENTINEL        

DRIVER_SENTINEL
END

IDC_RB_HOLDLASTSTATE NET_CFGLIST_TYPE LOADONCALL DISCARDABLE       // paragraph #6
BEGIN
    2,
    SS_HOLD_LAST_STATE+LONG_PAD, "\0"   // ensure UINT32
    SS_ZERO           +LONG_PAD, "\0"
    DRIVER_SENTINEL        
END

IDC_RB_HWTEST_RW NET_CFGLIST_TYPE LOADONCALL DISCARDABLE        // paragraph #6
BEGIN
    2,
    HWTEST_RW  +LONG_PAD, "\0"          // ensure UINT32
    HWTEST_OFF +LONG_PAD, "\0"
    DRIVER_SENTINEL        
END

IDC_RB_INPUT_READ_COS NET_CFGLIST_TYPE LOADONCALL DISCARDABLE   // paragraph #6
BEGIN
    2,
    INPUT_READ_COS   +LONG_PAD, "\0"    // ensure UINT32
    INPUT_READ_CYCLIC+LONG_PAD, "\0"
    DRIVER_SENTINEL        
END

IDC_CO_IRQ NET_CFGLIST_TYPE LOADONCALL DISCARDABLE        // paragraph #6
BEGIN
    15,
    NO_IRQ,    "No interrupts\0"    // Default
    1L,        "IRQ  1\0"          
    3L,        "IRQ  3\0"          
    4L,        "IRQ  4\0"          
    5L,        "IRQ  5\0"          
    6L,        "IRQ  6\0"          
    7L,        "IRQ  7\0"          
    8L,        "IRQ  8\0"          
    9L,        "IRQ  9\0"          
    10L,       "IRQ 10\0"          
    11L,       "IRQ 11\0"          
    12L,       "IRQ 12\0"          
    13L,       "IRQ 13\0"          
    14L,       "IRQ 14\0"          
    15L,       "IRQ 15\0"          

    DRIVER_SENTINEL        
END

IDC_RB_BAUDRATE_125 NET_CFGLIST_TYPE LOADONCALL DISCARDABLE        // paragraph #6
Begin
    3
    BAUDRATE_125+LONG_PAD, "125 kbaud\0"  // ensure UINT32
    BAUDRATE_250+LONG_PAD, "250 kbaud\0"
    BAUDRATE_500+LONG_PAD, "500 kbaud\0"
    DRIVER_SENTINEL        
END


/////////////////////////////////// Driver functions ////////////////////////////


DRIVER_FUNC NET_FUNC_TYPE LOADONCALL DISCARDABLE       // paragraph #3
BEGIN
   10,      // 2 idid not make, ASCII transfer too slow

//4
    DRVF_PORT_INPUT+LONG_PAD,           // UINT32  Function id,  ensure long
        "Port Input\0",                 // short name 
        "Synchronous special call. Reads an input port. Result codes:\r\n"
        "0: Function completed.\r\n"
        "2: Invalid port address.\r\n"
        "\0",
        0L, 0L, 0L, 0L,                 // Expansion 
        IDD_DRVF_PORT_INPUT,            // DlgId     
        IDC_PB_HELP,                    // HelpId    
        IDH_DRVF_PORT_INPUT,			// HelpIdx   
        FNC_SPECIAL_INST_SIZE,          // TotalSize 
        NET_PARAM_TYPE, DRVF_PORT_INPUT, // p.#8      
    DRIVER_SENTINEL

    DRVF_PORT_OUTPUT+LONG_PAD,          // UINT32  Function id,  ensure long
        "Port Output\0",                // short name 
        "Synchronous special call. Writes to an output port. Result codes:\r\n"
        "0: Function completed.\r\n"
        "2: Invalid port address.\r\n"
        "\0",
        0L, 0L, 0L, 0L,                 // Expansion 
        IDD_DRVF_PORT_OUTPUT,           // DlgId     
        IDC_PB_HELP,                    // HelpId    
        IDH_DRVF_PORT_OUTPUT,			// HelpIdx   
        FNC_SPECIAL_INST_SIZE,          // TotalSize 
        NET_PARAM_TYPE, DRVF_PORT_OUTPUT, // p.#8      
    DRIVER_SENTINEL

    DRVF_PEEK+LONG_PAD,                 // UINT32  Function id,  ensure long
        "Peek\0",                       // short name 
        "Synchronous special call. Reads a dual port segment into an internal buffer. "
        "Result codes:\r\n"
        "0: Function completed.\r\n"
        "5: Read buffer too short.\r\n"
        "7: Zero bytes to be transferred.\r\n"
        "8: The target area does not fit the DPR image.\r\n"
        "\0",
        0L, 0L, 0L, 0L,                 // Expansion 
        IDD_DRVF_PEEK,                  // DlgId     
        IDC_PB_HELP,                    // HelpId    
        IDH_DRVF_PEEK,					// HelpIdx   
        FNC_SPECIAL_INST_SIZE,          // TotalSize 
        NET_PARAM_TYPE, DRVF_PEEK,      // p.#8      
    DRIVER_SENTINEL

    DRVF_POKE+LONG_PAD,                 // UINT32  Function id,  ensure long
        "Poke\0",                       // short name 
        "Synchronous special call. Writes an internal buffer to the dual port. "
        "Result codes:\r\n"
        "0: Function completed.\r\n"
        "6: Write buffer too short.\r\n"
        "7: Zero bytes to be transferred.\r\n"
        "8: The target area does not fit the DPR image.\r\n"
        "\0",
        0L, 0L, 0L, 0L,                 // Expansion 
        IDD_DRVF_POKE,                  // DlgId     
        IDC_PB_HELP,                    // HelpId    
        IDH_DRVF_POKE,					// HelpIdx   
        FNC_SPECIAL_INST_SIZE,          // TotalSize 
        NET_PARAM_TYPE, DRVF_POKE,      // p.#8      
    DRIVER_SENTINEL

// //////// start of 8 pmc function 
	DC2_RX_BIN+LONG_PAD,              // UINT32  Function id, Add 0L to ensure UINT32
        "Binary Receive\0",           // short name 
        "  \r\n "
		"\0",
        0L, 0L, 0L, 0L,                 // Expansion 
        IDD_DC2_RX_BIN,               // DlgId     
        IDC_PB_HELP,                    // HelpId    
        IDH_DRVF_COMMAND+LONG_PAD,		// HelpIdx   
        FNC_SPECIAL_INST_SIZE,          // TotalSize 
        NET_PARAM_TYPE, DC2_RX_BIN,   // p.#8      
    DRIVER_SENTENIAL

   DC2_TX_BIN1+LONG_PAD,              // UINT32  Function id, Add 0L to ensure UINT32
        "Parameter Setup Commands\0",           // short name 
        "Parameter Setup Commands \r\n"
		"\0",
        0L, 0L, 0L, 0L,                 // Expansion 
        IDD_DC2_TX_BIN,               // DlgId     
        IDC_PB_HELP,                    // HelpId    
        IDH_DRVF_COMMAND+LONG_PAD,		// HelpIdx   
        FNC_SPECIAL_INST_SIZE,          // TotalSize 
        NET_PARAM_TYPE, DC2_TX_BIN1,   // p.#8      
    DRIVER_SENTENIAL

	DC2_TX_BIN2+LONG_PAD,              // UINT32  Function id, Add 0L to ensure UINT32
        "Motion Commands \0",           // short name 
        "Motion Commands \r\n "
		"\0",
        0L, 0L, 0L, 0L,                 // Expansion 
        IDD_DC2_TX_BIN,               // DlgId     
        IDC_PB_HELP,                    // HelpId    
        IDH_DRVF_COMMAND+LONG_PAD,		// HelpIdx   
        FNC_BIN_INST_SIZE,          // TotalSize 
        NET_PARAM_TYPE, DC2_TX_BIN2,   // p.#8      
    DRIVER_SENTENIAL


	DC2_TX_BIN4+LONG_PAD,              // UINT32  Function id, Add 0L to ensure UINT32
        "Miscellaneous Commands \0",           // short name 
        "Miscellaneous Commands \r\n "
		"\0",
        0L, 0L, 0L, 0L,                 // Expansion 
        IDD_DC2_TX_BIN,               // DlgId     
        IDC_PB_HELP,                    // HelpId    
        IDH_DRVF_COMMAND+LONG_PAD,		// HelpIdx   
        FNC_BIN_INST_SIZE,          // TotalSize 
        NET_PARAM_TYPE, DC2_TX_BIN4,   // p.#8      
    DRIVER_SENTENIAL

	DC2_TX_2AXIS+LONG_PAD,              // UINT32  Function id, Add 0L to ensure UINT32
        "2 Axis Move \0",           // short name 
        "2 Axis Move \r\n "
		"\0",
        0L, 0L, 0L, 0L,                 // Expansion 
        IDD_DC2_2AXIS,               // DlgId     
        IDC_PB_HELP,                    // HelpId    
        IDH_DRVF_COMMAND+LONG_PAD,		// HelpIdx   
        FNC_BIN_INST_SIZE,          // TotalSize 
        NET_PARAM_TYPE, DC2_TX_2AXIS,   // p.#8      
    DRIVER_SENTENIAL

	DC2_TX_2AXIS2+LONG_PAD,              // UINT32  Function id, Add 0L to ensure UINT32
        "2 Axis Move no Parameters \0",           // short name 
        "2 Axis Move no Parameters \r\n "
		"\0",
        0L, 0L, 0L, 0L,                 // Expansion 
        IDD_DC2_2AXIS,               // DlgId     
        IDC_PB_HELP,                    // HelpId    
        IDH_DRVF_COMMAND+LONG_PAD,		// HelpIdx   
        FNC_BIN_INST_SIZE,          // TotalSize 
        NET_PARAM_TYPE, DC2_TX_2AXIS2,   // p.#8      
    DRIVER_SENTENIAL

DRIVER_SENTINEL        
END



DRVF_PORT_INPUT NET_PARAM_TYPE LOADONCALL DISCARDABLE          // paragraph #8
BEGIN                                   
    5,                                  // how many parameters does this function has 

    //  1 - UINT16   FunctionId;   Offset FNC_HD_FUNCTIONID, Size FNC_HD_FUNCTIONID_SIZE 
        "\0",                           // short name 
        "\0",
        0L, 0L, 0L, 0L                  // Expansion 
        0,                              // CTRL_ID CtrlId_type - Id of control in dll dialog for this param value or type if using default dlg 
        HELP_IDX_NONE                   // HELP_IDX m_HelpIdx
        FNC_HD_FUNCTIONID,              // DWORD Offset - Offset in config block for this param value 
        FNC_HD_FUNCTIONID_SIZE,         // DWORD Size - Number of bytes in config block for this param value 
        // ParamTypes (WORD) Type - How the data is to be processed 
        PT_CONST,
        DRVF_PORT_INPUT+LONG_PAD,       // function's id.  ensure long 
    DRIVER_SENTINEL
        
    //  2 - UIOTREF2UINT16  ofsResult;   Offset FNC_HD_RESULT, Size FNC_HD_RESULT_SIZE 
        "Result code\0",                // short name 
        "Result code\0",
        0L, 0L, 0L, 0L                  // Expansion 
        IDC_E_RESULT,                   // CTRL_ID CtrlId_type - Id of control in dll dialog for this param value or type if using default dlg 
        HELP_IDX_NONE                   // HELP_IDX m_HelpIdx
        FNC_HD_RESULT,                  // DWORD Offset - Offset in config block for this param value 
        FNC_HD_RESULT_SIZE,             // DWORD Size - size of the parameter pointed to by the reference 
        // ParamTypes (WORD) Type - How the data is to be processed 
        PT_REF,
    DRIVER_SENTINEL
    
    //  3 - UIOTREF2UINT16  ofsInValue;   Offset FNC_PO_IN_VALUE, Size FNC_PO_IN_VALUE_SIZE 
        "Input value\0",				// short name 
        "Input value\0",
        0L, 0L, 0L, 0L                  // Expansion 
        IDC_E_VALUE,                    // CTRL_ID CtrlId_type - Id of control in dll dialog for this param value or type if using default dlg 
        HELP_IDX_NONE                   // HELP_IDX m_HelpIdx
        FNC_PO_IN_VALUE,                // DWORD Offset - Offset in config block for this param value 
        FNC_PO_IN_VALUE_SIZE,           // DWORD Size - size of the parameter pointed to by the reference 
        // ParamTypes (WORD) Type - How the data is to be processed 
        PT_REF,
    DRIVER_SENTINEL

    //  4 - UINT32 Address;   Offset FNC_PO_ADDRESS, Size FNC_PO_ADDRESS_SIZE 
        "Input Port Address\0",         // short name 
        "Input Port Address\0",
        0L, 0L, 0L, 0L,                 // Expansion 
        IDC_E_ADDRESS,                  // CTRL_ID CtrlId_type - Id of control in dll dialog for this param value or type if using default dlg 
        HELP_IDX_NONE                   // HELP_IDX m_HelpIdx
        FNC_PO_ADDRESS,                 // DWORD Offset - Offset in config block for this param value 
        FNC_PO_ADDRESS_SIZE,            // DWORD Size, in bytes     
        // ParamTypes (WORD) Type - How the data is to be processed 
        PT_VALUE,
          0L,                           // UINT32 m_Default
          0L,                           // UINT32 m_Min
        0xffff, 0,                      // UINT32 m_Max
          1L,                           // UINT32 m_Step
    DRIVER_SENTINEL

    //  5 - UINT16  Length;   Offset FNC_PO_LENGTH, Size FNC_PO_LENGTH_SIZE 
        "Input Port Size\0",            // short name 
        "Input Port Size\0",
        0L, 0L, 0L, 0L,                 // Expansion 
        IDC_CO_LENGTH,                  // CTRL_ID CtrlId_type - Id of control in dll dialog for this param value or type if using default dlg 
        HELP_IDX_NONE                   // HELP_IDX m_HelpIdx
        FNC_PO_LENGTH,                  // DWORD Offset - Offset in config block for this param value 
        FNC_PO_LENGTH_SIZE,             // DWORD Size, in bytes     
        // ParamTypes (WORD) Type - How the data is to be processed 
        PT_STRING_LIST,
        1L,
        NET_CFGLIST_TYPE, IDC_CO_LENGTH,  // p.#6
    DRIVER_SENTINEL
    
DRIVER_SENTINEL        
END

IDC_CO_LENGTH NET_CFGLIST_TYPE LOADONCALL DISCARDABLE       // paragraph #6
BEGIN
    2,
    1L,  "Byte\0"                       // UINT32, string
    2L,  "Word\0",
    DRIVER_SENTINEL        
END


DRVF_PORT_OUTPUT NET_PARAM_TYPE LOADONCALL DISCARDABLE          // paragraph #8
BEGIN                                   
    5,                                  // how many parameters does this function has 

    //  1 - UINT16   FunctionId;   Offset FNC_HD_FUNCTIONID, Size FNC_HD_FUNCTIONID_SIZE 
        "\0",                           // short name 
        "\0",
        0L, 0L, 0L, 0L                  // Expansion 
        0,                              // CTRL_ID CtrlId_type - Id of control in dll dialog for this param value or type if using default dlg 
        HELP_IDX_NONE                   // HELP_IDX m_HelpIdx
        FNC_HD_FUNCTIONID,              // DWORD Offset - Offset in config block for this param value 
        FNC_HD_FUNCTIONID_SIZE,         // DWORD Size - Number of bytes in config block for this param value 
        // ParamTypes (WORD) Type - How the data is to be processed 
        PT_CONST,
        DRVF_PORT_OUTPUT+LONG_PAD,      // function's id.  ensure long 
    DRIVER_SENTINEL
        
    //  2 - UIOTREF2UINT16  ofsResult;   Offset FNC_HD_RESULT, Size FNC_HD_RESULT_SIZE 
        "Result code\0",                // short name 
        "Result code\0",
        0L, 0L, 0L, 0L                  // Expansion 
        IDC_E_RESULT,                   // CTRL_ID CtrlId_type - Id of control in dll dialog for this param value or type if using default dlg 
        HELP_IDX_NONE                   // HELP_IDX m_HelpIdx
        FNC_HD_RESULT,                  // DWORD Offset - Offset in config block for this param value 
        FNC_HD_RESULT_SIZE,             // DWORD Size - size of the parameter pointed to by the reference 
        // ParamTypes (WORD) Type - How the data is to be processed 
        PT_REF,
    DRIVER_SENTINEL
    
    //  3 - UINT32 Address;   Offset FNC_PO_ADDRESS, Size FNC_PO_ADDRESS_SIZE 
        "Output Port Address\0",        // short name 
        "Output Port Address\0",
        0L, 0L, 0L, 0L,                 // Expansion 
        IDC_E_ADDRESS,                  // CTRL_ID CtrlId_type - Id of control in dll dialog for this param value or type if using default dlg 
        HELP_IDX_NONE                   // HELP_IDX m_HelpIdx
        FNC_PO_ADDRESS,                 // DWORD Offset - Offset in config block for this param value 
        FNC_PO_ADDRESS_SIZE,            // DWORD Size, in bytes     
        // ParamTypes (WORD) Type - How the data is to be processed 
        PT_VALUE,
          0L,                           // UINT32 m_Default
          0L,                           // UINT32 m_Min
        0xffff, 0,                      // UINT32 m_Max
          1L,                           // UINT32 m_Step
    DRIVER_SENTINEL

    //  4 - UINT16  OutValue;   Offset FNC_PO_OUT_VALUE, Size FNC_PO_OUT_VALUE_SIZE 
        "Output value\0",                      // short name 
        "Output value\0",
        0L, 0L, 0L, 0L                  // Expansion 
        IDC_E_VALUE,                    // CTRL_ID CtrlId_type - Id of control in dll dialog for this param value or type if using default dlg 
        HELP_IDX_NONE                   // HELP_IDX m_HelpIdx
        FNC_PO_OUT_VALUE,               // DWORD Offset - Offset in config block for this param value 
        FNC_PO_OUT_VALUE_SIZE,          // DWORD Size - size of the parameter pointed to by the reference 
        // ParamTypes (WORD) Type - How the data is to be processed 
        PT_VALUE,
          0L,                           // UINT32 m_Default
          0L,                           // UINT32 m_Min
        0xffff, 0,                      // UINT32 m_Max
          1L,                           // UINT32 m_Step
    DRIVER_SENTINEL
    
    //  5 - UINT16  Length;   Offset FNC_PO_LENGTH, Size FNC_PO_LENGTH_SIZE 
        "Output Port Size\0",           // short name 
        "Output Port Size\0",
        0L, 0L, 0L, 0L,                 // Expansion 
        IDC_CO_LENGTH,                  // CTRL_ID CtrlId_type - Id of control in dll dialog for this param value or type if using default dlg 
        HELP_IDX_NONE                   // HELP_IDX m_HelpIdx
        FNC_PO_LENGTH,                  // DWORD Offset - Offset in config block for this param value 
        FNC_PO_LENGTH_SIZE,             // DWORD Size, in bytes     
        // ParamTypes (WORD) Type - How the data is to be processed 
        PT_STRING_LIST,
        1L,
        NET_CFGLIST_TYPE, IDC_CO_LENGTH,  // p.#6
    DRIVER_SENTINEL

DRIVER_SENTINEL        
END


DRVF_PEEK NET_PARAM_TYPE LOADONCALL DISCARDABLE          // paragraph #8
BEGIN                                   
    5,                                  // how many parameters does this function has 

    //  1 - UINT16   FunctionId;   Offset FNC_HD_FUNCTIONID, Size FNC_HD_FUNCTIONID_SIZE 
        "\0",                           // short name 
        "\0",
        0L, 0L, 0L, 0L                  // Expansion 
        0,                              // CTRL_ID CtrlId_type - Id of control in dll dialog for this param value or type if using default dlg 
        HELP_IDX_NONE                   // HELP_IDX m_HelpIdx
        FNC_HD_FUNCTIONID,              // DWORD Offset - Offset in config block for this param value 
        FNC_HD_FUNCTIONID_SIZE,         // DWORD Size - Number of bytes in config block for this param value 
        // ParamTypes (WORD) Type - How the data is to be processed 
        PT_CONST,
        DRVF_PEEK+LONG_PAD,             // function's id.  ensure long 
    DRIVER_SENTINEL

    //  2 - UIOTREF2UINT16  ofsResult;   Offset FNC_HD_RESULT, Size FNC_HD_RESULT_SIZE 
        "Result code\0",                // short name 
        "Result code\0",
        0L, 0L, 0L, 0L                  // Expansion 
        IDC_E_RESULT,                   // CTRL_ID CtrlId_type - Id of control in dll dialog for this param value or type if using default dlg 
        HELP_IDX_NONE                   // HELP_IDX m_HelpIdx
        FNC_HD_RESULT,                  // DWORD Offset - Offset in config block for this param value 
        FNC_HD_RESULT_SIZE,             // DWORD Size - size of the parameter pointed to by the reference 
        // ParamTypes (WORD) Type - How the data is to be processed 
        PT_REF,
    DRIVER_SENTINEL
        
    //  3 - UINT16 WLength;   Offset FNC_CM_WLENGTH, Size FNC_CM_WLENGTH_SIZE 
        "# of bytes to read\0",         // short name 
        "# of bytes to read\0",
        0L, 0L, 0L, 0L,                 // Expansion 
        IDC_E_WLENGTH,                  // CTRL_ID CtrlId_type - Id of control in dll dialog for this param value or type if using default dlg 
        HELP_IDX_NONE,                  // HELP_IDX m_HelpIdx
        FNC_CM_WLENGTH,                 // DWORD Offset - Offset in config block for this param value 
        FNC_CM_WLENGTH_SIZE,            // DWORD Size - PT_BUFFER --> 8L 
        // ParamTypes (WORD) Type - How the data is to be processed 
        PT_VALUE,
          1L,                           // UINT32 m_Default
          1L,                           // UINT32 m_Min
        0xffffL,                        // UINT32 m_Max
          1L,                           // UINT32 m_Step
    DRIVER_SENTINEL
    
    //  4 - PTBUFFER   RBuffer;   Offset FNC_CM_RBUFFER, Size FNC_CM_RBUFFER_SIZE 
        "Read Buffer\0",                // short name 
        "Read Buffer\0",
        0L, 0L, 0L, 0L,                 // Expansion 
        IDC_E_RBUFFER,                  // CTRL_ID CtrlId_type - Id of control in dll dialog for this param value or type if using default dlg 
        HELP_IDX_NONE,                  // HELP_IDX m_HelpIdx
        FNC_CM_RBUFFER,                 // DWORD Offset - Offset in config block for this param value 
        FNC_CM_RBUFFER_SIZE,            // DWORD Size - PT_BUFFER --> 8L 
        // ParamTypes (WORD) Type - How the data is to be processed 
        PT_BUFFER,
    DRIVER_SENTINEL
    
    //  5 - UINT32 Address;   Offset FNC_CM_ADDRESS, Size FNC_CM_ADDRESS_SIZE 
        "Offset\0",                     // short name 
        "Offset\0",
        0L, 0L, 0L, 0L                  // Expansion 
        IDC_E_ADDRESS,                  // CTRL_ID CtrlId_type - Id of control in dll dialog for this param value or type if using default dlg 
        HELP_IDX_NONE                   // HELP_IDX m_HelpIdx
        FNC_CM_ADDRESS,                 // DWORD Offset - Offset in config block for this param value 
        FNC_CM_ADDRESS_SIZE,            // DWORD Size, in bytes     
        // ParamTypes (WORD) Type - How the data is to be processed 
        PT_VALUE,
          0L,                           // UINT32 m_Default
          0L,                           // UINT32 m_Min
         0xffffL,                       // UINT32 m_Max
          1L,                           // UINT32 m_Step
    DRIVER_SENTINEL
    
DRIVER_SENTINEL        
END


DRVF_POKE NET_PARAM_TYPE LOADONCALL DISCARDABLE          // paragraph #8
BEGIN                                   
    5,                                  // how many parameters does this function has 

    //  1 - UINT16   FunctionId;   Offset FNC_HD_FUNCTIONID, Size FNC_HD_FUNCTIONID_SIZE 
        "\0",                           // short name 
        "\0",
        0L, 0L, 0L, 0L                  // Expansion 
        0,                              // CTRL_ID CtrlId_type - Id of control in dll dialog for this param value or type if using default dlg 
        HELP_IDX_NONE                   // HELP_IDX m_HelpIdx
        FNC_HD_FUNCTIONID,              // DWORD Offset - Offset in config block for this param value 
        FNC_HD_FUNCTIONID_SIZE,         // DWORD Size - Number of bytes in config block for this param value 
        // ParamTypes (WORD) Type - How the data is to be processed 
        PT_CONST,
        DRVF_POKE+LONG_PAD,             // function's id.  ensure long 
    DRIVER_SENTINEL
        
    //  2 - UIOTREF2UINT16  ofsResult;   Offset FNC_HD_RESULT, Size FNC_HD_RESULT_SIZE 
        "Result code\0",                // short name 
        "Result code\0",
        0L, 0L, 0L, 0L                  // Expansion 
        IDC_E_RESULT,                   // CTRL_ID CtrlId_type - Id of control in dll dialog for this param value or type if using default dlg 
        HELP_IDX_NONE                   // HELP_IDX m_HelpIdx
        FNC_HD_RESULT,                  // DWORD Offset - Offset in config block for this param value 
        FNC_HD_RESULT_SIZE,             // DWORD Size - size of the parameter pointed to by the reference 
        // ParamTypes (WORD) Type - How the data is to be processed 
        PT_REF,
    DRIVER_SENTINEL

    //  3 - UINT16 WLength;   Offset FNC_CM_WLENGTH, Size FNC_CM_WLENGTH_SIZE 
        "# of bytes to write\0",        // short name 
        "# of bytes to write\0",
        0L, 0L, 0L, 0L,                 // Expansion 
        IDC_E_WLENGTH,                  // CTRL_ID CtrlId_type - Id of control in dll dialog for this param value or type if using default dlg 
        HELP_IDX_NONE,                  // HELP_IDX m_HelpIdx
        FNC_CM_WLENGTH,                 // DWORD Offset - Offset in config block for this param value 
        FNC_CM_WLENGTH_SIZE,            // DWORD Size - PT_BUFFER --> 8L 
        // ParamTypes (WORD) Type - How the data is to be processed 
        PT_VALUE,
          1L,                           // UINT32 m_Default
          1L,                           // UINT32 m_Min
        0xffffL,                        // UINT32 m_Max
          1L,                           // UINT32 m_Step
    DRIVER_SENTINEL
    
    //  4 - PTBUFFER   WBuffer;   Offset FNC_CM_WBUFFER, Size FNC_CM_WBUFFER_SIZE 
        "Write Buffer\0",               // short name 
        "Write Buffer\0",
        0L, 0L, 0L, 0L,                 // Expansion 
        IDC_E_WBUFFER,                  // CTRL_ID CtrlId_type - Id of control in dll dialog for this param value or type if using default dlg 
        HELP_IDX_NONE,                  // HELP_IDX m_HelpIdx
        FNC_CM_WBUFFER,                 // DWORD Offset - Offset in config block for this param value 
        FNC_CM_WBUFFER_SIZE,            // DWORD Size - PT_BUFFER --> 8L 
        // ParamTypes (WORD) Type - How the data is to be processed 
        PT_BUFFER,
    DRIVER_SENTINEL
    
    //  5 - UINT32 Address;   Offset FNC_CM_ADDRESS, Size FNC_CM_ADDRESS_SIZE 
        "Offset\0",                     // short name 
        "Offset\0",
        0L, 0L, 0L, 0L                  // Expansion 
        IDC_E_ADDRESS,                  // CTRL_ID CtrlId_type - Id of control in dll dialog for this param value or type if using default dlg 
        HELP_IDX_NONE                   // HELP_IDX m_HelpIdx
        FNC_CM_ADDRESS,                 // DWORD Offset - Offset in config block for this param value 
        FNC_CM_ADDRESS_SIZE,            // DWORD Size, ib bytes     
        // ParamTypes (WORD) Type - How the data is to be processed 
        PT_VALUE,
          0L,                           // UINT32 m_Default
          0L,                           // UINT32 m_Min
         0xffffL,                       // UINT32 m_Max
          1L,                           // UINT32 m_Step
    DRIVER_SENTINEL
    


DRIVER_SENTINEL        
END





////////////////////   Station configuration block  /////////////////////////////

IDD_STATION DEV_CFG_TYPE LOADONCALL DISCARDABLE      // paragraph #4    device confif dlg box  associated!
BEGIN
    IDD_STATION,                        // DLG_ID - Id of dialog for this function, 0 if use default dialog
    0,                                  // CTRL_ID - DescId of the Description area
    IDHELP,                             // HELP_ID - CtrlId of the Help button
    IDH_STATION+LONG_PAD,               // HELP_IDX m_HelpIdx
    0L, 0L, 0L, 0L                      // Expansion 
    DEVCONFIG_SIZE,                     // UINT16 TotalSize - Number of bytes in config block
    5,                                  // UINT16 CfgCount - Number of inline entries
    DRIVER_SENTINEL
    
    //  1 - UINT32  NetcfgId, Offset DEV_HD_DRVID, Size DEV_HD_DRVID_SIZE 
    "NetcfgId\0",
    "\0",
    0L, 0L, 0L, 0L                      // Expansion 
    0,                                  // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE                       // HELP_IDX m_HelpIdx
    DEV_HD_DRVID,                          // UINT16 - Offset in DEVICONFIG where value is
    0,                                  // UINT16 m_Bit - Bit offset in byte indexed by offset
    DEV_HD_DRVID_SIZE,                     // UINT16 m_Bits - Number of bits wide the value is
    CT_CONST,                           // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
    NETCONFIG_ID,                       // UINT32 const value
    DRIVER_SENTINEL        
    
    //  2 - UINT32  DevcfgId, Offset DEV_HD_ID, Size DEV_HD_ID_SIZE 
    "DevcfgId\0",
    "\0",
    0L, 0L, 0L, 0L                      // Expansion 
    0,                                  // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE                       // HELP_IDX m_HelpIdx
    DEV_HD_ID,                          // UINT16 - Offset in DEVICONFIG where value is
    0,                                  // UINT16 m_Bit - Bit offset in byte indexed by offset
    DEV_HD_ID_SIZE,                     // UINT16 m_Bits - Number of bits wide the value is
    CT_CONST,                           // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
    STATIONCONFIG_ID,                    // UINT32 const value
    DRIVER_SENTINEL        
    
    //  3 - UINT32  DevcfgVers, Offset DEV_HD_VERS, Size DEV_HD_VERS_SIZE 
    "DevcfgVers\0",
    "\0",
    0L, 0L, 0L, 0L,                     // Expansion 
    0,                                  // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE,                      // HELP_IDX m_HelpIdx
    DEV_HD_VERS,                        // UINT16 - Offset in DEVICONFIG where value is
    0                                   // UINT16 m_Bit - Bit offset in byte indexed by offset
    DEV_HD_VERS_SIZE,                   // UINT16 m_Bits - Number of bits wide the value is
    CT_CONST,                           // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
    STATIONCONFIG_VERS,                 // UINT32 const value
    DRIVER_SENTINEL        
    
    
    //  4 - UINT16 Address, Offset DEV_ST_ADDRESS, Size DEV_ST_ADDRESS_SIZE 
    "Station Address\0",
    "Network link address for this device\0",
    0L, 0L, 0L, 0L,                     // Expansion 
    IDC_CO_ADDRESS,                     // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE,                      // HELP_IDX m_HelpIdx
    DEV_ST_ADDRESS,                     // UINT16 - Offset in DEVICONFIG where value is
    0,                                  // UINT16 m_Bit - Bit offset in byte indexed by offset
    DEV_ST_ADDRESS_SIZE,                // UINT16 m_Bits - Number of bits wide the value is
    CT_VALLIST,                         // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
      IO_STATION_DEF,                               // UINT32 m_Default
      IO_STATION_MIN,                               // UINT32 m_Min
      MAX_DEVICES-1+LONG_PAD,           // UINT32 m_Max
      1L,                               // UINT32 m_Step
    "%ld\0"                             // CString m_Text/Fmt
    DRIVER_SENTINEL        
    
    //  5 - UINT16 bCritical; Offset DEV_ST_CRITICAL, Size DEV_ST_CRITICAL_SIZE 
    "Critical Device\0",
    "If any device having Critical Device control ON misses at Run (Online()) time, this command will fail \0",
    0L, 0L, 0L, 0L,                     // Expansion 
    IDC_CB_CRITICAL,                    // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE,                      // HELP_IDX m_HelpIdx
    DEV_ST_CRITICAL,                    // UINT16 Offset in data block where value is
    0,                                  // UINT16 m_Bit - Bit offset in byte indexed by offset
    DEV_ST_CRITICAL_SIZE,               // UINT16 m_Bits - Number of bits wide the value is
    CT_CHECK,                           // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
    1L,                                 // UINT32 m_Default
    0L,                                 // UINT32 m_Off
    1L,                                 // UINT32 m_On
    DRIVER_SENTINEL        

DRIVER_SENTINEL
END



////////////////////////////////   station descriptors   ///////////////////////////////////

DEVICE_STATION DEVICE_TYPE LOADONCALL DISCARDABLE        // paragraph #5      device type associated!
BEGIN
    // Device Cookie, Dev Prog, In, Out 
    DEVICE_STATION+LONG_PAD,            // ensure a long value 
        0L, 0L, 0L,                     // Ana Prog, In, Out 
        0L, 0L, 0L,                     // Total count of points 
        0,                              // Not used
        // Name 
        "Station\0",
        // Description 
        "This is a station (node, rack, adapter). \r\n"
        ".\0",
        0L, 0L, 0L, 0L,                 // Expansion 

        0,      // p.#3     // RT_USER FuncType - Resource type for network/device functions, 0 if none 
        0,               // RR_USER FuncRef - Ref to list of network function head, 0 if none 
  
        DEV_CFG_TYPE,       // p.#4     // RT_USER CfgType - Resource type for device config, 0 if none 
        IDD_STATION,                    // RR_USER CfgRef - Ref to structure def of device config data, 0 if none 

        0,       // p.#7     // RT_USER PntType - Resource type for point info, 0 if none 
        0,					// RR_USER PntRef - Ref to structure def of point data 
    DRIVER_SENTINEL    


DRIVER_SENTINEL
END         


///////////////////////




////////////////////  Generic Module configuration block  //////////////////
IDD_MODULE_GENERIC DEV_CFG_TYPE LOADONCALL DISCARDABLE      // paragraph #4    device confif dlg box  associated!
BEGIN
    IDD_MODULE_GENERIC,                 // DLG_ID - Id of dialog for this function, 0 if use default dialog
    0,                                  // CTRL_ID - DescId of the Description area
    IDHELP,                             // HELP_ID - CtrlId of the Help button
    IDH_MODULE_GENERIC+LONG_PAD,        // HELP_IDX m_HelpIdx
    0L, 0L, 0L, 0L                      // Expansion 
    DEVCONFIG_SIZE,                     // UINT16 TotalSize - Number of bytes in config block
    10,                                  // UINT16 CfgCount - Number of inline entries
    DRIVER_SENTINEL
    
    //  1 - UINT32  NetcfgId, Offset DEV_HD_DRVID, Size DEV_HD_DRVID_SIZE 
    "NetcfgId\0",
    "\0",
    0L, 0L, 0L, 0L                      // Expansion 
    0,                                  // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE                       // HELP_IDX m_HelpIdx
    DEV_HD_DRVID,                          // UINT16 - Offset in DEVICONFIG where value is
    0,                                  // UINT16 m_Bit - Bit offset in byte indexed by offset
    DEV_HD_DRVID_SIZE,                     // UINT16 m_Bits - Number of bits wide the value is
    CT_CONST,                           // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
    NETCONFIG_ID,                       // UINT32 const value
    DRIVER_SENTINEL        
    
    //  2 - UINT32  DevcfgId, Offset DEV_HD_ID, Size DEV_HD_ID_SIZE 
    "DevcfgId\0",
    "\0",
    0L, 0L, 0L, 0L                      // Expansion 
    0,                                  // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE                       // HELP_IDX m_HelpIdx
    DEV_HD_ID,                          // UINT16 - Offset in DEVICONFIG where value is
    0,                                  // UINT16 m_Bit - Bit offset in byte indexed by offset
    DEV_HD_ID_SIZE,                     // UINT16 m_Bits - Number of bits wide the value is
    CT_CONST,                           // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
    MODULECONFIG_ID,                    // UINT32 const value
    DRIVER_SENTINEL        
    
    //  3 - UINT32  DevcfgVers, Offset DEV_HD_VERS, Size DEV_HD_VERS_SIZE 
    "DevcfgVers\0",
    "\0",
    0L, 0L, 0L, 0L,                     // Expansion 
    0,                                  // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE,                      // HELP_IDX m_HelpIdx
    DEV_HD_VERS,                        // UINT16 - Offset in DEVICONFIG where value is
    0                                   // UINT16 m_Bit - Bit offset in byte indexed by offset
    DEV_HD_VERS_SIZE,                   // UINT16 m_Bits - Number of bits wide the value is
    CT_CONST,                           // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
    MODULECONFIG_VERS,                  // UINT32 const value
    DRIVER_SENTINEL        
    
    
    //  4 - UINT16 Address, Offset DEV_MD_ADDRESS, Size DEV_MD_ADDRESS_SIZE 
    "Station Address\0",
    "Network link address for this device\0",
    0L, 0L, 0L, 0L,                     // Expansion 
    IDC_CO_ADDRESS,                     // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE,                      // HELP_IDX m_HelpIdx
    DEV_MD_ADDRESS,                     // UINT16 - Offset in DEVICONFIG where value is
    0,                                  // UINT16 m_Bit - Bit offset in byte indexed by offset
    DEV_MD_ADDRESS_SIZE,                // UINT16 m_Bits - Number of bits wide the value is
    CT_VALLIST,                         // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
      0L,                               // UINT32 m_Default
      0L,                               // UINT32 m_Min
      MAX_DEVICES-1+LONG_PAD,           // UINT32 m_Max
      1L,                               // UINT32 m_Step
    "%ld\0"                             // CString m_Text/Fmt
    DRIVER_SENTINEL        
    
    //  5 - UINT16 Slot, Offset DEV_MD_SLOT, Size DEV_MD_SLOT_SIZE 
    "Slot #\0",
    "\0",
    0L, 0L, 0L, 0L,                     // Expansion 
    IDC_CO_SLOT,						// CTRL_ID m_CtrlId - 
    HELP_IDX_NONE,                      // HELP_IDX m_HelpIdx
    DEV_MD_SLOT,						// UINT16 - Offset in DEVICONFIG where value is
    0,                                  // UINT16 m_Bit - Bit offset in byte indexed by offset
    DEV_MD_SLOT_SIZE,					// UINT16 m_Bits - Number of bits wide the value is
    CT_VALLIST,                         // CFG_TYPES m_CfgType
    //offset DPR
      0L,                               // UINT32 m_Default
      0L,                               // UINT32 m_Min
      0xFFFL,								// UINT32 m_Max
      1L,						            // UINT32 m_Step
    "0x%03lXh\0"			             // CString m_Text/Fmt
    DRIVER_SENTINEL        
    
    //  6 - UINT16 bCritical; Offset DEV_MD_CRITICAL, Size DEV_MD_CRITICAL_SIZE 
    "Critical Device\0",
    "If any device having Critical Device control ON misses at Run (Online()) time, this command will fail \0",
    0L, 0L, 0L, 0L,                     // Expansion 
    IDC_CB_CRITICAL,                    // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE,                      // HELP_IDX m_HelpIdx
    DEV_MD_CRITICAL,                       // UINT16 Offset in data block where value is
    0,                                  // UINT16 m_Bit - Bit offset in byte indexed by offset
    DEV_MD_CRITICAL_SIZE,                  // UINT16 m_Bits - Number of bits wide the value is
    CT_CHECK,                           // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
    1L,                                 // UINT32 m_Default
    0L,                                 // UINT32 m_Off
    1L,                                 // UINT32 m_On
    DRIVER_SENTINEL        

    //  7 - UINT16 bSwapBytes; Offset DEV_MD_SWAP, Size DEV_MD_SWAP_SIZE 
    "Swap Bytes\0",
    "\0",
    0L, 0L, 0L, 0L,                     // Expansion 
    IDC_CB_SWAP,						// CTRL_ID m_CtrlId - 
    HELP_IDX_NONE,                      // HELP_IDX m_HelpIdx
    DEV_MD_SWAP,                       // UINT16 Offset in data block where value is
    0,                                  // UINT16 m_Bit - Bit offset in byte indexed by offset
    DEV_MD_SWAP_SIZE,                  // UINT16 m_Bits - Number of bits wide the value is
    CT_CHECK,                           // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
    0L,                                 // UINT32 m_Default
    0L,                                 // UINT32 m_Off
    1L,                                 // UINT32 m_On
    DRIVER_SENTINEL        

    //  8 - UINT16 InputSize, Offset DEV_MD_INPUTSZ, Size DEV_MD_INPUTSZ_SIZE 
    "Input Size\0",
    "\0",
    0L, 0L, 0L, 0L,                     // Expansion 
    IDC_CO_INPUTSZ,                     // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE,                      // HELP_IDX m_HelpIdx
    DEV_MD_INPUTSZ,                     // UINT16 - Offset in DEVICONFIG where value is
    0,                                  // UINT16 m_Bit - Bit offset in byte indexed by offset
    DEV_MD_INPUTSZ_SIZE,                // UINT16 m_Bits - Number of bits wide the value is
    CT_VALLIST,                         // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
      0L,                               // UINT32 m_Default
      0L,                               // UINT32 m_Min
      128L,								// UINT32 m_Max
      1L,                               // UINT32 m_Step
    "%ld\0"                             // CString m_Text/Fmt
    DRIVER_SENTINEL        

    //  9 - UINT16 OutputSize, Offset DEV_MD_OUTPUTSZ, Size DEV_MD_OUTPUTSZ_SIZE 
    "Output Size\0",
    "\0",
    0L, 0L, 0L, 0L,                     // Expansion 
    IDC_CO_OUTPUTSZ,                     // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE,                      // HELP_IDX m_HelpIdx
    DEV_MD_OUTPUTSZ,                     // UINT16 - Offset in DEVICONFIG where value is
    0,                                  // UINT16 m_Bit - Bit offset in byte indexed by offset
    DEV_MD_OUTPUTSZ_SIZE,                // UINT16 m_Bits - Number of bits wide the value is
    CT_VALLIST,                         // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
      0L,                               // UINT32 m_Default
      0L,                               // UINT32 m_Min
      128L,								// UINT32 m_Max
      1L,                               // UINT32 m_Step
    "%ld\0"                             // CString m_Text/Fmt
    DRIVER_SENTINEL        


    //  10 - UINT8 ProductCode[8];   Offset DEV_MD_PCODE, Size DEV_MD_PCODE_SIZE 
    "Product Code\0",
    "Product Code\0",
    0L, 0L, 0L, 0L,                     // Expansion 
    IDC_E_PCODE,                        // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE                       // HELP_IDX m_HelpIdx
    DEV_MD_PCODE                        // UINT16 DeviceNet_DualPortAddress - Offset in NETCONFIG data block where value is
    0,                                  // UINT16 m_Bit - Bit offset in byte indexed by offset
    DEV_MD_PCODE_SIZE,                  // UINT16 m_Bits - Number of bits wide the value is
    CT_EDIT,                            // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
    "0\0"                               // CString m_Text/Fmt
    DRIVER_SENTINEL        

DRIVER_SENTINEL
END

IDD_MODULEIO_GENERIC DEV_CFG_TYPE LOADONCALL DISCARDABLE      // paragraph #4    device confif dlg box  associated!
BEGIN
    IDD_MODULEIO_GENERIC,                 // DLG_ID - Id of dialog for this function, 0 if use default dialog
    0,                                  // CTRL_ID - DescId of the Description area
    IDHELP,                             // HELP_ID - CtrlId of the Help button
    IDH_MODULE_GENERIC+LONG_PAD,        // HELP_IDX m_HelpIdx
    0L, 0L, 0L, 0L                      // Expansion 
    DEVCONFIG_SIZE,                     // UINT16 TotalSize - Number of bytes in config block
    10,                                  // UINT16 CfgCount - Number of inline entries
    DRIVER_SENTINEL
    
    //  1 - UINT32  NetcfgId, Offset DEV_HD_DRVID, Size DEV_HD_DRVID_SIZE 
    "NetcfgId\0",
    "\0",
    0L, 0L, 0L, 0L                      // Expansion 
    0,                                  // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE                       // HELP_IDX m_HelpIdx
    DEV_HD_DRVID,                          // UINT16 - Offset in DEVICONFIG where value is
    0,                                  // UINT16 m_Bit - Bit offset in byte indexed by offset
    DEV_HD_DRVID_SIZE,                     // UINT16 m_Bits - Number of bits wide the value is
    CT_CONST,                           // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
    NETCONFIG_ID,                       // UINT32 const value
    DRIVER_SENTINEL        
    
    //  2 - UINT32  DevcfgId, Offset DEV_HD_ID, Size DEV_HD_ID_SIZE 
    "DevcfgId\0",
    "\0",
    0L, 0L, 0L, 0L                      // Expansion 
    0,                                  // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE                       // HELP_IDX m_HelpIdx
    DEV_HD_ID,                          // UINT16 - Offset in DEVICONFIG where value is
    0,                                  // UINT16 m_Bit - Bit offset in byte indexed by offset
    DEV_HD_ID_SIZE,                     // UINT16 m_Bits - Number of bits wide the value is
    CT_CONST,                           // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
    MODULECONFIG_ID,                    // UINT32 const value
    DRIVER_SENTINEL        
    
    //  3 - UINT32  DevcfgVers, Offset DEV_HD_VERS, Size DEV_HD_VERS_SIZE 
    "DevcfgVers\0",
    "\0",
    0L, 0L, 0L, 0L,                     // Expansion 
    0,                                  // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE,                      // HELP_IDX m_HelpIdx
    DEV_HD_VERS,                        // UINT16 - Offset in DEVICONFIG where value is
    0                                   // UINT16 m_Bit - Bit offset in byte indexed by offset
    DEV_HD_VERS_SIZE,                   // UINT16 m_Bits - Number of bits wide the value is
    CT_CONST,                           // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
    MODULECONFIG_VERS,                  // UINT32 const value
    DRIVER_SENTINEL        
    
    
    //  4 - UINT16 Address, Offset DEV_MD_ADDRESS, Size DEV_MD_ADDRESS_SIZE 
    "Station Address\0",
    "Network link address for this device\0",
    0L, 0L, 0L, 0L,                     // Expansion 
    IDC_CO_ADDRESS,                     // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE,                      // HELP_IDX m_HelpIdx
    DEV_MD_ADDRESS,                     // UINT16 - Offset in DEVICONFIG where value is
    0,                                  // UINT16 m_Bit - Bit offset in byte indexed by offset
    DEV_MD_ADDRESS_SIZE,                // UINT16 m_Bits - Number of bits wide the value is
    CT_VALLIST,                         // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
      0L,                               // UINT32 m_Default
      0L,                               // UINT32 m_Min
      MAX_DEVICES-1+LONG_PAD,           // UINT32 m_Max
      1L,                               // UINT32 m_Step
    "%ld\0"                             // CString m_Text/Fmt
    DRIVER_SENTINEL        
    
    //  5 - UINT16 Slot, Offset DEV_MD_SLOT, Size DEV_MD_SLOT_SIZE 
    "Slot #\0",
    "\0",
    0L, 0L, 0L, 0L,                     // Expansion 
    IDC_CO_SLOT,						// CTRL_ID m_CtrlId - 
    HELP_IDX_NONE,                      // HELP_IDX m_HelpIdx
    DEV_MD_SLOT,						// UINT16 - Offset in DEVICONFIG where value is
    0,                                  // UINT16 m_Bit - Bit offset in byte indexed by offset
    DEV_MD_SLOT_SIZE,					// UINT16 m_Bits - Number of bits wide the value is
    CT_VALLIST,                         // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
      PORT_DEFAULTL,                               // UINT32 m_Default
      PORT_MINL,                               // UINT32 m_Min
      PORT_MAXL,								// UINT32 m_Max
      PORT_STEPL,  
    "0x%03lXh\0"                             // CString m_Text/Fmt
    DRIVER_SENTINEL        
    
    //  6 - UINT16 bCritical; Offset DEV_MD_CRITICAL, Size DEV_MD_CRITICAL_SIZE 
    "Critical Device\0",
    "If any device having Critical Device control ON misses at Run (Online()) time, this command will fail \0",
    0L, 0L, 0L, 0L,                     // Expansion 
    IDC_CB_CRITICAL,                    // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE,                      // HELP_IDX m_HelpIdx
    DEV_MD_CRITICAL,                       // UINT16 Offset in data block where value is
    0,                                  // UINT16 m_Bit - Bit offset in byte indexed by offset
    DEV_MD_CRITICAL_SIZE,                  // UINT16 m_Bits - Number of bits wide the value is
    CT_CHECK,                           // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
    1L,                                 // UINT32 m_Default
    0L,                                 // UINT32 m_Off
    1L,                                 // UINT32 m_On
    DRIVER_SENTINEL        

    //  7 - UINT16 bSwapBytes; Offset DEV_MD_SWAP, Size DEV_MD_SWAP_SIZE 
    "Swap Bytes\0",
    "\0",
    0L, 0L, 0L, 0L,                     // Expansion 
    IDC_CB_SWAP,						// CTRL_ID m_CtrlId - 
    HELP_IDX_NONE,                      // HELP_IDX m_HelpIdx
    DEV_MD_SWAP,                       // UINT16 Offset in data block where value is
    0,                                  // UINT16 m_Bit - Bit offset in byte indexed by offset
    DEV_MD_SWAP_SIZE,                  // UINT16 m_Bits - Number of bits wide the value is
    CT_CHECK,                           // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
    0L,                                 // UINT32 m_Default
    0L,                                 // UINT32 m_Off
    1L,                                 // UINT32 m_On
    DRIVER_SENTINEL        

    //  8 - UINT16 InputSize, Offset DEV_MD_INPUTSZ, Size DEV_MD_INPUTSZ_SIZE 
    "Input Size\0",
    "\0",
    0L, 0L, 0L, 0L,                     // Expansion 
    IDC_CO_INPUTSZ,                     // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE,                      // HELP_IDX m_HelpIdx
    DEV_MD_INPUTSZ,                     // UINT16 - Offset in DEVICONFIG where value is
    0,                                  // UINT16 m_Bit - Bit offset in byte indexed by offset
    DEV_MD_INPUTSZ_SIZE,                // UINT16 m_Bits - Number of bits wide the value is
    CT_VALLIST,                         // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
      0L,                               // UINT32 m_Default
      0L,                               // UINT32 m_Min
      128L,								// UINT32 m_Max
      1L,                               // UINT32 m_Step
    "%ld\0"                             // CString m_Text/Fmt
    DRIVER_SENTINEL        

    //  9 - UINT16 OutputSize, Offset DEV_MD_OUTPUTSZ, Size DEV_MD_OUTPUTSZ_SIZE 
    "Output Size\0",
    "\0",
    0L, 0L, 0L, 0L,                     // Expansion 
    IDC_CO_OUTPUTSZ,                     // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE,                      // HELP_IDX m_HelpIdx
    DEV_MD_OUTPUTSZ,                     // UINT16 - Offset in DEVICONFIG where value is
    0,                                  // UINT16 m_Bit - Bit offset in byte indexed by offset
    DEV_MD_OUTPUTSZ_SIZE,                // UINT16 m_Bits - Number of bits wide the value is
    CT_VALLIST,                         // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
      0L,                               // UINT32 m_Default
      0L,                               // UINT32 m_Min
      128L,								// UINT32 m_Max
      1L,                               // UINT32 m_Step
    "%ld\0"                             // CString m_Text/Fmt
    DRIVER_SENTINEL        


    //  10 - UINT8 ProductCode[8];   Offset DEV_MD_PCODE, Size DEV_MD_PCODE_SIZE 
    "Product Code\0",
    "Product Code\0",
    0L, 0L, 0L, 0L,                     // Expansion 
    IDC_E_PCODE,                        // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE                       // HELP_IDX m_HelpIdx
    DEV_MD_PCODE                        // UINT16 DeviceNet_DualPortAddress - Offset in NETCONFIG data block where value is
    0,                                  // UINT16 m_Bit - Bit offset in byte indexed by offset
    DEV_MD_PCODE_SIZE,                  // UINT16 m_Bits - Number of bits wide the value is
    CT_EDIT,                            // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
    "0\0"                               // CString m_Text/Fmt
    DRIVER_SENTINEL        

DRIVER_SENTINEL
END




////////////////////////////////   module descriptors   ///////////////////////////////////

////////////generic module
DEVICE_MODULE_GENERIC DEVICE_TYPE LOADONCALL DISCARDABLE        // paragraph #5      device type associated!
BEGIN
    // Device Cookie, Dev Prog, In, Out 
    DEVICE_MODULE_GENERIC+LONG_PAD,     // ensure a long value 
        0L, 0L, 0L,                     // Ana Prog, In, Out 
        0L, 0L, 0L,                     // Total count of points 
        0,                              // Not used
        // Name 
        "DPR Generic Module\0",
        // Description 
        "This is a configurable size module \r\n"
        "Configurable in and out."
        "\0",
        0L, 0L, 0L, 0L,                 // Expansion 

        0,      // p.#3     // RT_USER FuncType - Resource type for network/device functions, 0 if none 
        0,                    // RR_USER FuncRef - Ref to list of network function head, 0 if none 
  
        DEV_CFG_TYPE,       // p.#4     // RT_USER CfgType - Resource type for device config, 0 if none 
        IDD_MODULE_GENERIC,             // RR_USER CfgRef - Ref to structure def of device config data, 0 if none 

        DEV_PNT_TYPE,       // p.#7     // RT_USER PntType - Resource type for point info, 0 if none 
        DEVICE_MODULE_GENERIC,			// RR_USER PntRef - Ref to structure def of point data 
    DRIVER_SENTINEL        
END         

// io
DEVICE_MODULEIO_GENERIC DEVICE_TYPE LOADONCALL DISCARDABLE        // paragraph #5      device type associated!
BEGIN
    // Device Cookie, Dev Prog, In, Out 
    DEVICE_MODULEIO_GENERIC+LONG_PAD,     // ensure a long value 
        0L, 0L, 0L,                     // Ana Prog, In, Out 
        0L, 0L, 0L,                     // Total count of points 
        0,                              // Not used
        // Name 
        "I/O Generic Module\0",
        // Description 
        "This is a configurable size module\r\n"
        "Configurable in and out."
        "\0",
        0L, 0L, 0L, 0L,                 // Expansion 

        0,      // p.#3     // RT_USER FuncType - Resource type for network/device functions, 0 if none 
        0,                    // RR_USER FuncRef - Ref to list of network function head, 0 if none 
  
        DEV_CFG_TYPE,       // p.#4     // RT_USER CfgType - Resource type for device config, 0 if none 
        IDD_MODULEIO_GENERIC,             // RR_USER CfgRef - Ref to structure def of device config data, 0 if none 

        DEV_PNT_TYPE,       // p.#7     // RT_USER PntType - Resource type for point info, 0 if none 
        DEVICE_MODULE_GENERIC,			// RR_USER PntRef - Ref to structure def of point data 
    DRIVER_SENTINEL        
END         

DEVICE_MODULE_GENERIC DEV_PNT_TYPE LOADONCALL DISCARDABLE        // paragraph #7
BEGIN
    // Bits (short), Value (UINT32), Text 
    // Note: The points described here must fit what 
    // InputSizer() and OutputSizer() return for this device. 

    32+64+64+32  +  32+64+64+32 ,

    32, SA_INPUT,   0, " 0 - Input 32b. dword\0"
    32, SA_INPUT,  32, " 1 - Input 32b. dword\0"
    32, SA_INPUT,  64, " 2 - Input 32b. dword\0"
    32, SA_INPUT,  96, " 3 - Input 32b. dword\0"
    32, SA_INPUT, 128, " 4 - Input 32b. dword\0"
    32, SA_INPUT, 160, " 5 - Input 32b. dword\0"
    32, SA_INPUT, 192, " 6 - Input 32b. dword\0"
    32, SA_INPUT, 224, " 7 - Input 32b. dword\0"
    32, SA_INPUT, 256, " 8 - Input 32b. dword\0"
    32, SA_INPUT, 288, " 9 - Input 32b. dword\0"
    32, SA_INPUT, 320, "10 - Input 32b. dword\0"
    32, SA_INPUT, 352, "11 - Input 32b. dword\0"
    32, SA_INPUT, 384, "12 - Input 32b. dword\0"
    32, SA_INPUT, 416, "13 - Input 32b. dword\0"
    32, SA_INPUT, 448, "14 - Input 32b. dword\0"
    32, SA_INPUT, 480, "15 - Input 32b. dword\0"
    32, SA_INPUT, 512, "16 - Input 32b. dword\0"
    32, SA_INPUT, 544, "17 - Input 32b. dword\0"
    32, SA_INPUT, 576, "18 - Input 32b. dword\0"
    32, SA_INPUT, 608, "19 - Input 32b. dword\0"
    32, SA_INPUT, 640, "20 - Input 32b. dword\0"
    32, SA_INPUT, 672, "21 - Input 32b. dword\0"
    32, SA_INPUT, 704, "22 - Input 32b. dword\0"
    32, SA_INPUT, 736, "23 - Input 32b. dword\0"
    32, SA_INPUT, 768, "24 - Input 32b. dword\0"
    32, SA_INPUT, 800, "25 - Input 32b. dword\0"
    32, SA_INPUT, 832, "26 - Input 32b. dword\0"
    32, SA_INPUT, 864, "27 - Input 32b. dword\0"
    32, SA_INPUT, 896, "28 - Input 32b. dword\0"
    32, SA_INPUT, 928, "29 - Input 32b. dword\0"
    32, SA_INPUT, 960, "30 - Input 32b. dword\0"
    32, SA_INPUT, 992, "31 - Input 32b. dword\0"
						   
    16, SA_INPUT,   0, " 0 - Input 16b. word\0"
    16, SA_INPUT,  16, " 1 - Input 16b. word\0"
    16, SA_INPUT,  32, " 2 - Input 16b. word\0"
    16, SA_INPUT,  48, " 3 - Input 16b. word\0"
    16, SA_INPUT,  64, " 4 - Input 16b. word\0"
    16, SA_INPUT,  80, " 5 - Input 16b. word\0"
    16, SA_INPUT,  96, " 6 - Input 16b. word\0"
    16, SA_INPUT, 112, " 7 - Input 16b. word\0"
    16, SA_INPUT, 128, " 8 - Input 16b. word\0"
    16, SA_INPUT, 144, " 9 - Input 16b. word\0"
    16, SA_INPUT, 160, "10 - Input 16b. word\0"
    16, SA_INPUT, 176, "11 - Input 16b. word\0"
    16, SA_INPUT, 192, "12 - Input 16b. word\0"
    16, SA_INPUT, 208, "13 - Input 16b. word\0"
    16, SA_INPUT, 224, "14 - Input 16b. word\0"
    16, SA_INPUT, 240, "15 - Input 16b. word\0"
    16, SA_INPUT, 256, "16 - Input 16b. word\0"
    16, SA_INPUT, 272, "17 - Input 16b. word\0"
    16, SA_INPUT, 288, "18 - Input 16b. word\0"
    16, SA_INPUT, 304, "19 - Input 16b. word\0"
    16, SA_INPUT, 320, "20 - Input 16b. word\0"
    16, SA_INPUT, 336, "21 - Input 16b. word\0"
    16, SA_INPUT, 352, "22 - Input 16b. word\0"
    16, SA_INPUT, 368, "23 - Input 16b. word\0"
    16, SA_INPUT, 384, "24 - Input 16b. word\0"
    16, SA_INPUT, 400, "25 - Input 16b. word\0"
    16, SA_INPUT, 416, "26 - Input 16b. word\0"
    16, SA_INPUT, 432, "27 - Input 16b. word\0"
    16, SA_INPUT, 448, "28 - Input 16b. word\0"
    16, SA_INPUT, 464, "29 - Input 16b. word\0"
    16, SA_INPUT, 480, "30 - Input 16b. word\0"
    16, SA_INPUT, 496, "31 - Input 16b. word\0"
    16, SA_INPUT, 512, "32 - Input 16b. word\0"
    16, SA_INPUT, 528, "33 - Input 16b. word\0"
    16, SA_INPUT, 544, "34 - Input 16b. word\0"
    16, SA_INPUT, 560, "35 - Input 16b. word\0"
    16, SA_INPUT, 576, "36 - Input 16b. word\0"
    16, SA_INPUT, 592, "37 - Input 16b. word\0"
    16, SA_INPUT, 608, "38 - Input 16b. word\0"
    16, SA_INPUT, 624, "39 - Input 16b. word\0"
    16, SA_INPUT, 640, "40 - Input 16b. word\0"
    16, SA_INPUT, 656, "41 - Input 16b. word\0"
    16, SA_INPUT, 672, "42 - Input 16b. word\0"
    16, SA_INPUT, 688, "43 - Input 16b. word\0"
    16, SA_INPUT, 704, "44 - Input 16b. word\0"
    16, SA_INPUT, 720, "45 - Input 16b. word\0"
    16, SA_INPUT, 736, "46 - Input 16b. word\0"
    16, SA_INPUT, 752, "47 - Input 16b. word\0"
    16, SA_INPUT, 768, "48 - Input 16b. word\0"
    16, SA_INPUT, 784, "49 - Input 16b. word\0"
    16, SA_INPUT, 800, "50 - Input 16b. word\0"
    16, SA_INPUT, 816, "51 - Input 16b. word\0"
    16, SA_INPUT, 832, "52 - Input 16b. word\0"
    16, SA_INPUT, 848, "53 - Input 16b. word\0"
    16, SA_INPUT, 864, "54 - Input 16b. word\0"
    16, SA_INPUT, 880, "55 - Input 16b. word\0"
    16, SA_INPUT, 896, "56 - Input 16b. word\0"
    16, SA_INPUT, 912, "57 - Input 16b. word\0"
    16, SA_INPUT, 928, "58 - Input 16b. word\0"
    16, SA_INPUT, 944, "59 - Input 16b. word\0"
    16, SA_INPUT, 960, "60 - Input 16b. word\0"
    16, SA_INPUT, 976, "61 - Input 16b. word\0"
    16, SA_INPUT, 992, "62 - Input 16b. word\0"
    16, SA_INPUT,1008, "63 - Input 16b. word\0"
						  
    8, SA_INPUT,   0, " 0 - Input byte\0"
    8, SA_INPUT,   8, " 1 - Input byte\0"
    8, SA_INPUT,  16, " 2 - Input byte\0"
    8, SA_INPUT,  24, " 3 - Input byte\0"
    8, SA_INPUT,  32, " 4 - Input byte\0"
    8, SA_INPUT,  40, " 5 - Input byte\0"
    8, SA_INPUT,  48, " 6 - Input byte\0"
    8, SA_INPUT,  56, " 7 - Input byte\0"
    8, SA_INPUT,  64, " 8 - Input byte\0"
    8, SA_INPUT,  72, " 9 - Input byte\0"
    8, SA_INPUT,  80, "10 - Input byte\0"
    8, SA_INPUT,  88, "11 - Input byte\0"
    8, SA_INPUT,  96, "12 - Input byte\0"
    8, SA_INPUT, 104, "13 - Input byte\0"
    8, SA_INPUT, 112, "14 - Input byte\0"
    8, SA_INPUT, 120, "15 - Input byte\0"
    8, SA_INPUT, 128, "16 - Input byte\0"
    8, SA_INPUT, 136, "17 - Input byte\0"
    8, SA_INPUT, 144, "18 - Input byte\0"
    8, SA_INPUT, 152, "19 - Input byte\0"
    8, SA_INPUT, 160, "20 - Input byte\0"
    8, SA_INPUT, 168, "21 - Input byte\0"
    8, SA_INPUT, 176, "22 - Input byte\0"
    8, SA_INPUT, 184, "23 - Input byte\0"
    8, SA_INPUT, 192, "24 - Input byte\0"
    8, SA_INPUT, 200, "25 - Input byte\0"
    8, SA_INPUT, 208, "26 - Input byte\0"
    8, SA_INPUT, 216, "27 - Input byte\0"
    8, SA_INPUT, 224, "28 - Input byte\0"
    8, SA_INPUT, 232, "29 - Input byte\0"
    8, SA_INPUT, 240, "30 - Input byte\0"
    8, SA_INPUT, 248, "31 - Input byte\0"
    8, SA_INPUT, 256, "32 - Input byte\0"
    8, SA_INPUT, 264, "33 - Input byte\0"
    8, SA_INPUT, 272, "34 - Input byte\0"
    8, SA_INPUT, 280, "35 - Input byte\0"
    8, SA_INPUT, 288, "36 - Input byte\0"
    8, SA_INPUT, 296, "37 - Input byte\0"
    8, SA_INPUT, 304, "38 - Input byte\0"
    8, SA_INPUT, 312, "39 - Input byte\0"
    8, SA_INPUT, 320, "40 - Input byte\0"
    8, SA_INPUT, 328, "41 - Input byte\0"
    8, SA_INPUT, 336, "42 - Input byte\0"
    8, SA_INPUT, 344, "43 - Input byte\0"
    8, SA_INPUT, 352, "44 - Input byte\0"
    8, SA_INPUT, 360, "45 - Input byte\0"
    8, SA_INPUT, 368, "46 - Input byte\0"
    8, SA_INPUT, 376, "47 - Input byte\0"
    8, SA_INPUT, 384, "48 - Input byte\0"
    8, SA_INPUT, 392, "49 - Input byte\0"
    8, SA_INPUT, 400, "50 - Input byte\0"
    8, SA_INPUT, 408, "51 - Input byte\0"
    8, SA_INPUT, 416, "52 - Input byte\0"
    8, SA_INPUT, 424, "53 - Input byte\0"
    8, SA_INPUT, 432, "54 - Input byte\0"
    8, SA_INPUT, 440, "55 - Input byte\0"
    8, SA_INPUT, 448, "56 - Input byte\0"
    8, SA_INPUT, 456, "57 - Input byte\0"
    8, SA_INPUT, 464, "58 - Input byte\0"
    8, SA_INPUT, 472, "59 - Input byte\0"
    8, SA_INPUT, 480, "60 - Input byte\0"
    8, SA_INPUT, 488, "61 - Input byte\0"
    8, SA_INPUT, 496, "62 - Input byte\0"
    8, SA_INPUT, 504, "63 - Input byte\0"


    1, SA_INPUT,   0, " 0 - Input bit\0"
    1, SA_INPUT,   1, " 1 - Input bit\0"
    1, SA_INPUT,   2, " 2 - Input bit\0"
    1, SA_INPUT,   3, " 3 - Input bit\0"
    1, SA_INPUT,   4, " 4 - Input bit\0"
    1, SA_INPUT,   5, " 5 - Input bit\0"
    1, SA_INPUT,   6, " 6 - Input bit\0"
    1, SA_INPUT,   7, " 7 - Input bit\0"
    1, SA_INPUT,   8, " 8 - Input bit\0"
    1, SA_INPUT,   9, " 9 - Input bit\0"
    1, SA_INPUT,  10, "10 - Input bit\0"
    1, SA_INPUT,  11, "11 - Input bit\0"
    1, SA_INPUT,  12, "12 - Input bit\0"
    1, SA_INPUT,  13, "13 - Input bit\0"
    1, SA_INPUT,  14, "14 - Input bit\0"
    1, SA_INPUT,  15, "15 - Input bit\0"
    1, SA_INPUT,  16, "16 - Input bit\0"
    1, SA_INPUT,  17, "17 - Input bit\0"
    1, SA_INPUT,  18, "18 - Input bit\0"
    1, SA_INPUT,  19, "19 - Input bit\0"
    1, SA_INPUT,  20, "20 - Input bit\0"
    1, SA_INPUT,  21, "21 - Input bit\0"
    1, SA_INPUT,  22, "22 - Input bit\0"
    1, SA_INPUT,  23, "23 - Input bit\0"
    1, SA_INPUT,  24, "24 - Input bit\0"
    1, SA_INPUT,  25, "25 - Input bit\0"
    1, SA_INPUT,  26, "26 - Input bit\0"
    1, SA_INPUT,  27, "27 - Input bit\0"
    1, SA_INPUT,  28, "28 - Input bit\0"
    1, SA_INPUT,  29, "29 - Input bit\0"
    1, SA_INPUT,  30, "30 - Input bit\0"
    1, SA_INPUT,  31, "31 - Input bit\0"



    32, SA_OUTPUT,   0, " 0 - Output 32b. dword\0"
    32, SA_OUTPUT,  32, " 1 - Output 32b. dword\0"
    32, SA_OUTPUT,  64, " 2 - Output 32b. dword\0"
    32, SA_OUTPUT,  96, " 3 - Output 32b. dword\0"
    32, SA_OUTPUT, 128, " 4 - Output 32b. dword\0"
    32, SA_OUTPUT, 160, " 5 - Output 32b. dword\0"
    32, SA_OUTPUT, 192, " 6 - Output 32b. dword\0"
    32, SA_OUTPUT, 224, " 7 - Output 32b. dword\0"
    32, SA_OUTPUT, 256, " 8 - Output 32b. dword\0"
    32, SA_OUTPUT, 288, " 9 - Output 32b. dword\0"
    32, SA_OUTPUT, 320, "10 - Output 32b. dword\0"
    32, SA_OUTPUT, 352, "11 - Output 32b. dword\0"
    32, SA_OUTPUT, 384, "12 - Output 32b. dword\0"
    32, SA_OUTPUT, 416, "13 - Output 32b. dword\0"
    32, SA_OUTPUT, 448, "14 - Output 32b. dword\0"
    32, SA_OUTPUT, 480, "15 - Output 32b. dword\0"
    32, SA_OUTPUT, 512, "16 - Output 32b. dword\0"
    32, SA_OUTPUT, 544, "17 - Output 32b. dword\0"
    32, SA_OUTPUT, 576, "18 - Output 32b. dword\0"
    32, SA_OUTPUT, 608, "19 - Output 32b. dword\0"
    32, SA_OUTPUT, 640, "20 - Output 32b. dword\0"
    32, SA_OUTPUT, 672, "21 - Output 32b. dword\0"
    32, SA_OUTPUT, 704, "22 - Output 32b. dword\0"
    32, SA_OUTPUT, 736, "23 - Output 32b. dword\0"
    32, SA_OUTPUT, 768, "24 - Output 32b. dword\0"
    32, SA_OUTPUT, 800, "25 - Output 32b. dword\0"
    32, SA_OUTPUT, 832, "26 - Output 32b. dword\0"
    32, SA_OUTPUT, 864, "27 - Output 32b. dword\0"
    32, SA_OUTPUT, 896, "28 - Output 32b. dword\0"
    32, SA_OUTPUT, 928, "29 - Output 32b. dword\0"
    32, SA_OUTPUT, 960, "30 - Output 32b. dword\0"
    32, SA_OUTPUT, 992, "31 - Output 32b. dword\0"
						   
    16, SA_OUTPUT,   0, " 0 - Output 16b. word\0"
    16, SA_OUTPUT,  16, " 1 - Output 16b. word\0"
    16, SA_OUTPUT,  32, " 2 - Output 16b. word\0"
    16, SA_OUTPUT,  48, " 3 - Output 16b. word\0"
    16, SA_OUTPUT,  64, " 4 - Output 16b. word\0"
    16, SA_OUTPUT,  80, " 5 - Output 16b. word\0"
    16, SA_OUTPUT,  96, " 6 - Output 16b. word\0"
    16, SA_OUTPUT, 112, " 7 - Output 16b. word\0"
    16, SA_OUTPUT, 128, " 8 - Output 16b. word\0"
    16, SA_OUTPUT, 144, " 9 - Output 16b. word\0"
    16, SA_OUTPUT, 160, "10 - Output 16b. word\0"
    16, SA_OUTPUT, 176, "11 - Output 16b. word\0"
    16, SA_OUTPUT, 192, "12 - Output 16b. word\0"
    16, SA_OUTPUT, 208, "13 - Output 16b. word\0"
    16, SA_OUTPUT, 224, "14 - Output 16b. word\0"
    16, SA_OUTPUT, 240, "15 - Output 16b. word\0"
    16, SA_OUTPUT, 256, "16 - Output 16b. word\0"
    16, SA_OUTPUT, 272, "17 - Output 16b. word\0"
    16, SA_OUTPUT, 288, "18 - Output 16b. word\0"
    16, SA_OUTPUT, 304, "19 - Output 16b. word\0"
    16, SA_OUTPUT, 320, "20 - Output 16b. word\0"
    16, SA_OUTPUT, 336, "21 - Output 16b. word\0"
    16, SA_OUTPUT, 352, "22 - Output 16b. word\0"
    16, SA_OUTPUT, 368, "23 - Output 16b. word\0"
    16, SA_OUTPUT, 384, "24 - Output 16b. word\0"
    16, SA_OUTPUT, 400, "25 - Output 16b. word\0"
    16, SA_OUTPUT, 416, "26 - Output 16b. word\0"
    16, SA_OUTPUT, 432, "27 - Output 16b. word\0"
    16, SA_OUTPUT, 448, "28 - Output 16b. word\0"
    16, SA_OUTPUT, 464, "29 - Output 16b. word\0"
    16, SA_OUTPUT, 480, "30 - Output 16b. word\0"
    16, SA_OUTPUT, 496, "31 - Output 16b. word\0"
    16, SA_OUTPUT, 512, "32 - Output 16b. word\0"
    16, SA_OUTPUT, 528, "33 - Output 16b. word\0"
    16, SA_OUTPUT, 544, "34 - Output 16b. word\0"
    16, SA_OUTPUT, 560, "35 - Output 16b. word\0"
    16, SA_OUTPUT, 576, "36 - Output 16b. word\0"
    16, SA_OUTPUT, 592, "37 - Output 16b. word\0"
    16, SA_OUTPUT, 608, "38 - Output 16b. word\0"
    16, SA_OUTPUT, 624, "39 - Output 16b. word\0"
    16, SA_OUTPUT, 640, "40 - Output 16b. word\0"
    16, SA_OUTPUT, 656, "41 - Output 16b. word\0"
    16, SA_OUTPUT, 672, "42 - Output 16b. word\0"
    16, SA_OUTPUT, 688, "43 - Output 16b. word\0"
    16, SA_OUTPUT, 704, "44 - Output 16b. word\0"
    16, SA_OUTPUT, 720, "45 - Output 16b. word\0"
    16, SA_OUTPUT, 736, "46 - Output 16b. word\0"
    16, SA_OUTPUT, 752, "47 - Output 16b. word\0"
    16, SA_OUTPUT, 768, "48 - Output 16b. word\0"
    16, SA_OUTPUT, 784, "49 - Output 16b. word\0"
    16, SA_OUTPUT, 800, "50 - Output 16b. word\0"
    16, SA_OUTPUT, 816, "51 - Output 16b. word\0"
    16, SA_OUTPUT, 832, "52 - Output 16b. word\0"
    16, SA_OUTPUT, 848, "53 - Output 16b. word\0"
    16, SA_OUTPUT, 864, "54 - Output 16b. word\0"
    16, SA_OUTPUT, 880, "55 - Output 16b. word\0"
    16, SA_OUTPUT, 896, "56 - Output 16b. word\0"
    16, SA_OUTPUT, 912, "57 - Output 16b. word\0"
    16, SA_OUTPUT, 928, "58 - Output 16b. word\0"
    16, SA_OUTPUT, 944, "59 - Output 16b. word\0"
    16, SA_OUTPUT, 960, "60 - Output 16b. word\0"
    16, SA_OUTPUT, 976, "61 - Output 16b. word\0"
    16, SA_OUTPUT, 992, "62 - Output 16b. word\0"
    16, SA_OUTPUT,1008, "63 - Output 16b. word\0"
						  
    8, SA_OUTPUT,   0, " 0 - Output byte\0"
    8, SA_OUTPUT,   8, " 1 - Output byte\0"
    8, SA_OUTPUT,  16, " 2 - Output byte\0"
    8, SA_OUTPUT,  24, " 3 - Output byte\0"
    8, SA_OUTPUT,  32, " 4 - Output byte\0"
    8, SA_OUTPUT,  40, " 5 - Output byte\0"
    8, SA_OUTPUT,  48, " 6 - Output byte\0"
    8, SA_OUTPUT,  56, " 7 - Output byte\0"
    8, SA_OUTPUT,  64, " 8 - Output byte\0"
    8, SA_OUTPUT,  72, " 9 - Output byte\0"
    8, SA_OUTPUT,  80, "10 - Output byte\0"
    8, SA_OUTPUT,  88, "11 - Output byte\0"
    8, SA_OUTPUT,  96, "12 - Output byte\0"
    8, SA_OUTPUT, 104, "13 - Output byte\0"
    8, SA_OUTPUT, 112, "14 - Output byte\0"
    8, SA_OUTPUT, 120, "15 - Output byte\0"
    8, SA_OUTPUT, 128, "16 - Output byte\0"
    8, SA_OUTPUT, 136, "17 - Output byte\0"
    8, SA_OUTPUT, 144, "18 - Output byte\0"
    8, SA_OUTPUT, 152, "19 - Output byte\0"
    8, SA_OUTPUT, 160, "20 - Output byte\0"
    8, SA_OUTPUT, 168, "21 - Output byte\0"
    8, SA_OUTPUT, 176, "22 - Output byte\0"
    8, SA_OUTPUT, 184, "23 - Output byte\0"
    8, SA_OUTPUT, 192, "24 - Output byte\0"
    8, SA_OUTPUT, 200, "25 - Output byte\0"
    8, SA_OUTPUT, 208, "26 - Output byte\0"
    8, SA_OUTPUT, 216, "27 - Output byte\0"
    8, SA_OUTPUT, 224, "28 - Output byte\0"
    8, SA_OUTPUT, 232, "29 - Output byte\0"
    8, SA_OUTPUT, 240, "30 - Output byte\0"
    8, SA_OUTPUT, 248, "31 - Output byte\0"
    8, SA_OUTPUT, 256, "32 - Output byte\0"
    8, SA_OUTPUT, 264, "33 - Output byte\0"
    8, SA_OUTPUT, 272, "34 - Output byte\0"
    8, SA_OUTPUT, 280, "35 - Output byte\0"
    8, SA_OUTPUT, 288, "36 - Output byte\0"
    8, SA_OUTPUT, 296, "37 - Output byte\0"
    8, SA_OUTPUT, 304, "38 - Output byte\0"
    8, SA_OUTPUT, 312, "39 - Output byte\0"
    8, SA_OUTPUT, 320, "40 - Output byte\0"
    8, SA_OUTPUT, 328, "41 - Output byte\0"
    8, SA_OUTPUT, 336, "42 - Output byte\0"
    8, SA_OUTPUT, 344, "43 - Output byte\0"
    8, SA_OUTPUT, 352, "44 - Output byte\0"
    8, SA_OUTPUT, 360, "45 - Output byte\0"
    8, SA_OUTPUT, 368, "46 - Output byte\0"
    8, SA_OUTPUT, 376, "47 - Output byte\0"
    8, SA_OUTPUT, 384, "48 - Output byte\0"
    8, SA_OUTPUT, 392, "49 - Output byte\0"
    8, SA_OUTPUT, 400, "50 - Output byte\0"
    8, SA_OUTPUT, 408, "51 - Output byte\0"
    8, SA_OUTPUT, 416, "52 - Output byte\0"
    8, SA_OUTPUT, 424, "53 - Output byte\0"
    8, SA_OUTPUT, 432, "54 - Output byte\0"
    8, SA_OUTPUT, 440, "55 - Output byte\0"
    8, SA_OUTPUT, 448, "56 - Output byte\0"
    8, SA_OUTPUT, 456, "57 - Output byte\0"
    8, SA_OUTPUT, 464, "58 - Output byte\0"
    8, SA_OUTPUT, 472, "59 - Output byte\0"
    8, SA_OUTPUT, 480, "60 - Output byte\0"
    8, SA_OUTPUT, 488, "61 - Output byte\0"
    8, SA_OUTPUT, 496, "62 - Output byte\0"
    8, SA_OUTPUT, 504, "63 - Output byte\0"


    1, SA_OUTPUT,   0, " 0 - Output bit\0"
    1, SA_OUTPUT,   1, " 1 - Output bit\0"
    1, SA_OUTPUT,   2, " 2 - Output bit\0"
    1, SA_OUTPUT,   3, " 3 - Output bit\0"
    1, SA_OUTPUT,   4, " 4 - Output bit\0"
    1, SA_OUTPUT,   5, " 5 - Output bit\0"
    1, SA_OUTPUT,   6, " 6 - Output bit\0"
    1, SA_OUTPUT,   7, " 7 - Output bit\0"
    1, SA_OUTPUT,   8, " 8 - Output bit\0"
    1, SA_OUTPUT,   9, " 9 - Output bit\0"
    1, SA_OUTPUT,  10, "10 - Output bit\0"
    1, SA_OUTPUT,  11, "11 - Output bit\0"
    1, SA_OUTPUT,  12, "12 - Output bit\0"
    1, SA_OUTPUT,  13, "13 - Output bit\0"
    1, SA_OUTPUT,  14, "14 - Output bit\0"
    1, SA_OUTPUT,  15, "15 - Output bit\0"
    1, SA_OUTPUT,  16, "16 - Output bit\0"
    1, SA_OUTPUT,  17, "17 - Output bit\0"
    1, SA_OUTPUT,  18, "18 - Output bit\0"
    1, SA_OUTPUT,  19, "19 - Output bit\0"
    1, SA_OUTPUT,  20, "20 - Output bit\0"
    1, SA_OUTPUT,  21, "21 - Output bit\0"
    1, SA_OUTPUT,  22, "22 - Output bit\0"
    1, SA_OUTPUT,  23, "23 - Output bit\0"
    1, SA_OUTPUT,  24, "24 - Output bit\0"
    1, SA_OUTPUT,  25, "25 - Output bit\0"
    1, SA_OUTPUT,  26, "26 - Output bit\0"
    1, SA_OUTPUT,  27, "27 - Output bit\0"
    1, SA_OUTPUT,  28, "28 - Output bit\0"
    1, SA_OUTPUT,  29, "29 - Output bit\0"
    1, SA_OUTPUT,  30, "30 - Output bit\0"
    1, SA_OUTPUT,  31, "31 - Output bit\0"



DRIVER_SENTINEL        
END

// end generic



////////////////////   module configuration block (here same for all DEVICE_MODULE_4W devices)   //////////////////

IDD_MODULE DEV_CFG_TYPE LOADONCALL DISCARDABLE      // paragraph #4    device confif dlg box  associated!
BEGIN
    IDD_MODULE,                      // DLG_ID - Id of dialog for this function, 0 if use default dialog
    0,                                  // CTRL_ID - DescId of the Description area
    IDC_PB_HELP,                        // HELP_ID - CtrlId of the Help button
    IDH_MODULE_4W,                      // HELP_IDX m_HelpIdx
    0L, 0L, 0L, 0L                      // Expansion 
    DEVCONFIG_SIZE,                     // UINT16 TotalSize - Number of bytes in config block
    6,                                  // UINT16 CfgCount - Number of inline entries
    DRIVER_SENTINEL
    
    //  1 - UINT32  DriverId, Offset DEV_HD_DRVID, Size DEV_HD_DRVID_SIZE 
    "DriverId\0",
    "DriverId\0",
    0L, 0L, 0L, 0L                      // Expansion 
    0,                                  // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE                       // HELP_IDX m_HelpIdx
    DEV_HD_DRVID,                       // UINT16 - Offset in DEVICONFIG where value is
    0,                                  // UINT16 m_Bit - Bit offset in byte indexed by offset
    DEV_HD_DRVID_SIZE,                  // UINT16 m_Bits - Number of bits wide the value is
    CT_CONST,                           // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
    NETCONFIG_ID,                       // UINT32 const value
    DRIVER_SENTINEL        

    //  2 - UINT32  DevcfgId, Offset DEV_HD_ID, Size DEV_HD_ID_SIZE 
    "DevcfgId\0",
    "\0",
    0L, 0L, 0L, 0L                      // Expansion 
    0,                                  // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE                       // HELP_IDX m_HelpIdx
    DEV_HD_ID,                          // UINT16 - Offset in DEVICONFIG where value is
    0,                                  // UINT16 m_Bit - Bit offset in byte indexed by offset
    DEV_HD_ID_SIZE,                     // UINT16 m_Bits - Number of bits wide the value is
    CT_CONST,                           // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
    MODULECONFIG_ID,                    // UINT32 const value
    DRIVER_SENTINEL        
    
    //  3 - UINT32  DevcfgVers, Offset DEV_HD_VERS, Size DEV_HD_VERS_SIZE 
    "DevcfgVers\0",
    "\0",
    0L, 0L, 0L, 0L,                     // Expansion 
    0,                                  // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE,                      // HELP_IDX m_HelpIdx
    DEV_HD_VERS,                        // UINT16 - Offset in DEVICONFIG where value is
    0                                   // UINT16 m_Bit - Bit offset in byte indexed by offset
    DEV_HD_VERS_SIZE,                   // UINT16 m_Bits - Number of bits wide the value is
    CT_CONST,                           // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
    MODULECONFIG_VERS,                 // UINT32 const value
    DRIVER_SENTINEL        
    
    
    //  4 - UINT16 Address, Offset DEV_MD_ADDRESS, Size DEV_MD_ADDRESS_SIZE 
    "Station Address\0",
    "Network link address for this device\0",
    0L, 0L, 0L, 0L,                     // Expansion 
    IDC_CO_ADDRESS,                     // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE,                      // HELP_IDX m_HelpIdx
    DEV_MD_ADDRESS,                     // UINT16 - Offset in DEVICONFIG where value is
    0,                                  // UINT16 m_Bit - Bit offset in byte indexed by offset
    DEV_MD_ADDRESS_SIZE,                // UINT16 m_Bits - Number of bits wide the value is
    CT_VALLIST,                         // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
      0L,                               // UINT32 m_Default
      0L,                               // UINT32 m_Min
      MAX_DEVICES-1+LONG_PAD,           // UINT32 m_Max
      1L,                               // UINT32 m_Step
    "%ld\0"                             // CString m_Text/Fmt
    DRIVER_SENTINEL        
    
    //  5 - UINT16 Slot, Offset DEV_MD_SLOT, Size DEV_MD_SLOT_SIZE 
    "Slot #\0",
    "\0",
    0L, 0L, 0L, 0L,                     // Expansion 
    IDC_CO_SLOT,						// CTRL_ID m_CtrlId - 
    HELP_IDX_NONE,                      // HELP_IDX m_HelpIdx
    DEV_MD_SLOT,						// UINT16 - Offset in DEVICONFIG where value is
    0,                                  // UINT16 m_Bit - Bit offset in byte indexed by offset
    DEV_MD_SLOT_SIZE,					// UINT16 m_Bits - Number of bits wide the value is
    CT_VALLIST,                         // CFG_TYPES m_CfgType
    //dpr offset
      0L,                               // UINT32 m_Default
      0L,                               // UINT32 m_Min
      0xfffL,								// UINT32 m_Max
      1L,                               // UINT32 m_Step
    "0x%03lXh\0"                             // CString m_Text/Fmt
    DRIVER_SENTINEL        
    
    //  6 - UINT16 bCritical; Offset DEV_MD_CRITICAL, Size DEV_MD_CRITICAL_SIZE 
    "Critical Device\0",
    "If any device having Critical Device control ON misses at Run (Online()) time, this command will fail \0",
    0L, 0L, 0L, 0L,                     // Expansion 
    IDC_CB_CRITICAL,                    // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE,                      // HELP_IDX m_HelpIdx
    DEV_MD_CRITICAL,                       // UINT16 Offset in data block where value is
    0,                                  // UINT16 m_Bit - Bit offset in byte indexed by offset
    DEV_MD_CRITICAL_SIZE,                  // UINT16 m_Bits - Number of bits wide the value is
    CT_CHECK,                           // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
    1L,                                 // UINT32 m_Default
    0L,                                 // UINT32 m_Off
    1L,                                 // UINT32 m_On
    DRIVER_SENTINEL        
    
DRIVER_SENTINEL
END



IDD_MODULEIO DEV_CFG_TYPE LOADONCALL DISCARDABLE      // paragraph #4    device confif dlg box  associated!
BEGIN
    IDD_MODULEIO,                      // DLG_ID - Id of dialog for this function, 0 if use default dialog
    0,                                  // CTRL_ID - DescId of the Description area
    IDC_PB_HELP,                        // HELP_ID - CtrlId of the Help button
    IDH_MODULE_4W,                      // HELP_IDX m_HelpIdx
    0L, 0L, 0L, 0L                      // Expansion 
    DEVCONFIG_SIZE,                     // UINT16 TotalSize - Number of bytes in config block
    6,                                  // UINT16 CfgCount - Number of inline entries
    DRIVER_SENTINEL
    
    //  1 - UINT32  DriverId, Offset DEV_HD_DRVID, Size DEV_HD_DRVID_SIZE 
    "DriverId\0",
    "DriverId\0",
    0L, 0L, 0L, 0L                      // Expansion 
    0,                                  // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE                       // HELP_IDX m_HelpIdx
    DEV_HD_DRVID,                       // UINT16 - Offset in DEVICONFIG where value is
    0,                                  // UINT16 m_Bit - Bit offset in byte indexed by offset
    DEV_HD_DRVID_SIZE,                  // UINT16 m_Bits - Number of bits wide the value is
    CT_CONST,                           // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
    NETCONFIG_ID,                       // UINT32 const value
    DRIVER_SENTINEL        

    //  2 - UINT32  DevcfgId, Offset DEV_HD_ID, Size DEV_HD_ID_SIZE 
    "DevcfgId\0",
    "\0",
    0L, 0L, 0L, 0L                      // Expansion 
    0,                                  // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE                       // HELP_IDX m_HelpIdx
    DEV_HD_ID,                          // UINT16 - Offset in DEVICONFIG where value is
    0,                                  // UINT16 m_Bit - Bit offset in byte indexed by offset
    DEV_HD_ID_SIZE,                     // UINT16 m_Bits - Number of bits wide the value is
    CT_CONST,                           // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
    MODULECONFIG_ID,                    // UINT32 const value
    DRIVER_SENTINEL        
    
    //  3 - UINT32  DevcfgVers, Offset DEV_HD_VERS, Size DEV_HD_VERS_SIZE 
    "DevcfgVers\0",
    "\0",
    0L, 0L, 0L, 0L,                     // Expansion 
    0,                                  // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE,                      // HELP_IDX m_HelpIdx
    DEV_HD_VERS,                        // UINT16 - Offset in DEVICONFIG where value is
    0                                   // UINT16 m_Bit - Bit offset in byte indexed by offset
    DEV_HD_VERS_SIZE,                   // UINT16 m_Bits - Number of bits wide the value is
    CT_CONST,                           // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
    MODULECONFIG_VERS,                 // UINT32 const value
    DRIVER_SENTINEL        
    
    
    //  4 - UINT16 Address, Offset DEV_MD_ADDRESS, Size DEV_MD_ADDRESS_SIZE 
    "Station Address\0",
    "Network link address for this device\0",
    0L, 0L, 0L, 0L,                     // Expansion 
    IDC_CO_ADDRESS,                     // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE,                      // HELP_IDX m_HelpIdx
    DEV_MD_ADDRESS,                     // UINT16 - Offset in DEVICONFIG where value is
    0,                                  // UINT16 m_Bit - Bit offset in byte indexed by offset
    DEV_MD_ADDRESS_SIZE,                // UINT16 m_Bits - Number of bits wide the value is
    CT_VALLIST,                         // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
      0L,                               // UINT32 m_Default
      0L,                               // UINT32 m_Min
      MAX_DEVICES-1+LONG_PAD,           // UINT32 m_Max
      1L,                               // UINT32 m_Step
    "%ld\0"                             // CString m_Text/Fmt
    DRIVER_SENTINEL        
    
    //  5 - UINT16 Slot, Offset DEV_MD_SLOT, Size DEV_MD_SLOT_SIZE 
    "Slot #\0",
    "\0",
    0L, 0L, 0L, 0L,                     // Expansion 
    IDC_CO_SLOT,						// CTRL_ID m_CtrlId - 
    HELP_IDX_NONE,                      // HELP_IDX m_HelpIdx
    DEV_MD_SLOT,						// UINT16 - Offset in DEVICONFIG where value is
    0,                                  // UINT16 m_Bit - Bit offset in byte indexed by offset
    DEV_MD_SLOT_SIZE,					// UINT16 m_Bits - Number of bits wide the value is
    CT_VALLIST,                         // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
      PORT_DEFAULTL,                               // UINT32 m_Default
      PORT_MINL,                               // UINT32 m_Min
      PORT_MAXL,								// UINT32 m_Max
      PORT_STEPL,                               // UINT32 m_Step
    "0x%03lXh\0"                            // CString m_Text/Fmt
    DRIVER_SENTINEL        
    
    //  6 - UINT16 bCritical; Offset DEV_MD_CRITICAL, Size DEV_MD_CRITICAL_SIZE 
    "Critical Device\0",
    "If any device having Critical Device control ON misses at Run (Online()) time, this command will fail \0",
    0L, 0L, 0L, 0L,                     // Expansion 
    IDC_CB_CRITICAL,                    // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE,                      // HELP_IDX m_HelpIdx
    DEV_MD_CRITICAL,                       // UINT16 Offset in data block where value is
    0,                                  // UINT16 m_Bit - Bit offset in byte indexed by offset
    DEV_MD_CRITICAL_SIZE,                  // UINT16 m_Bits - Number of bits wide the value is
    CT_CHECK,                           // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
    1L,                                 // UINT32 m_Default
    0L,                                 // UINT32 m_Off
    1L,                                 // UINT32 m_On
    DRIVER_SENTINEL        
    
DRIVER_SENTINEL
END






/// def input 
// 4W input
DEVICE_MODULE_4W_INPUT DEVICE_TYPE LOADONCALL DISCARDABLE        // paragraph #5      device type associated!
BEGIN
    // Device Cookie, Dev Prog, In, Out 
    DEVICE_MODULE_4W_INPUT+LONG_PAD,    // ensure a long value 
        0L, 0L, 0L,                     // Ana Prog, In, Out 
        0L, 0L, 0L,                     // Total count of points 
        0,                              // Not used
        // Name 
        "DPR 4 Word Input\0",
        // Description 
        "This is a fixed size module on a station.\r\n"
        "."
        "\0",
        0L, 0L, 0L, 0L,                 // Expansion 

        0,     // p.#3     // RT_USER FuncType - Resource type for network/device functions, 0 if none 
        0,              // RR_USER FuncRef - Ref to list of network function head, 0 if none 
  
        DEV_CFG_TYPE,       // p.#4     // RT_USER CfgType - Resource type for device config, 0 if none 
        IDD_MODULE,                     // RR_USER CfgRef - Ref to structure def of device config data, 0 if none 

        DEV_PNT_TYPE,       // p.#7     // RT_USER PntType - Resource type for point info, 0 if none 
        DEVICE_MODULE_4W_INPUT,         // RR_USER PntRef - Ref to structure def of point data 
    DRIVER_SENTINEL        
END         

DEVICE_MODULEIO_4W_INPUT DEVICE_TYPE LOADONCALL DISCARDABLE        // paragraph #5      device type associated!
BEGIN
    // Device Cookie, Dev Prog, In, Out 
    DEVICE_MODULEIO_4W_INPUT+LONG_PAD,    // ensure a long value 
        0L, 0L, 0L,                     // Ana Prog, In, Out 
        0L, 0L, 0L,                     // Total count of points 
        0,                              // Not used
        // Name 
        "I/O 4 Word Input\0",
        // Description 
        "This is a fixed size module on a station.\r\n"
        "."
        "\0",
        0L, 0L, 0L, 0L,                 // Expansion 

        0,     // p.#3     // RT_USER FuncType - Resource type for network/device functions, 0 if none 
        0,              // RR_USER FuncRef - Ref to list of network function head, 0 if none 
  
        DEV_CFG_TYPE,       // p.#4     // RT_USER CfgType - Resource type for device config, 0 if none 
        IDD_MODULEIO,                     // RR_USER CfgRef - Ref to structure def of device config data, 0 if none 

        DEV_PNT_TYPE,       // p.#7     // RT_USER PntType - Resource type for point info, 0 if none 
        DEVICE_MODULE_4W_INPUT,         // RR_USER PntRef - Ref to structure def of point data 
    DRIVER_SENTINEL        
END         


DEVICE_MODULE_4W_INPUT DEV_PNT_TYPE LOADONCALL DISCARDABLE        // paragraph #7
BEGIN
    // Bits (short), Value (UINT32), Text 
    // Note: The points described here must fit what 
    // InputSizer() and OutputSizer() return for this device. 

    2+4+8+64,

    32, SA_INPUT,   0, "0 - Input 32b. dword\0"
    32, SA_INPUT,  32, "1 - Input 32b. dword\0"

    16, SA_INPUT,   0,  "0 - Input 16b. word\0"
    16, SA_INPUT,  16,  "1 - Input 16b. word\0"
    16, SA_INPUT,  32,  "2 - Input 16b. word\0"
    16, SA_INPUT,  48,  "3 - Input 16b. word\0"
    
    8,  SA_INPUT,   0,  " 0 - Input byte\0"
    8,  SA_INPUT,   8,  " 1 - Input byte\0"
    8,  SA_INPUT,  16,  " 2 - Input byte\0"
    8,  SA_INPUT,  24,  " 3 - Input byte\0"
    8,  SA_INPUT,  32,  " 4 - Input byte\0"
    8,  SA_INPUT,  40,  " 5 - Input byte\0"
    8,  SA_INPUT,  48,  " 6 - Input byte\0"
    8,  SA_INPUT,  56,  " 7 - Input byte\0"

    1, SA_INPUT,   0,  "  0 - Input Bit\0"
    1, SA_INPUT,   1,  "  1 - Input Bit\0"
    1, SA_INPUT,   2,  "  2 - Input Bit\0"
    1, SA_INPUT,   3,  "  3 - Input Bit\0"
    1, SA_INPUT,   4,  "  4 - Input Bit\0"
    1, SA_INPUT,   5,  "  5 - Input Bit\0"
    1, SA_INPUT,   6,  "  6 - Input Bit\0"
    1, SA_INPUT,   7,  "  7 - Input Bit\0"
    1, SA_INPUT,   8,  "  8 - Input Bit\0"
    1, SA_INPUT,   9,  "  9 - Input Bit\0"
    1, SA_INPUT,  10,  " 10 - Input Bit\0"
    1, SA_INPUT,  11,  " 11 - Input Bit\0"
    1, SA_INPUT,  12,  " 12 - Input Bit\0"
    1, SA_INPUT,  13,  " 13 - Input Bit\0"
    1, SA_INPUT,  14,  " 14 - Input Bit\0"
    1, SA_INPUT,  15,  " 15 - Input Bit\0"
    1, SA_INPUT,  16,  " 16 - Input Bit\0"
    1, SA_INPUT,  17,  " 17 - Input Bit\0"
    1, SA_INPUT,  18,  " 18 - Input Bit\0"
    1, SA_INPUT,  19,  " 19 - Input Bit\0"
    1, SA_INPUT,  20,  " 20 - Input Bit\0"
    1, SA_INPUT,  21,  " 21 - Input Bit\0"
    1, SA_INPUT,  22,  " 22 - Input Bit\0"
    1, SA_INPUT,  23,  " 23 - Input Bit\0"
    1, SA_INPUT,  24,  " 24 - Input Bit\0"
    1, SA_INPUT,  25,  " 25 - Input Bit\0"
    1, SA_INPUT,  26,  " 26 - Input Bit\0"
    1, SA_INPUT,  27,  " 27 - Input Bit\0"
    1, SA_INPUT,  28,  " 28 - Input Bit\0"
    1, SA_INPUT,  29,  " 29 - Input Bit\0"
    1, SA_INPUT,  30,  " 30 - Input Bit\0"
    1, SA_INPUT,  31,  " 31 - Input Bit\0"
    1, SA_INPUT,  32,  " 32 - Input Bit\0"
    1, SA_INPUT,  33,  " 33 - Input Bit\0"
    1, SA_INPUT,  34,  " 34 - Input Bit\0"
    1, SA_INPUT,  35,  " 35 - Input Bit\0"
    1, SA_INPUT,  36,  " 36 - Input Bit\0"
    1, SA_INPUT,  37,  " 37 - Input Bit\0"
    1, SA_INPUT,  38,  " 38 - Input Bit\0"
    1, SA_INPUT,  39,  " 39 - Input Bit\0"
    1, SA_INPUT,  40,  " 40 - Input Bit\0"
    1, SA_INPUT,  41,  " 41 - Input Bit\0"
    1, SA_INPUT,  42,  " 42 - Input Bit\0"
    1, SA_INPUT,  43,  " 43 - Input Bit\0"
    1, SA_INPUT,  44,  " 44 - Input Bit\0"
    1, SA_INPUT,  45,  " 45 - Input Bit\0"
    1, SA_INPUT,  46,  " 46 - Input Bit\0"
    1, SA_INPUT,  47,  " 47 - Input Bit\0"
    1, SA_INPUT,  48,  " 48 - Input Bit\0"
    1, SA_INPUT,  49,  " 49 - Input Bit\0"
    1, SA_INPUT,  50,  " 50 - Input Bit\0"
    1, SA_INPUT,  51,  " 51 - Input Bit\0"
    1, SA_INPUT,  52,  " 52 - Input Bit\0"
    1, SA_INPUT,  53,  " 53 - Input Bit\0"
    1, SA_INPUT,  54,  " 54 - Input Bit\0"
    1, SA_INPUT,  55,  " 55 - Input Bit\0"
    1, SA_INPUT,  56,  " 56 - Input Bit\0"
    1, SA_INPUT,  57,  " 57 - Input Bit\0"
    1, SA_INPUT,  58,  " 58 - Input Bit\0"
    1, SA_INPUT,  59,  " 59 - Input Bit\0"
    1, SA_INPUT,  60,  " 60 - Input Bit\0"
    1, SA_INPUT,  61,  " 61 - Input Bit\0"
    1, SA_INPUT,  62,  " 62 - Input Bit\0"
    1, SA_INPUT,  63,  " 63 - Input Bit\0"

DRIVER_SENTINEL        
END

/// 2W

DEVICE_MODULE_2W_INPUT DEVICE_TYPE LOADONCALL DISCARDABLE        // paragraph #5      device type associated!
BEGIN
    // Device Cookie, Dev Prog, In, Out 
    DEVICE_MODULE_2W_INPUT+LONG_PAD,            // Add 0L to ensure UINT32
        0L, 0L, 0L,                     // Ana Prog, In, Out 
        0L, 0L, 0L,                     // Total count of points 
        0,                              // Not used
        // Name 
        "DPR 2 Word Input\0",
        // Description 
        "Generic device having 2 input.\r\n",
        "."
        "\0",
        0L, 0L, 0L, 0L                  // Expansion 

        0,      // p.#3     // RT_USER FuncType - Resource type for network/device functions, 0 if none 
        0,                    // RR_USER FuncRef - Ref to list of network function head, 0 if none 
  
        DEV_CFG_TYPE,       // p.#4     // RT_USER CfgType - Resource type for device config, 0 if none 
        IDD_MODULE,                     // RR_USER CfgRef - Ref to structure def of device config data, 0 if none 

        DEV_PNT_TYPE,       // p.#7     // RT_USER PntType - Resource type for point info, 0 if none 
        DEVICE_MODULE_2W_INPUT,                 // RR_USER PntRef - Ref to structure def of point data 
    DRIVER_SENTENIAL        
END         

DEVICE_MODULEIO_2W_INPUT DEVICE_TYPE LOADONCALL DISCARDABLE        // paragraph #5      device type associated!
BEGIN
    // Device Cookie, Dev Prog, In, Out 
    DEVICE_MODULEIO_2W_INPUT+LONG_PAD,            // Add 0L to ensure UINT32
        0L, 0L, 0L,                     // Ana Prog, In, Out 
        0L, 0L, 0L,                     // Total count of points 
        0,                              // Not used
        // Name 
        "I/O 2 Word Input\0",
        // Description 
        "Device having 2 input.\r\n",
        ""
        "\0",
        0L, 0L, 0L, 0L                  // Expansion 

        0,      // p.#3     // RT_USER FuncType - Resource type for network/device functions, 0 if none 
        0,                    // RR_USER FuncRef - Ref to list of network function head, 0 if none 
  
        DEV_CFG_TYPE,       // p.#4     // RT_USER CfgType - Resource type for device config, 0 if none 
        IDD_MODULEIO,                     // RR_USER CfgRef - Ref to structure def of device config data, 0 if none 

        DEV_PNT_TYPE,       // p.#7     // RT_USER PntType - Resource type for point info, 0 if none 
        DEVICE_MODULE_2W_INPUT,                 // RR_USER PntRef - Ref to structure def of point data 
    DRIVER_SENTENIAL        
END         

DEVICE_MODULE_2W_INPUT DEV_PNT_TYPE LOADONCALL DISCARDABLE        // paragraph #7
BEGIN
    //  Bits (short), Value (UINT32), Text 

    1+2+4+32,

    32, SA_INPUT,   0, "0 - Input  32b. dword\0"
    
    16, SA_INPUT,   0,  "0 - Input  16b. word\0"
    16, SA_INPUT,  16,  "1 - Input  16b. word\0"
    
    8,  SA_INPUT,   0,  " 0 - Input  byte\0"
    8,  SA_INPUT,   8,  " 1 - Input  byte\0"
    8,  SA_INPUT,  16,  " 2 - Input  byte\0"
    8,  SA_INPUT,  24,  " 3 - Input  byte\0"
    
    1, SA_INPUT,   0,  "  0 - Input  Bit\0"
    1, SA_INPUT,   1,  "  1 - Input  Bit\0"
    1, SA_INPUT,   2,  "  2 - Input  Bit\0"
    1, SA_INPUT,   3,  "  3 - Input  Bit\0"
    1, SA_INPUT,   4,  "  4 - Input  Bit\0"
    1, SA_INPUT,   5,  "  5 - Input  Bit\0"
    1, SA_INPUT,   6,  "  6 - Input  Bit\0"
    1, SA_INPUT,   7,  "  7 - Input  Bit\0"
    1, SA_INPUT,   8,  "  8 - Input  Bit\0"
    1, SA_INPUT,   9,  "  9 - Input  Bit\0"
    1, SA_INPUT,  10,  " 10 - Input  Bit\0"
    1, SA_INPUT,  11,  " 11 - Input  Bit\0"
    1, SA_INPUT,  12,  " 12 - Input  Bit\0"
    1, SA_INPUT,  13,  " 13 - Input  Bit\0"
    1, SA_INPUT,  14,  " 14 - Input  Bit\0"
    1, SA_INPUT,  15,  " 15 - Input  Bit\0"
    1, SA_INPUT,  16,  " 16 - Input  Bit\0"
    1, SA_INPUT,  17,  " 17 - Input  Bit\0"
    1, SA_INPUT,  18,  " 18 - Input  Bit\0"
    1, SA_INPUT,  19,  " 19 - Input  Bit\0"
    1, SA_INPUT,  20,  " 20 - Input  Bit\0"
    1, SA_INPUT,  21,  " 21 - Input  Bit\0"
    1, SA_INPUT,  22,  " 22 - Input  Bit\0"
    1, SA_INPUT,  23,  " 23 - Input  Bit\0"
    1, SA_INPUT,  24,  " 24 - Input  Bit\0"
    1, SA_INPUT,  25,  " 25 - Input  Bit\0"
    1, SA_INPUT,  26,  " 26 - Input  Bit\0"
    1, SA_INPUT,  27,  " 27 - Input  Bit\0"
    1, SA_INPUT,  28,  " 28 - Input  Bit\0"
    1, SA_INPUT,  29,  " 29 - Input  Bit\0"
    1, SA_INPUT,  30,  " 30 - Input  Bit\0"
    1, SA_INPUT,  31,  " 31 - Input  Bit\0"
    
DRIVER_SENTENIAL        
END


// 1W
DEVICE_MODULE_1W_INPUT DEVICE_TYPE LOADONCALL DISCARDABLE        // paragraph #5      device type associated!
BEGIN
    // Device Cookie, Dev Prog, In, Out 
    DEVICE_MODULE_1W_INPUT+LONG_PAD,            // Add 0L to ensure UINT32
        0L, 0L, 0L,                     // Ana Prog, In, Out 
        0L, 0L, 0L,                     // Total count of points 
        0,                              // Not used
        // Name 
        "DPR 1 Word Input\0",
        // Description 
        "Device having 1 input words.\r\n",
        "."
        "\0",
        0L, 0L, 0L, 0L                  // Expansion 

        0,      // p.#3     // RT_USER FuncType - Resource type for network/device functions, 0 if none 
        0,                    // RR_USER FuncRef - Ref to list of network function head, 0 if none 
  
        DEV_CFG_TYPE,       // p.#4     // RT_USER CfgType - Resource type for device config, 0 if none 
        IDD_MODULE,                     // RR_USER CfgRef - Ref to structure def of device config data, 0 if none 

        DEV_PNT_TYPE,       // p.#7     // RT_USER PntType - Resource type for point info, 0 if none 
        DEVICE_MODULE_1W_INPUT,                 // RR_USER PntRef - Ref to structure def of point data 
    DRIVER_SENTENIAL        
END         

DEVICE_MODULEIO_1W_INPUT DEVICE_TYPE LOADONCALL DISCARDABLE        // paragraph #5      device type associated!
BEGIN
    // Device Cookie, Dev Prog, In, Out 
    DEVICE_MODULEIO_1W_INPUT+LONG_PAD,            // Add 0L to ensure UINT32
        0L, 0L, 0L,                     // Ana Prog, In, Out 
        0L, 0L, 0L,                     // Total count of points 
        0,                              // Not used
        // Name 
        "I/O 1 Word Input\0",
        // Description 
        "\r\n",
        ""
        "\0",
        0L, 0L, 0L, 0L                  // Expansion 

        0,      // p.#3     // RT_USER FuncType - Resource type for network/device functions, 0 if none 
        0,                    // RR_USER FuncRef - Ref to list of network function head, 0 if none 
  
        DEV_CFG_TYPE,       // p.#4     // RT_USER CfgType - Resource type for device config, 0 if none 
        IDD_MODULEIO,                     // RR_USER CfgRef - Ref to structure def of device config data, 0 if none 

        DEV_PNT_TYPE,       // p.#7     // RT_USER PntType - Resource type for point info, 0 if none 
        DEVICE_MODULE_1W_INPUT,                 // RR_USER PntRef - Ref to structure def of point data 
    DRIVER_SENTENIAL        
END         



DEVICE_MODULE_1W_INPUT DEV_PNT_TYPE LOADONCALL DISCARDABLE        // paragraph #7
BEGIN
    //  Bits (short), Value (UINT32), Text 

    1+2+16,

    16, SA_INPUT,   0,  "0 - Input  16b. word\0"
    
    8,  SA_INPUT,   0,  " 0 - Input  byte\0"
    8,  SA_INPUT,   8,  " 1 - Input  byte\0"
    
    1, SA_INPUT,   0,  "  0 - Input  Bit\0"
    1, SA_INPUT,   1,  "  1 - Input  Bit\0"
    1, SA_INPUT,   2,  "  2 - Input  Bit\0"
    1, SA_INPUT,   3,  "  3 - Input  Bit\0"
    1, SA_INPUT,   4,  "  4 - Input  Bit\0"
    1, SA_INPUT,   5,  "  5 - Input  Bit\0"
    1, SA_INPUT,   6,  "  6 - Input  Bit\0"
    1, SA_INPUT,   7,  "  7 - Input  Bit\0"
    1, SA_INPUT,   8,  "  8 - Input  Bit\0"
    1, SA_INPUT,   9,  "  9 - Input  Bit\0"
    1, SA_INPUT,  10,  " 10 - Input  Bit\0"
    1, SA_INPUT,  11,  " 11 - Input  Bit\0"
    1, SA_INPUT,  12,  " 12 - Input  Bit\0"
    1, SA_INPUT,  13,  " 13 - Input  Bit\0"
    1, SA_INPUT,  14,  " 14 - Input  Bit\0"
    1, SA_INPUT,  15,  " 15 - Input  Bit\0"
    
DRIVER_SENTENIAL        
END

// 1B
DEVICE_MODULE_1B_INPUT DEVICE_TYPE LOADONCALL DISCARDABLE        // paragraph #5      device type associated!
BEGIN
    // Device Cookie, Dev Prog, In, Out 
    DEVICE_MODULE_1B_INPUT+LONG_PAD,            // Add 0L to ensure UINT32
        0L, 0L, 0L,                     // Ana Prog, In, Out 
        0L, 0L, 0L,                     // Total count of points 
        0,                              // Not used
        // Name 
        "DPR 1 Byte Input\0",
        // Description 
        "Device 1 input byte.\r\n",
        "Read from 1 I/O address, as configured"
        "\0",
        0L, 0L, 0L, 0L                  // Expansion 

        0,      // p.#3     // RT_USER FuncType - Resource type for network/device functions, 0 if none 
        0,                    // RR_USER FuncRef - Ref to list of network function head, 0 if none 
  
        DEV_CFG_TYPE,       // p.#4     // RT_USER CfgType - Resource type for device config, 0 if none 
        IDD_MODULE,                     // RR_USER CfgRef - Ref to structure def of device config data, 0 if none 

        DEV_PNT_TYPE,       // p.#7     // RT_USER PntType - Resource type for point info, 0 if none 
        DEVICE_MODULE_1B_INPUT,                 // RR_USER PntRef - Ref to structure def of point data 
    DRIVER_SENTENIAL        
END         

DEVICE_MODULEIO_1B_INPUT DEVICE_TYPE LOADONCALL DISCARDABLE        // paragraph #5      device type associated!
BEGIN
    // Device Cookie, Dev Prog, In, Out 
    DEVICE_MODULE_1B_INPUT+LONG_PAD,            // Add 0L to ensure UINT32
        0L, 0L, 0L,                     // Ana Prog, In, Out 
        0L, 0L, 0L,                     // Total count of points 
        0,                              // Not used
        // Name 
        "I/O 1 Byte Input\0",
        // Description 
        "Device 1 input byte.\r\n",
        "Read from 1 I/O address, as configured"
        "\0",
        0L, 0L, 0L, 0L                  // Expansion 

        0,      // p.#3     // RT_USER FuncType - Resource type for network/device functions, 0 if none 
        0,                    // RR_USER FuncRef - Ref to list of network function head, 0 if none 
  
        DEV_CFG_TYPE,       // p.#4     // RT_USER CfgType - Resource type for device config, 0 if none 
        IDD_MODULEIO,                     // RR_USER CfgRef - Ref to structure def of device config data, 0 if none 

        DEV_PNT_TYPE,       // p.#7     // RT_USER PntType - Resource type for point info, 0 if none 
        DEVICE_MODULE_1B_INPUT,                 // RR_USER PntRef - Ref to structure def of point data 
    DRIVER_SENTENIAL        
END         



DEVICE_MODULE_1B_INPUT DEV_PNT_TYPE LOADONCALL DISCARDABLE        // paragraph #7
BEGIN
    //  Bits (short), Value (UINT32), Text 

    1+8,

    
    8,  SA_INPUT,   0,  " 0 - Input  byte\0"
    
    1, SA_INPUT,   0,  "  0 - Input  Bit\0"
    1, SA_INPUT,   1,  "  1 - Input  Bit\0"
    1, SA_INPUT,   2,  "  2 - Input  Bit\0"
    1, SA_INPUT,   3,  "  3 - Input  Bit\0"
    1, SA_INPUT,   4,  "  4 - Input  Bit\0"
    1, SA_INPUT,   5,  "  5 - Input  Bit\0"
    1, SA_INPUT,   6,  "  6 - Input  Bit\0"
    1, SA_INPUT,   7,  "  7 - Input  Bit\0"
    
DRIVER_SENTENIAL        
END

//////////end input type

/// def out put
//4W
DEVICE_MODULE_4W_OUTPUT DEVICE_TYPE LOADONCALL DISCARDABLE        // paragraph #5      device type associated!
BEGIN
    // Device Cookie, Dev Prog, In, Out 
    DEVICE_MODULE_4W_OUTPUT+LONG_PAD,   // ensure a long value 
        0L, 0L, 0L,                     // Ana Prog, In, Out 
        0L, 0L, 0L,                     // Total count of points 
        0,                              // Not used
        // Name 
        "DPR 4 Word Output\0",
        // Description 
        "This is a fixed size module on a station.\r\n"
        "."
        "\0",
        0L, 0L, 0L, 0L,                 // Expansion 

        0,      // p.#3     // RT_USER FuncType - Resource type for network/device functions, 0 if none 
        0,                    // RR_USER FuncRef - Ref to list of network function head, 0 if none 
  
        DEV_CFG_TYPE,       // p.#4     // RT_USER CfgType - Resource type for device config, 0 if none 
        IDD_MODULE,                  // RR_USER CfgRef - Ref to structure def of device config data, 0 if none 

        DEV_PNT_TYPE,       // p.#7     // RT_USER PntType - Resource type for point info, 0 if none 
        DEVICE_MODULE_4W_OUTPUT,        // RR_USER PntRef - Ref to structure def of point data 
    DRIVER_SENTINEL        
END         

DEVICE_MODULEIO_4W_OUTPUT DEVICE_TYPE LOADONCALL DISCARDABLE        // paragraph #5      device type associated!
BEGIN
    // Device Cookie, Dev Prog, In, Out 
    DEVICE_MODULEIO_4W_OUTPUT+LONG_PAD,   // ensure a long value 
        0L, 0L, 0L,                     // Ana Prog, In, Out 
        0L, 0L, 0L,                     // Total count of points 
        0,                              // Not used
        // Name 
        "I/O 4 Word Output\0",
        // Description 
        "This is a fixed size module on a station.\r\n"
        "."
        "\0",
        0L, 0L, 0L, 0L,                 // Expansion 

        0,      // p.#3     // RT_USER FuncType - Resource type for network/device functions, 0 if none 
        0,                    // RR_USER FuncRef - Ref to list of network function head, 0 if none 
  
        DEV_CFG_TYPE,       // p.#4     // RT_USER CfgType - Resource type for device config, 0 if none 
        IDD_MODULEIO,                  // RR_USER CfgRef - Ref to structure def of device config data, 0 if none 

        DEV_PNT_TYPE,       // p.#7     // RT_USER PntType - Resource type for point info, 0 if none 
        DEVICE_MODULE_4W_OUTPUT,        // RR_USER PntRef - Ref to structure def of point data 
    DRIVER_SENTINEL        
END         


DEVICE_MODULE_4W_OUTPUT DEV_PNT_TYPE LOADONCALL DISCARDABLE        // paragraph #7
BEGIN
    // Bits (short), Value (UINT32), Text 
    // Note: The points described here must fit what 
    // InputSizer() and OutputSizer() return for this device. 

    2+4+8+64,

    32, SA_OUTPUT,   0, "0 - Output 32b. dword\0"
    32, SA_OUTPUT,  32, "1 - Output 32b. dword\0"

    16, SA_OUTPUT,   0,  "0 - Output 16b. word\0"
    16, SA_OUTPUT,  16,  "1 - Output 16b. word\0"
    16, SA_OUTPUT,  32,  "2 - Output 16b. word\0"
    16, SA_OUTPUT,  48,  "3 - Output 16b. word\0"
    
    8,  SA_OUTPUT,   0,  " 0 - Output byte\0"
    8,  SA_OUTPUT,   8,  " 1 - Output byte\0"
    8,  SA_OUTPUT,  16,  " 2 - Output byte\0"
    8,  SA_OUTPUT,  24,  " 3 - Output byte\0"
    8,  SA_OUTPUT,  32,  " 4 - Output byte\0"
    8,  SA_OUTPUT,  40,  " 5 - Output byte\0"
    8,  SA_OUTPUT,  48,  " 6 - Output byte\0"
    8,  SA_OUTPUT,  56,  " 7 - Output byte\0"

    1, SA_OUTPUT,   0,  "  0 - Output Bit\0"
    1, SA_OUTPUT,   1,  "  1 - Output Bit\0"
    1, SA_OUTPUT,   2,  "  2 - Output Bit\0"
    1, SA_OUTPUT,   3,  "  3 - Output Bit\0"
    1, SA_OUTPUT,   4,  "  4 - Output Bit\0"
    1, SA_OUTPUT,   5,  "  5 - Output Bit\0"
    1, SA_OUTPUT,   6,  "  6 - Output Bit\0"
    1, SA_OUTPUT,   7,  "  7 - Output Bit\0"
    1, SA_OUTPUT,   8,  "  8 - Output Bit\0"
    1, SA_OUTPUT,   9,  "  9 - Output Bit\0"
    1, SA_OUTPUT,  10,  " 10 - Output Bit\0"
    1, SA_OUTPUT,  11,  " 11 - Output Bit\0"
    1, SA_OUTPUT,  12,  " 12 - Output Bit\0"
    1, SA_OUTPUT,  13,  " 13 - Output Bit\0"
    1, SA_OUTPUT,  14,  " 14 - Output Bit\0"
    1, SA_OUTPUT,  15,  " 15 - Output Bit\0"
    1, SA_OUTPUT,  16,  " 16 - Output Bit\0"
    1, SA_OUTPUT,  17,  " 17 - Output Bit\0"
    1, SA_OUTPUT,  18,  " 18 - Output Bit\0"
    1, SA_OUTPUT,  19,  " 19 - Output Bit\0"
    1, SA_OUTPUT,  20,  " 20 - Output Bit\0"
    1, SA_OUTPUT,  21,  " 21 - Output Bit\0"
    1, SA_OUTPUT,  22,  " 22 - Output Bit\0"
    1, SA_OUTPUT,  23,  " 23 - Output Bit\0"
    1, SA_OUTPUT,  24,  " 24 - Output Bit\0"
    1, SA_OUTPUT,  25,  " 25 - Output Bit\0"
    1, SA_OUTPUT,  26,  " 26 - Output Bit\0"
    1, SA_OUTPUT,  27,  " 27 - Output Bit\0"
    1, SA_OUTPUT,  28,  " 28 - Output Bit\0"
    1, SA_OUTPUT,  29,  " 29 - Output Bit\0"
    1, SA_OUTPUT,  30,  " 30 - Output Bit\0"
    1, SA_OUTPUT,  31,  " 31 - Output Bit\0"
    1, SA_OUTPUT,  32,  " 32 - Output Bit\0"
    1, SA_OUTPUT,  33,  " 33 - Output Bit\0"
    1, SA_OUTPUT,  34,  " 34 - Output Bit\0"
    1, SA_OUTPUT,  35,  " 35 - Output Bit\0"
    1, SA_OUTPUT,  36,  " 36 - Output Bit\0"
    1, SA_OUTPUT,  37,  " 37 - Output Bit\0"
    1, SA_OUTPUT,  38,  " 38 - Output Bit\0"
    1, SA_OUTPUT,  39,  " 39 - Output Bit\0"
    1, SA_OUTPUT,  40,  " 40 - Output Bit\0"
    1, SA_OUTPUT,  41,  " 41 - Output Bit\0"
    1, SA_OUTPUT,  42,  " 42 - Output Bit\0"
    1, SA_OUTPUT,  43,  " 43 - Output Bit\0"
    1, SA_OUTPUT,  44,  " 44 - Output Bit\0"
    1, SA_OUTPUT,  45,  " 45 - Output Bit\0"
    1, SA_OUTPUT,  46,  " 46 - Output Bit\0"
    1, SA_OUTPUT,  47,  " 47 - Output Bit\0"
    1, SA_OUTPUT,  48,  " 48 - Output Bit\0"
    1, SA_OUTPUT,  49,  " 49 - Output Bit\0"
    1, SA_OUTPUT,  50,  " 50 - Output Bit\0"
    1, SA_OUTPUT,  51,  " 51 - Output Bit\0"
    1, SA_OUTPUT,  52,  " 52 - Output Bit\0"
    1, SA_OUTPUT,  53,  " 53 - Output Bit\0"
    1, SA_OUTPUT,  54,  " 54 - Output Bit\0"
    1, SA_OUTPUT,  55,  " 55 - Output Bit\0"
    1, SA_OUTPUT,  56,  " 56 - Output Bit\0"
    1, SA_OUTPUT,  57,  " 57 - Output Bit\0"
    1, SA_OUTPUT,  58,  " 58 - Output Bit\0"
    1, SA_OUTPUT,  59,  " 59 - Output Bit\0"
    1, SA_OUTPUT,  60,  " 60 - Output Bit\0"
    1, SA_OUTPUT,  61,  " 61 - Output Bit\0"
    1, SA_OUTPUT,  62,  " 62 - Output Bit\0"
    1, SA_OUTPUT,  63,  " 63 - Output Bit\0"

DRIVER_SENTINEL        
END

//2W
DEVICE_MODULE_2W_OUTPUT DEVICE_TYPE LOADONCALL DISCARDABLE        // paragraph #5      device type associated!
BEGIN
    // Device Cookie, Dev Prog, In, Out 
    DEVICE_MODULE_2W_OUTPUT+LONG_PAD,           // Add 0L to ensure UINT32
        0L, 0L, 0L,                     // Ana Prog, In, Out 
        0L, 0L, 0L,                     // Total count of points 
        0,                              // Not used
        // Name 
        "DPR 2 Word Output\0",
        // Description 
        "\r\n",
        ""
        "\0",
        0L, 0L, 0L, 0L                  // Expansion 

        0,      // p.#3     // RT_USER FuncType - Resource type for network/device functions, 0 if none 
        0,                    // RR_USER FuncRef - Ref to list of network function head, 0 if none 
  
        DEV_CFG_TYPE,       // p.#4     // RT_USER CfgType - Resource type for device config, 0 if none 
        IDD_MODULE,                     // RR_USER CfgRef - Ref to structure def of device config data, 0 if none 

        DEV_PNT_TYPE,       // p.#7     // RT_USER PntType - Resource type for point info, 0 if none 
        DEVICE_MODULE_2W_OUTPUT,                // RR_USER PntRef - Ref to structure def of point data 
    DRIVER_SENTENIAL        
END         

DEVICE_MODULEIO_2W_OUTPUT DEVICE_TYPE LOADONCALL DISCARDABLE        // paragraph #5      device type associated!
BEGIN
    // Device Cookie, Dev Prog, In, Out 
    DEVICE_MODULEIO_2W_OUTPUT+LONG_PAD,           // Add 0L to ensure UINT32
        0L, 0L, 0L,                     // Ana Prog, In, Out 
        0L, 0L, 0L,                     // Total count of points 
        0,                              // Not used
        // Name 
        "I/O 2 Word Output\0",
        // Description 
        "\r\n",
        ""
        "\0",
        0L, 0L, 0L, 0L                  // Expansion 

        0,      // p.#3     // RT_USER FuncType - Resource type for network/device functions, 0 if none 
        0,                    // RR_USER FuncRef - Ref to list of network function head, 0 if none 
  
        DEV_CFG_TYPE,       // p.#4     // RT_USER CfgType - Resource type for device config, 0 if none 
        IDD_MODULEIO,                     // RR_USER CfgRef - Ref to structure def of device config data, 0 if none 

        DEV_PNT_TYPE,       // p.#7     // RT_USER PntType - Resource type for point info, 0 if none 
        DEVICE_MODULE_2W_OUTPUT,                // RR_USER PntRef - Ref to structure def of point data 
    DRIVER_SENTENIAL        
END         




DEVICE_MODULE_2W_OUTPUT DEV_PNT_TYPE LOADONCALL DISCARDABLE        // paragraph #7
BEGIN
    //  Bits (short), Value (UINT32), Text 

    1+2+4+32 ,

    32, SA_OUTPUT,   0, "0 - Output  32b. dword\0"
    
    16, SA_OUTPUT,   0,  "0 - Output  16b. word\0"
    16, SA_OUTPUT,  16,  "1 - Output  16b. word\0"
    
    8,  SA_OUTPUT,   0,  " 0 - Output  byte\0"
    8,  SA_OUTPUT,   8,  " 1 - Output  byte\0"
    8,  SA_OUTPUT,  16,  " 2 - Output  byte\0"
    8,  SA_OUTPUT,  24,  " 3 - Output  byte\0"
    
    1, SA_OUTPUT,   0,  "  0 - Output  Bit\0"
    1, SA_OUTPUT,   1,  "  1 - Output  Bit\0"
    1, SA_OUTPUT,   2,  "  2 - Output  Bit\0"
    1, SA_OUTPUT,   3,  "  3 - Output  Bit\0"
    1, SA_OUTPUT,   4,  "  4 - Output  Bit\0"
    1, SA_OUTPUT,   5,  "  5 - Output  Bit\0"
    1, SA_OUTPUT,   6,  "  6 - Output  Bit\0"
    1, SA_OUTPUT,   7,  "  7 - Output  Bit\0"
    1, SA_OUTPUT,   8,  "  8 - Output  Bit\0"
    1, SA_OUTPUT,   9,  "  9 - Output  Bit\0"
    1, SA_OUTPUT,  10,  " 10 - Output  Bit\0"
    1, SA_OUTPUT,  11,  " 11 - Output  Bit\0"
    1, SA_OUTPUT,  12,  " 12 - Output  Bit\0"
    1, SA_OUTPUT,  13,  " 13 - Output  Bit\0"
    1, SA_OUTPUT,  14,  " 14 - Output  Bit\0"
    1, SA_OUTPUT,  15,  " 15 - Output  Bit\0"
    1, SA_OUTPUT,  16,  " 16 - Output  Bit\0"
    1, SA_OUTPUT,  17,  " 17 - Output  Bit\0"
    1, SA_OUTPUT,  18,  " 18 - Output  Bit\0"
    1, SA_OUTPUT,  19,  " 19 - Output  Bit\0"
    1, SA_OUTPUT,  20,  " 20 - Output  Bit\0"
    1, SA_OUTPUT,  21,  " 21 - Output  Bit\0"
    1, SA_OUTPUT,  22,  " 22 - Output  Bit\0"
    1, SA_OUTPUT,  23,  " 23 - Output  Bit\0"
    1, SA_OUTPUT,  24,  " 24 - Output  Bit\0"
    1, SA_OUTPUT,  25,  " 25 - Output  Bit\0"
    1, SA_OUTPUT,  26,  " 26 - Output  Bit\0"
    1, SA_OUTPUT,  27,  " 27 - Output  Bit\0"
    1, SA_OUTPUT,  28,  " 28 - Output  Bit\0"
    1, SA_OUTPUT,  29,  " 29 - Output  Bit\0"
    1, SA_OUTPUT,  30,  " 30 - Output  Bit\0"
    1, SA_OUTPUT,  31,  " 31 - Output  Bit\0"

DRIVER_SENTENIAL        
END


//!W

DEVICE_MODULE_1W_OUTPUT DEVICE_TYPE LOADONCALL DISCARDABLE        // paragraph #5      device type associated!
BEGIN
    // Device Cookie, Dev Prog, In, Out 
    DEVICE_MODULE_1W_OUTPUT+LONG_PAD,           // Add 0L to ensure UINT32
        0L, 0L, 0L,                     // Ana Prog, In, Out 
        0L, 0L, 0L,                     // Total count of points 
        0,                              // Not used
        // Name 
        "DPR 1 Word Output\0",
        // Description 
        "\r\n",
        ""
        "\0",
        0L, 0L, 0L, 0L                  // Expansion 

        0,      // p.#3     // RT_USER FuncType - Resource type for network/device functions, 0 if none 
        0,                    // RR_USER FuncRef - Ref to list of network function head, 0 if none 
  
        DEV_CFG_TYPE,       // p.#4     // RT_USER CfgType - Resource type for device config, 0 if none 
        IDD_MODULE,                     // RR_USER CfgRef - Ref to structure def of device config data, 0 if none 

        DEV_PNT_TYPE,       // p.#7     // RT_USER PntType - Resource type for point info, 0 if none 
        DEVICE_MODULE_1W_OUTPUT,                // RR_USER PntRef - Ref to structure def of point data 
    DRIVER_SENTENIAL        
END         

DEVICE_MODULEIO_1W_OUTPUT DEVICE_TYPE LOADONCALL DISCARDABLE        // paragraph #5      device type associated!
BEGIN
    // Device Cookie, Dev Prog, In, Out 
    DEVICE_MODULEIO_1W_OUTPUT+LONG_PAD,           // Add 0L to ensure UINT32
        0L, 0L, 0L,                     // Ana Prog, In, Out 
        0L, 0L, 0L,                     // Total count of points 
        0,                              // Not used
        // Name 
        "I/O 1 Word Output\0",
        // Description 
        "\r\n",
        ""
        "\0",
        0L, 0L, 0L, 0L                  // Expansion 

        0,      // p.#3     // RT_USER FuncType - Resource type for network/device functions, 0 if none 
        0,                    // RR_USER FuncRef - Ref to list of network function head, 0 if none 
  
        DEV_CFG_TYPE,       // p.#4     // RT_USER CfgType - Resource type for device config, 0 if none 
        IDD_MODULEIO,                     // RR_USER CfgRef - Ref to structure def of device config data, 0 if none 

        DEV_PNT_TYPE,       // p.#7     // RT_USER PntType - Resource type for point info, 0 if none 
        DEVICE_MODULE_1W_OUTPUT,                // RR_USER PntRef - Ref to structure def of point data 
    DRIVER_SENTENIAL        
END         



DEVICE_MODULE_1W_OUTPUT DEV_PNT_TYPE LOADONCALL DISCARDABLE        // paragraph #7
BEGIN
    //  Bits (short), Value (UINT32), Text 

    1+2+16 ,

    
    16, SA_OUTPUT,   0,  "0 - Output  16b. word\0"
    
    8,  SA_OUTPUT,   0,  " 0 - Output  byte\0"
    8,  SA_OUTPUT,   8,  " 1 - Output  byte\0"
    
    1, SA_OUTPUT,   0,  "  0 - Output  Bit\0"
    1, SA_OUTPUT,   1,  "  1 - Output  Bit\0"
    1, SA_OUTPUT,   2,  "  2 - Output  Bit\0"
    1, SA_OUTPUT,   3,  "  3 - Output  Bit\0"
    1, SA_OUTPUT,   4,  "  4 - Output  Bit\0"
    1, SA_OUTPUT,   5,  "  5 - Output  Bit\0"
    1, SA_OUTPUT,   6,  "  6 - Output  Bit\0"
    1, SA_OUTPUT,   7,  "  7 - Output  Bit\0"
    1, SA_OUTPUT,   8,  "  8 - Output  Bit\0"
    1, SA_OUTPUT,   9,  "  9 - Output  Bit\0"
    1, SA_OUTPUT,  10,  " 10 - Output  Bit\0"
    1, SA_OUTPUT,  11,  " 11 - Output  Bit\0"
    1, SA_OUTPUT,  12,  " 12 - Output  Bit\0"
    1, SA_OUTPUT,  13,  " 13 - Output  Bit\0"
    1, SA_OUTPUT,  14,  " 14 - Output  Bit\0"
    1, SA_OUTPUT,  15,  " 15 - Output  Bit\0"

DRIVER_SENTENIAL        
END


//1B

DEVICE_MODULE_1B_OUTPUT DEVICE_TYPE LOADONCALL DISCARDABLE        // paragraph #5      device type associated!
BEGIN
    // Device Cookie, Dev Prog, In, Out 
    DEVICE_MODULE_1B_OUTPUT+LONG_PAD,           // Add 0L to ensure UINT32
        0L, 0L, 0L,                     // Ana Prog, In, Out 
        0L, 0L, 0L,                     // Total count of points 
        0,                              // Not used
        // Name 
        "DPR 1 Byte Output\0",
        // Description 
        "Generic device 1 output byte.\r\n",
        "Write to 1 I/O address, as configured"
        "\0",
        0L, 0L, 0L, 0L                  // Expansion 

        0,      // p.#3     // RT_USER FuncType - Resource type for network/device functions, 0 if none 
        0,                    // RR_USER FuncRef - Ref to list of network function head, 0 if none 
  
        DEV_CFG_TYPE,       // p.#4     // RT_USER CfgType - Resource type for device config, 0 if none 
        IDD_MODULE,                     // RR_USER CfgRef - Ref to structure def of device config data, 0 if none 

        DEV_PNT_TYPE,       // p.#7     // RT_USER PntType - Resource type for point info, 0 if none 
        DEVICE_MODULE_1B_OUTPUT,                // RR_USER PntRef - Ref to structure def of point data 
    DRIVER_SENTENIAL        
END         

DEVICE_MODULEIO_1B_OUTPUT DEVICE_TYPE LOADONCALL DISCARDABLE        // paragraph #5      device type associated!
BEGIN
    // Device Cookie, Dev Prog, In, Out 
    DEVICE_MODULEIO_1B_OUTPUT+LONG_PAD,           // Add 0L to ensure UINT32
        0L, 0L, 0L,                     // Ana Prog, In, Out 
        0L, 0L, 0L,                     // Total count of points 
        0,                              // Not used
        // Name 
        "I/O 1 Byte Output\0",
        // Description 
        "Generic device 1 output byte.\r\n",
        "Write to 1 I/O address, as configured"
        "\0",
        0L, 0L, 0L, 0L                  // Expansion 

        0,      // p.#3     // RT_USER FuncType - Resource type for network/device functions, 0 if none 
        0,                    // RR_USER FuncRef - Ref to list of network function head, 0 if none 
  
        DEV_CFG_TYPE,       // p.#4     // RT_USER CfgType - Resource type for device config, 0 if none 
        IDD_MODULEIO,                     // RR_USER CfgRef - Ref to structure def of device config data, 0 if none 

        DEV_PNT_TYPE,       // p.#7     // RT_USER PntType - Resource type for point info, 0 if none 
        DEVICE_MODULE_1B_OUTPUT,                // RR_USER PntRef - Ref to structure def of point data 
    DRIVER_SENTENIAL        
END         


DEVICE_MODULE_1B_OUTPUT DEV_PNT_TYPE LOADONCALL DISCARDABLE        // paragraph #7
BEGIN
    //  Bits (short), Value (UINT32), Text 

    1+8 ,

    
    
    8, SA_OUTPUT,   0,  " 0 - Output  byte\0"
    
    1, SA_OUTPUT,   0,  "  0 - Output  Bit\0"
    1, SA_OUTPUT,   1,  "  1 - Output  Bit\0"
    1, SA_OUTPUT,   2,  "  2 - Output  Bit\0"
    1, SA_OUTPUT,   3,  "  3 - Output  Bit\0"
    1, SA_OUTPUT,   4,  "  4 - Output  Bit\0"
    1, SA_OUTPUT,   5,  "  5 - Output  Bit\0"
    1, SA_OUTPUT,   6,  "  6 - Output  Bit\0"
    1, SA_OUTPUT,   7,  "  7 - Output  Bit\0"

DRIVER_SENTENIAL        
END


///////////////////////

DEVICE_MODULE_4W_IORO DEVICE_TYPE LOADONCALL DISCARDABLE        // paragraph #5      device type associated!
BEGIN
    // Device Cookie, Dev Prog, In, Out 
    DEVICE_MODULE_4W_IORO+LONG_PAD,     // ensure a long value 
        0L, 0L, 0L,                     // Ana Prog, In, Out 
        0L, 0L, 0L,                     // Total count of points 
        0,                              // Not used
        // Name 
        "DPR 4 Word Input or Output\0",
        // Description 
        ".\r\n"
        "."
        "\0",
        0L, 0L, 0L, 0L                  // Expansion 

        0,      // p.#3     // RT_USER FuncType - Resource type for network/device functions, 0 if none 
        0,                    // RR_USER FuncRef - Ref to list of network function head, 0 if none 
  
        DEV_CFG_TYPE,       // p.#4     // RT_USER CfgType - Resource type for device config, 0 if none 
        IDD_MODULE,                  // RR_USER CfgRef - Ref to structure def of device config data, 0 if none 

        DEV_PNT_TYPE,       // p.#7     // RT_USER PntType - Resource type for point info, 0 if none 
        DEVICE_MODULE_4W_IORO,          // RR_USER PntRef - Ref to structure def of point data 
    DRIVER_SENTINEL        
END         


DEVICE_MODULEIO_4W_IORO DEVICE_TYPE LOADONCALL DISCARDABLE        // paragraph #5      device type associated!
BEGIN
    // Device Cookie, Dev Prog, In, Out 
    DEVICE_MODULEIO_4W_IORO+LONG_PAD,     // ensure a long value 
        0L, 0L, 0L,                     // Ana Prog, In, Out 
        0L, 0L, 0L,                     // Total count of points 
        0,                              // Not used
        // Name 
        "I/O 4 Word Input or Output\0",
        // Description 
        ".\r\n"
        "."
        "\0",
        0L, 0L, 0L, 0L                  // Expansion 

        0,      // p.#3     // RT_USER FuncType - Resource type for network/device functions, 0 if none 
        0,                    // RR_USER FuncRef - Ref to list of network function head, 0 if none 
  
        DEV_CFG_TYPE,       // p.#4     // RT_USER CfgType - Resource type for device config, 0 if none 
        IDD_MODULEIO,                  // RR_USER CfgRef - Ref to structure def of device config data, 0 if none 

        DEV_PNT_TYPE,       // p.#7     // RT_USER PntType - Resource type for point info, 0 if none 
        DEVICE_MODULE_4W_IORO,          // RR_USER PntRef - Ref to structure def of point data 
    DRIVER_SENTINEL        
END         





// 4W IORO
DEVICE_MODULE_4W_IORO DEV_PNT_TYPE LOADONCALL DISCARDABLE        // paragraph #7
BEGIN
    // Bits (short), Value (UINT32), Text 
    // Note: The points described here must fit what 
    // InputSizer() and OutputSizer() return for this device. 

    2+4+8+64,

    32, SA_IO,   0, "0 - Input or Output 32b. dword\0"
    32, SA_IO,  32, "1 - Input or Output 32b. dword\0"

    16, SA_IO,   0,  "0 - Input or Output 16b. word\0"
    16, SA_IO,  16,  "1 - Input or Output 16b. word\0"
    16, SA_IO,  32,  "2 - Input or Output 16b. word\0"
    16, SA_IO,  48,  "3 - Input or Output 16b. word\0"
    
    8,  SA_IO,   0,  " 0 - Input or Output byte\0"
    8,  SA_IO,   8,  " 1 - Input or Output byte\0"
    8,  SA_IO,  16,  " 2 - Input or Output byte\0"
    8,  SA_IO,  24,  " 3 - Input or Output byte\0"
    8,  SA_IO,  32,  " 4 - Input or Output byte\0"
    8,  SA_IO,  40,  " 5 - Input or Output byte\0"
    8,  SA_IO,  48,  " 6 - Input or Output byte\0"
    8,  SA_IO,  56,  " 7 - Input or Output byte\0"

    1, SA_IO,   0,  "  0 - Input or Output Bit\0"
    1, SA_IO,   1,  "  1 - Input or Output Bit\0"
    1, SA_IO,   2,  "  2 - Input or Output Bit\0"
    1, SA_IO,   3,  "  3 - Input or Output Bit\0"
    1, SA_IO,   4,  "  4 - Input or Output Bit\0"
    1, SA_IO,   5,  "  5 - Input or Output Bit\0"
    1, SA_IO,   6,  "  6 - Input or Output Bit\0"
    1, SA_IO,   7,  "  7 - Input or Output Bit\0"
    1, SA_IO,   8,  "  8 - Input or Output Bit\0"
    1, SA_IO,   9,  "  9 - Input or Output Bit\0"
    1, SA_IO,  10,  " 10 - Input or Output Bit\0"
    1, SA_IO,  11,  " 11 - Input or Output Bit\0"
    1, SA_IO,  12,  " 12 - Input or Output Bit\0"
    1, SA_IO,  13,  " 13 - Input or Output Bit\0"
    1, SA_IO,  14,  " 14 - Input or Output Bit\0"
    1, SA_IO,  15,  " 15 - Input or Output Bit\0"
    1, SA_IO,  16,  " 16 - Input or Output Bit\0"
    1, SA_IO,  17,  " 17 - Input or Output Bit\0"
    1, SA_IO,  18,  " 18 - Input or Output Bit\0"
    1, SA_IO,  19,  " 19 - Input or Output Bit\0"
    1, SA_IO,  20,  " 20 - Input or Output Bit\0"
    1, SA_IO,  21,  " 21 - Input or Output Bit\0"
    1, SA_IO,  22,  " 22 - Input or Output Bit\0"
    1, SA_IO,  23,  " 23 - Input or Output Bit\0"
    1, SA_IO,  24,  " 24 - Input or Output Bit\0"
    1, SA_IO,  25,  " 25 - Input or Output Bit\0"
    1, SA_IO,  26,  " 26 - Input or Output Bit\0"
    1, SA_IO,  27,  " 27 - Input or Output Bit\0"
    1, SA_IO,  28,  " 28 - Input or Output Bit\0"
    1, SA_IO,  29,  " 29 - Input or Output Bit\0"
    1, SA_IO,  30,  " 30 - Input or Output Bit\0"
    1, SA_IO,  31,  " 31 - Input or Output Bit\0"
    1, SA_IO,  32,  " 32 - Input or Output Bit\0"
    1, SA_IO,  33,  " 33 - Input or Output Bit\0"
    1, SA_IO,  34,  " 34 - Input or Output Bit\0"
    1, SA_IO,  35,  " 35 - Input or Output Bit\0"
    1, SA_IO,  36,  " 36 - Input or Output Bit\0"
    1, SA_IO,  37,  " 37 - Input or Output Bit\0"
    1, SA_IO,  38,  " 38 - Input or Output Bit\0"
    1, SA_IO,  39,  " 39 - Input or Output Bit\0"
    1, SA_IO,  40,  " 40 - Input or Output Bit\0"
    1, SA_IO,  41,  " 41 - Input or Output Bit\0"
    1, SA_IO,  42,  " 42 - Input or Output Bit\0"
    1, SA_IO,  43,  " 43 - Input or Output Bit\0"
    1, SA_IO,  44,  " 44 - Input or Output Bit\0"
    1, SA_IO,  45,  " 45 - Input or Output Bit\0"
    1, SA_IO,  46,  " 46 - Input or Output Bit\0"
    1, SA_IO,  47,  " 47 - Input or Output Bit\0"
    1, SA_IO,  48,  " 48 - Input or Output Bit\0"
    1, SA_IO,  49,  " 49 - Input or Output Bit\0"
    1, SA_IO,  50,  " 50 - Input or Output Bit\0"
    1, SA_IO,  51,  " 51 - Input or Output Bit\0"
    1, SA_IO,  52,  " 52 - Input or Output Bit\0"
    1, SA_IO,  53,  " 53 - Input or Output Bit\0"
    1, SA_IO,  54,  " 54 - Input or Output Bit\0"
    1, SA_IO,  55,  " 55 - Input or Output Bit\0"
    1, SA_IO,  56,  " 56 - Input or Output Bit\0"
    1, SA_IO,  57,  " 57 - Input or Output Bit\0"
    1, SA_IO,  58,  " 58 - Input or Output Bit\0"
    1, SA_IO,  59,  " 59 - Input or Output Bit\0"
    1, SA_IO,  60,  " 60 - Input or Output Bit\0"
    1, SA_IO,  61,  " 61 - Input or Output Bit\0"
    1, SA_IO,  62,  " 62 - Input or Output Bit\0"
    1, SA_IO,  63,  " 63 - Input or Output Bit\0"

DRIVER_SENTINEL        
END


// 2W IORO

DEVICE_MODULE_2W_IORO DEVICE_TYPE LOADONCALL DISCARDABLE        // paragraph #5      device type associated!
BEGIN
    // Device Cookie, Dev Prog, In, Out 
    DEVICE_MODULE_2W_IORO+LONG_PAD,     // ensure a long value 
        0L, 0L, 0L,                     // Ana Prog, In, Out 
        0L, 0L, 0L,                     // Total count of points 
        0,                              // Not used
        // Name 
        "DPR 2 Word Input or Output\0",
        // Description 
        ".\r\n"
        "."
        "\0",
        0L, 0L, 0L, 0L                  // Expansion 

        0,      // p.#3     // RT_USER FuncType - Resource type for network/device functions, 0 if none 
        0,                    // RR_USER FuncRef - Ref to list of network function head, 0 if none 
  
        DEV_CFG_TYPE,       // p.#4     // RT_USER CfgType - Resource type for device config, 0 if none 
        IDD_MODULE,                  // RR_USER CfgRef - Ref to structure def of device config data, 0 if none 

        DEV_PNT_TYPE,       // p.#7     // RT_USER PntType - Resource type for point info, 0 if none 
        DEVICE_MODULE_2W_IORO,          // RR_USER PntRef - Ref to structure def of point data 
    DRIVER_SENTINEL        
END         


DEVICE_MODULEIO_2W_IORO DEVICE_TYPE LOADONCALL DISCARDABLE        // paragraph #5      device type associated!
BEGIN
    // Device Cookie, Dev Prog, In, Out 
    DEVICE_MODULEIO_2W_IORO+LONG_PAD,     // ensure a long value 
        0L, 0L, 0L,                     // Ana Prog, In, Out 
        0L, 0L, 0L,                     // Total count of points 
        0,                              // Not used
        // Name 
        "I/O 2 Word Input or Output\0",
        // Description 
        ".\r\n"
        "."
        "\0",
        0L, 0L, 0L, 0L                  // Expansion 

        0,      // p.#3     // RT_USER FuncType - Resource type for network/device functions, 0 if none 
        0,                    // RR_USER FuncRef - Ref to list of network function head, 0 if none 
  
        DEV_CFG_TYPE,       // p.#4     // RT_USER CfgType - Resource type for device config, 0 if none 
        IDD_MODULEIO,                  // RR_USER CfgRef - Ref to structure def of device config data, 0 if none 

        DEV_PNT_TYPE,       // p.#7     // RT_USER PntType - Resource type for point info, 0 if none 
        DEVICE_MODULE_2W_IORO,          // RR_USER PntRef - Ref to structure def of point data 
    DRIVER_SENTINEL        
END         


DEVICE_MODULE_2W_IORO DEV_PNT_TYPE LOADONCALL DISCARDABLE        // paragraph #7
BEGIN
    // Bits (short), Value (UINT32), Text 
    // Note: The points described here must fit what 
    // InputSizer() and OutputSizer() return for this device. 

    1+2+4+32,

    32, SA_IO,   0, "0 - Input or Output 32b. dword\0"

    16, SA_IO,   0,  "0 - Input or Output 16b. word\0"
    16, SA_IO,  16,  "1 - Input or Output 16b. word\0"
    
    8,  SA_IO,   0,  " 0 - Input or Output byte\0"
    8,  SA_IO,   8,  " 1 - Input or Output byte\0"
    8,  SA_IO,  16,  " 2 - Input or Output byte\0"
    8,  SA_IO,  24,  " 3 - Input or Output byte\0"

    1, SA_IO,   0,  "  0 - Input or Output Bit\0"
    1, SA_IO,   1,  "  1 - Input or Output Bit\0"
    1, SA_IO,   2,  "  2 - Input or Output Bit\0"
    1, SA_IO,   3,  "  3 - Input or Output Bit\0"
    1, SA_IO,   4,  "  4 - Input or Output Bit\0"
    1, SA_IO,   5,  "  5 - Input or Output Bit\0"
    1, SA_IO,   6,  "  6 - Input or Output Bit\0"
    1, SA_IO,   7,  "  7 - Input or Output Bit\0"
    1, SA_IO,   8,  "  8 - Input or Output Bit\0"
    1, SA_IO,   9,  "  9 - Input or Output Bit\0"
    1, SA_IO,  10,  " 10 - Input or Output Bit\0"
    1, SA_IO,  11,  " 11 - Input or Output Bit\0"
    1, SA_IO,  12,  " 12 - Input or Output Bit\0"
    1, SA_IO,  13,  " 13 - Input or Output Bit\0"
    1, SA_IO,  14,  " 14 - Input or Output Bit\0"
    1, SA_IO,  15,  " 15 - Input or Output Bit\0"
    1, SA_IO,  16,  " 16 - Input or Output Bit\0"
    1, SA_IO,  17,  " 17 - Input or Output Bit\0"
    1, SA_IO,  18,  " 18 - Input or Output Bit\0"
    1, SA_IO,  19,  " 19 - Input or Output Bit\0"
    1, SA_IO,  20,  " 20 - Input or Output Bit\0"
    1, SA_IO,  21,  " 21 - Input or Output Bit\0"
    1, SA_IO,  22,  " 22 - Input or Output Bit\0"
    1, SA_IO,  23,  " 23 - Input or Output Bit\0"
    1, SA_IO,  24,  " 24 - Input or Output Bit\0"
    1, SA_IO,  25,  " 25 - Input or Output Bit\0"
    1, SA_IO,  26,  " 26 - Input or Output Bit\0"
    1, SA_IO,  27,  " 27 - Input or Output Bit\0"
    1, SA_IO,  28,  " 28 - Input or Output Bit\0"
    1, SA_IO,  29,  " 29 - Input or Output Bit\0"
    1, SA_IO,  30,  " 30 - Input or Output Bit\0"
    1, SA_IO,  31,  " 31 - Input or Output Bit\0"
DRIVER_SENTINEL        
END


DEVICE_MODULE_1W_IORO DEVICE_TYPE LOADONCALL DISCARDABLE        // paragraph #5      device type associated!
BEGIN
    // Device Cookie, Dev Prog, In, Out 
    DEVICE_MODULE_1W_IORO+LONG_PAD,     // ensure a long value 
        0L, 0L, 0L,                     // Ana Prog, In, Out 
        0L, 0L, 0L,                     // Total count of points 
        0,                              // Not used
        // Name 
        "DPR 1 Word Input or Output\0",
        // Description 
        ".\r\n"
        "."
        "\0",
        0L, 0L, 0L, 0L                  // Expansion 

        0,      // p.#3     // RT_USER FuncType - Resource type for network/device functions, 0 if none 
        0,                    // RR_USER FuncRef - Ref to list of network function head, 0 if none 
  
        DEV_CFG_TYPE,       // p.#4     // RT_USER CfgType - Resource type for device config, 0 if none 
        IDD_MODULE,                  // RR_USER CfgRef - Ref to structure def of device config data, 0 if none 

        DEV_PNT_TYPE,       // p.#7     // RT_USER PntType - Resource type for point info, 0 if none 
        DEVICE_MODULE_1W_IORO,          // RR_USER PntRef - Ref to structure def of point data 
    DRIVER_SENTINEL        
END         


DEVICE_MODULEIO_1W_IORO DEVICE_TYPE LOADONCALL DISCARDABLE        // paragraph #5      device type associated!
BEGIN
    // Device Cookie, Dev Prog, In, Out 
    DEVICE_MODULEIO_1W_IORO+LONG_PAD,     // ensure a long value 
        0L, 0L, 0L,                     // Ana Prog, In, Out 
        0L, 0L, 0L,                     // Total count of points 
        0,                              // Not used
        // Name 
        "I/O 1 Word Input or Output\0",
        // Description 
        ".\r\n"
        "."
        "\0",
        0L, 0L, 0L, 0L                  // Expansion 

        0,      // p.#3     // RT_USER FuncType - Resource type for network/device functions, 0 if none 
        0,                    // RR_USER FuncRef - Ref to list of network function head, 0 if none 
  
        DEV_CFG_TYPE,       // p.#4     // RT_USER CfgType - Resource type for device config, 0 if none 
        IDD_MODULEIO,                  // RR_USER CfgRef - Ref to structure def of device config data, 0 if none 

        DEV_PNT_TYPE,       // p.#7     // RT_USER PntType - Resource type for point info, 0 if none 
        DEVICE_MODULE_1W_IORO,          // RR_USER PntRef - Ref to structure def of point data 
    DRIVER_SENTINEL        
END         



// 1W IORO
DEVICE_MODULE_1W_IORO DEV_PNT_TYPE LOADONCALL DISCARDABLE        // paragraph #7
BEGIN
    // Bits (short), Value (UINT32), Text 
    // Note: The points described here must fit what 
    // InputSizer() and OutputSizer() return for this device. 

    0+1+2+16,

    16, SA_IO,   0,  "0 - Input or Output 16b. word\0"
    
    8,  SA_IO,   0,  " 0 - Input or Output byte\0"
    8,  SA_IO,   8,  " 1 - Input or Output byte\0"

    1, SA_IO,   0,  "  0 - Input or Output Bit\0"
    1, SA_IO,   1,  "  1 - Input or Output Bit\0"
    1, SA_IO,   2,  "  2 - Input or Output Bit\0"
    1, SA_IO,   3,  "  3 - Input or Output Bit\0"
    1, SA_IO,   4,  "  4 - Input or Output Bit\0"
    1, SA_IO,   5,  "  5 - Input or Output Bit\0"
    1, SA_IO,   6,  "  6 - Input or Output Bit\0"
    1, SA_IO,   7,  "  7 - Input or Output Bit\0"
    1, SA_IO,   8,  "  8 - Input or Output Bit\0"
    1, SA_IO,   9,  "  9 - Input or Output Bit\0"
    1, SA_IO,  10,  " 10 - Input or Output Bit\0"
    1, SA_IO,  11,  " 11 - Input or Output Bit\0"
    1, SA_IO,  12,  " 12 - Input or Output Bit\0"
    1, SA_IO,  13,  " 13 - Input or Output Bit\0"
    1, SA_IO,  14,  " 14 - Input or Output Bit\0"
    1, SA_IO,  15,  " 15 - Input or Output Bit\0"

DRIVER_SENTINEL        
END

DEVICE_MODULE_1B_IORO DEVICE_TYPE LOADONCALL DISCARDABLE        // paragraph #5      device type associated!
BEGIN
    // Device Cookie, Dev Prog, In, Out 
    DEVICE_MODULE_1B_IORO+LONG_PAD,     // ensure a long value 
        0L, 0L, 0L,                     // Ana Prog, In, Out 
        0L, 0L, 0L,                     // Total count of points 
        0,                              // Not used
        // Name 
        "DPR 1 Byte Input or Output\0",
        // Description 
        ".\r\n"
        "."
        "\0",
        0L, 0L, 0L, 0L                  // Expansion 

        0,      // p.#3     // RT_USER FuncType - Resource type for network/device functions, 0 if none 
        0,                    // RR_USER FuncRef - Ref to list of network function head, 0 if none 
  
        DEV_CFG_TYPE,       // p.#4     // RT_USER CfgType - Resource type for device config, 0 if none 
        IDD_MODULE,                  // RR_USER CfgRef - Ref to structure def of device config data, 0 if none 

        DEV_PNT_TYPE,       // p.#7     // RT_USER PntType - Resource type for point info, 0 if none 
        DEVICE_MODULE_1B_IORO,          // RR_USER PntRef - Ref to structure def of point data 
    DRIVER_SENTINEL        
END         


DEVICE_MODULEIO_1B_IORO DEVICE_TYPE LOADONCALL DISCARDABLE        // paragraph #5      device type associated!
BEGIN
    // Device Cookie, Dev Prog, In, Out 
    DEVICE_MODULEIO_1B_IORO+LONG_PAD,     // ensure a long value 
        0L, 0L, 0L,                     // Ana Prog, In, Out 
        0L, 0L, 0L,                     // Total count of points 
        0,                              // Not used
        // Name 
        "I/O 1 Byte Input or Output\0",
        // Description 
        ".\r\n"
        "."
        "\0",
        0L, 0L, 0L, 0L                  // Expansion 

        0,      // p.#3     // RT_USER FuncType - Resource type for network/device functions, 0 if none 
        0,                    // RR_USER FuncRef - Ref to list of network function head, 0 if none 
  
        DEV_CFG_TYPE,       // p.#4     // RT_USER CfgType - Resource type for device config, 0 if none 
        IDD_MODULEIO,                  // RR_USER CfgRef - Ref to structure def of device config data, 0 if none 

        DEV_PNT_TYPE,       // p.#7     // RT_USER PntType - Resource type for point info, 0 if none 
        DEVICE_MODULE_1B_IORO,          // RR_USER PntRef - Ref to structure def of point data 
    DRIVER_SENTINEL        
END         





// 1b IORO
DEVICE_MODULE_1B_IORO DEV_PNT_TYPE LOADONCALL DISCARDABLE        // paragraph #7
BEGIN
    // Bits (short), Value (UINT32), Text 
    // Note: The points described here must fit what 
    // InputSizer() and OutputSizer() return for this device. 

    0+0+1+8,

    
    8,  SA_IO,   0,  " 0 - Input or Output byte\0"

    1, SA_IO,   0,  "  0 - Input or Output Bit\0"
    1, SA_IO,   1,  "  1 - Input or Output Bit\0"
    1, SA_IO,   2,  "  2 - Input or Output Bit\0"
    1, SA_IO,   3,  "  3 - Input or Output Bit\0"
    1, SA_IO,   4,  "  4 - Input or Output Bit\0"
    1, SA_IO,   5,  "  5 - Input or Output Bit\0"
    1, SA_IO,   6,  "  6 - Input or Output Bit\0"
    1, SA_IO,   7,  "  7 - Input or Output Bit\0"

DRIVER_SENTINEL        
END


///////////////////////

DEVICE_MODULE_4W_IANDO DEVICE_TYPE LOADONCALL DISCARDABLE        // paragraph #5      device type associated!
BEGIN
    // Device Cookie, Dev Prog, In, Out 
    DEVICE_MODULE_4W_IANDO+LONG_PAD,    // ensure a long value 
        0L, 0L, 0L,                     // Ana Prog, In, Out 
        0L, 0L, 0L,                     // Total count of points 
        0,                              // Not used
        // Name 
        "DPR 4 Word Input and Output\0",
        // Description 
        ".\r\n"
        "."
        "\0",
        0L, 0L, 0L, 0L                  // Expansion 

        0,      // p.#3     // RT_USER FuncType - Resource type for network/device functions, 0 if none 
        0,                    // RR_USER FuncRef - Ref to list of network function head, 0 if none 
  
        DEV_CFG_TYPE,       // p.#4     // RT_USER CfgType - Resource type for device config, 0 if none 
        IDD_MODULE,                  // RR_USER CfgRef - Ref to structure def of device config data, 0 if none 

        DEV_PNT_TYPE,       // p.#7     // RT_USER PntType - Resource type for point info, 0 if none 
        DEVICE_MODULE_4W_IANDO,         // RR_USER PntRef - Ref to structure def of point data 
    DRIVER_SENTINEL        
END         


DEVICE_MODULEIO_4W_IANDO DEVICE_TYPE LOADONCALL DISCARDABLE        // paragraph #5      device type associated!
BEGIN
    // Device Cookie, Dev Prog, In, Out 
    DEVICE_MODULEIO_4W_IANDO+LONG_PAD,    // ensure a long value 
        0L, 0L, 0L,                     // Ana Prog, In, Out 
        0L, 0L, 0L,                     // Total count of points 
        0,                              // Not used
        // Name 
        "I/O 4 Word Input and Output\0",
        // Description 
        ".\r\n"
        "."
        "\0",
        0L, 0L, 0L, 0L                  // Expansion 

        0,      // p.#3     // RT_USER FuncType - Resource type for network/device functions, 0 if none 
        0,                    // RR_USER FuncRef - Ref to list of network function head, 0 if none 
  
        DEV_CFG_TYPE,       // p.#4     // RT_USER CfgType - Resource type for device config, 0 if none 
        IDD_MODULEIO,                  // RR_USER CfgRef - Ref to structure def of device config data, 0 if none 

        DEV_PNT_TYPE,       // p.#7     // RT_USER PntType - Resource type for point info, 0 if none 
        DEVICE_MODULE_4W_IANDO,         // RR_USER PntRef - Ref to structure def of point data 
    DRIVER_SENTINEL        
END      


DEVICE_MODULE_4W_IANDO DEV_PNT_TYPE LOADONCALL DISCARDABLE        // paragraph #7
BEGIN
    // Bits (short), Value (UINT32), Text 
    // Note: The points described here must fit what 
    // InputSizer() and OutputSizer() return for this device. 

    2+4+8+64 + 2+4+8+64,

    32, SA_INPUT,   0, "0 - Input 32b. dword\0"
    32, SA_INPUT,  32, "1 - Input 32b. dword\0"

    16, SA_INPUT,   0,  "0 - Input 16b. word\0"
    16, SA_INPUT,  16,  "1 - Input 16b. word\0"
    16, SA_INPUT,  32,  "2 - Input 16b. word\0"
    16, SA_INPUT,  48,  "3 - Input 16b. word\0"
    
    8,  SA_INPUT,   0,  " 0 - Input byte\0"
    8,  SA_INPUT,   8,  " 1 - Input byte\0"
    8,  SA_INPUT,  16,  " 2 - Input byte\0"
    8,  SA_INPUT,  24,  " 3 - Input byte\0"
    8,  SA_INPUT,  32,  " 4 - Input byte\0"
    8,  SA_INPUT,  40,  " 5 - Input byte\0"
    8,  SA_INPUT,  48,  " 6 - Input byte\0"
    8,  SA_INPUT,  56,  " 7 - Input byte\0"

    1, SA_INPUT,   0,  "  0 - Input Bit\0"
    1, SA_INPUT,   1,  "  1 - Input Bit\0"
    1, SA_INPUT,   2,  "  2 - Input Bit\0"
    1, SA_INPUT,   3,  "  3 - Input Bit\0"
    1, SA_INPUT,   4,  "  4 - Input Bit\0"
    1, SA_INPUT,   5,  "  5 - Input Bit\0"
    1, SA_INPUT,   6,  "  6 - Input Bit\0"
    1, SA_INPUT,   7,  "  7 - Input Bit\0"
    1, SA_INPUT,   8,  "  8 - Input Bit\0"
    1, SA_INPUT,   9,  "  9 - Input Bit\0"
    1, SA_INPUT,  10,  " 10 - Input Bit\0"
    1, SA_INPUT,  11,  " 11 - Input Bit\0"
    1, SA_INPUT,  12,  " 12 - Input Bit\0"
    1, SA_INPUT,  13,  " 13 - Input Bit\0"
    1, SA_INPUT,  14,  " 14 - Input Bit\0"
    1, SA_INPUT,  15,  " 15 - Input Bit\0"
    1, SA_INPUT,  16,  " 16 - Input Bit\0"
    1, SA_INPUT,  17,  " 17 - Input Bit\0"
    1, SA_INPUT,  18,  " 18 - Input Bit\0"
    1, SA_INPUT,  19,  " 19 - Input Bit\0"
    1, SA_INPUT,  20,  " 20 - Input Bit\0"
    1, SA_INPUT,  21,  " 21 - Input Bit\0"
    1, SA_INPUT,  22,  " 22 - Input Bit\0"
    1, SA_INPUT,  23,  " 23 - Input Bit\0"
    1, SA_INPUT,  24,  " 24 - Input Bit\0"
    1, SA_INPUT,  25,  " 25 - Input Bit\0"
    1, SA_INPUT,  26,  " 26 - Input Bit\0"
    1, SA_INPUT,  27,  " 27 - Input Bit\0"
    1, SA_INPUT,  28,  " 28 - Input Bit\0"
    1, SA_INPUT,  29,  " 29 - Input Bit\0"
    1, SA_INPUT,  30,  " 30 - Input Bit\0"
    1, SA_INPUT,  31,  " 31 - Input Bit\0"
    1, SA_INPUT,  32,  " 32 - Input Bit\0"
    1, SA_INPUT,  33,  " 33 - Input Bit\0"
    1, SA_INPUT,  34,  " 34 - Input Bit\0"
    1, SA_INPUT,  35,  " 35 - Input Bit\0"
    1, SA_INPUT,  36,  " 36 - Input Bit\0"
    1, SA_INPUT,  37,  " 37 - Input Bit\0"
    1, SA_INPUT,  38,  " 38 - Input Bit\0"
    1, SA_INPUT,  39,  " 39 - Input Bit\0"
    1, SA_INPUT,  40,  " 40 - Input Bit\0"
    1, SA_INPUT,  41,  " 41 - Input Bit\0"
    1, SA_INPUT,  42,  " 42 - Input Bit\0"
    1, SA_INPUT,  43,  " 43 - Input Bit\0"
    1, SA_INPUT,  44,  " 44 - Input Bit\0"
    1, SA_INPUT,  45,  " 45 - Input Bit\0"
    1, SA_INPUT,  46,  " 46 - Input Bit\0"
    1, SA_INPUT,  47,  " 47 - Input Bit\0"
    1, SA_INPUT,  48,  " 48 - Input Bit\0"
    1, SA_INPUT,  49,  " 49 - Input Bit\0"
    1, SA_INPUT,  50,  " 50 - Input Bit\0"
    1, SA_INPUT,  51,  " 51 - Input Bit\0"
    1, SA_INPUT,  52,  " 52 - Input Bit\0"
    1, SA_INPUT,  53,  " 53 - Input Bit\0"
    1, SA_INPUT,  54,  " 54 - Input Bit\0"
    1, SA_INPUT,  55,  " 55 - Input Bit\0"
    1, SA_INPUT,  56,  " 56 - Input Bit\0"
    1, SA_INPUT,  57,  " 57 - Input Bit\0"
    1, SA_INPUT,  58,  " 58 - Input Bit\0"
    1, SA_INPUT,  59,  " 59 - Input Bit\0"
    1, SA_INPUT,  60,  " 60 - Input Bit\0"
    1, SA_INPUT,  61,  " 61 - Input Bit\0"
    1, SA_INPUT,  62,  " 62 - Input Bit\0"
    1, SA_INPUT,  63,  " 63 - Input Bit\0"

    32, SA_OUTPUT,   0, "0 - Output 32b. dword\0"
    32, SA_OUTPUT,  32, "1 - Output 32b. dword\0"

    16, SA_OUTPUT,   0,  "0 - Output 16b. word\0"
    16, SA_OUTPUT,  16,  "1 - Output 16b. word\0"
    16, SA_OUTPUT,  32,  "2 - Output 16b. word\0"
    16, SA_OUTPUT,  48,  "3 - Output 16b. word\0"
    
    8,  SA_OUTPUT,   0,  " 0 - Output byte\0"
    8,  SA_OUTPUT,   8,  " 1 - Output byte\0"
    8,  SA_OUTPUT,  16,  " 2 - Output byte\0"
    8,  SA_OUTPUT,  24,  " 3 - Output byte\0"
    8,  SA_OUTPUT,  32,  " 4 - Output byte\0"
    8,  SA_OUTPUT,  40,  " 5 - Output byte\0"
    8,  SA_OUTPUT,  48,  " 6 - Output byte\0"
    8,  SA_OUTPUT,  56,  " 7 - Output byte\0"

    1, SA_OUTPUT,   0,  "  0 - Output Bit\0"
    1, SA_OUTPUT,   1,  "  1 - Output Bit\0"
    1, SA_OUTPUT,   2,  "  2 - Output Bit\0"
    1, SA_OUTPUT,   3,  "  3 - Output Bit\0"
    1, SA_OUTPUT,   4,  "  4 - Output Bit\0"
    1, SA_OUTPUT,   5,  "  5 - Output Bit\0"
    1, SA_OUTPUT,   6,  "  6 - Output Bit\0"
    1, SA_OUTPUT,   7,  "  7 - Output Bit\0"
    1, SA_OUTPUT,   8,  "  8 - Output Bit\0"
    1, SA_OUTPUT,   9,  "  9 - Output Bit\0"
    1, SA_OUTPUT,  10,  " 10 - Output Bit\0"
    1, SA_OUTPUT,  11,  " 11 - Output Bit\0"
    1, SA_OUTPUT,  12,  " 12 - Output Bit\0"
    1, SA_OUTPUT,  13,  " 13 - Output Bit\0"
    1, SA_OUTPUT,  14,  " 14 - Output Bit\0"
    1, SA_OUTPUT,  15,  " 15 - Output Bit\0"
    1, SA_OUTPUT,  16,  " 16 - Output Bit\0"
    1, SA_OUTPUT,  17,  " 17 - Output Bit\0"
    1, SA_OUTPUT,  18,  " 18 - Output Bit\0"
    1, SA_OUTPUT,  19,  " 19 - Output Bit\0"
    1, SA_OUTPUT,  20,  " 20 - Output Bit\0"
    1, SA_OUTPUT,  21,  " 21 - Output Bit\0"
    1, SA_OUTPUT,  22,  " 22 - Output Bit\0"
    1, SA_OUTPUT,  23,  " 23 - Output Bit\0"
    1, SA_OUTPUT,  24,  " 24 - Output Bit\0"
    1, SA_OUTPUT,  25,  " 25 - Output Bit\0"
    1, SA_OUTPUT,  26,  " 26 - Output Bit\0"
    1, SA_OUTPUT,  27,  " 27 - Output Bit\0"
    1, SA_OUTPUT,  28,  " 28 - Output Bit\0"
    1, SA_OUTPUT,  29,  " 29 - Output Bit\0"
    1, SA_OUTPUT,  30,  " 30 - Output Bit\0"
    1, SA_OUTPUT,  31,  " 31 - Output Bit\0"
    1, SA_OUTPUT,  32,  " 32 - Output Bit\0"
    1, SA_OUTPUT,  33,  " 33 - Output Bit\0"
    1, SA_OUTPUT,  34,  " 34 - Output Bit\0"
    1, SA_OUTPUT,  35,  " 35 - Output Bit\0"
    1, SA_OUTPUT,  36,  " 36 - Output Bit\0"
    1, SA_OUTPUT,  37,  " 37 - Output Bit\0"
    1, SA_OUTPUT,  38,  " 38 - Output Bit\0"
    1, SA_OUTPUT,  39,  " 39 - Output Bit\0"
    1, SA_OUTPUT,  40,  " 40 - Output Bit\0"
    1, SA_OUTPUT,  41,  " 41 - Output Bit\0"
    1, SA_OUTPUT,  42,  " 42 - Output Bit\0"
    1, SA_OUTPUT,  43,  " 43 - Output Bit\0"
    1, SA_OUTPUT,  44,  " 44 - Output Bit\0"
    1, SA_OUTPUT,  45,  " 45 - Output Bit\0"
    1, SA_OUTPUT,  46,  " 46 - Output Bit\0"
    1, SA_OUTPUT,  47,  " 47 - Output Bit\0"
    1, SA_OUTPUT,  48,  " 48 - Output Bit\0"
    1, SA_OUTPUT,  49,  " 49 - Output Bit\0"
    1, SA_OUTPUT,  50,  " 50 - Output Bit\0"
    1, SA_OUTPUT,  51,  " 51 - Output Bit\0"
    1, SA_OUTPUT,  52,  " 52 - Output Bit\0"
    1, SA_OUTPUT,  53,  " 53 - Output Bit\0"
    1, SA_OUTPUT,  54,  " 54 - Output Bit\0"
    1, SA_OUTPUT,  55,  " 55 - Output Bit\0"
    1, SA_OUTPUT,  56,  " 56 - Output Bit\0"
    1, SA_OUTPUT,  57,  " 57 - Output Bit\0"
    1, SA_OUTPUT,  58,  " 58 - Output Bit\0"
    1, SA_OUTPUT,  59,  " 59 - Output Bit\0"
    1, SA_OUTPUT,  60,  " 60 - Output Bit\0"
    1, SA_OUTPUT,  61,  " 61 - Output Bit\0"
    1, SA_OUTPUT,  62,  " 62 - Output Bit\0"
    1, SA_OUTPUT,  63,  " 63 - Output Bit\0"

DRIVER_SENTINEL        
END


///////////2W_IANDO

DEVICE_MODULE_2W_IANDO DEVICE_TYPE LOADONCALL DISCARDABLE        // paragraph #5      device type associated!
BEGIN
    // Device Cookie, Dev Prog, In, Out 
    DEVICE_MODULE_2W_IANDO+LONG_PAD,    // ensure a long value 
        0L, 0L, 0L,                     // Ana Prog, In, Out 
        0L, 0L, 0L,                     // Total count of points 
        0,                              // Not used
        // Name 
        "DPR 2 Word Input and Output\0",
        // Description 
        ".\r\n"
        "."
        "\0",
        0L, 0L, 0L, 0L                  // Expansion 

        0,      // p.#3     // RT_USER FuncType - Resource type for network/device functions, 0 if none 
        0,                    // RR_USER FuncRef - Ref to list of network function head, 0 if none 
  
        DEV_CFG_TYPE,       // p.#4     // RT_USER CfgType - Resource type for device config, 0 if none 
        IDD_MODULE,                  // RR_USER CfgRef - Ref to structure def of device config data, 0 if none 

        DEV_PNT_TYPE,       // p.#7     // RT_USER PntType - Resource type for point info, 0 if none 
        DEVICE_MODULE_2W_IANDO,         // RR_USER PntRef - Ref to structure def of point data 
    DRIVER_SENTINEL        
END         


DEVICE_MODULEIO_2W_IANDO DEVICE_TYPE LOADONCALL DISCARDABLE        // paragraph #5      device type associated!
BEGIN
    // Device Cookie, Dev Prog, In, Out 
    DEVICE_MODULEIO_2W_IANDO+LONG_PAD,    // ensure a long value 
        0L, 0L, 0L,                     // Ana Prog, In, Out 
        0L, 0L, 0L,                     // Total count of points 
        0,                              // Not used
        // Name 
        "I/O 2 Word Input and Output\0"
        // Description 
        ".\r\n"
        "."
        "\0",
        0L, 0L, 0L, 0L                  // Expansion 

        0,      // p.#3     // RT_USER FuncType - Resource type for network/device functions, 0 if none 
        0,                    // RR_USER FuncRef - Ref to list of network function head, 0 if none 
  
        DEV_CFG_TYPE,       // p.#4     // RT_USER CfgType - Resource type for device config, 0 if none 
        IDD_MODULEIO,                  // RR_USER CfgRef - Ref to structure def of device config data, 0 if none 

        DEV_PNT_TYPE,       // p.#7     // RT_USER PntType - Resource type for point info, 0 if none 
        DEVICE_MODULE_2W_IANDO,         // RR_USER PntRef - Ref to structure def of point data 
    DRIVER_SENTINEL        
END      


DEVICE_MODULE_2W_IANDO DEV_PNT_TYPE LOADONCALL DISCARDABLE        // paragraph #7
BEGIN
    // Bits (short), Value (UINT32), Text 
    // Note: The points described here must fit what 
    // InputSizer() and OutputSizer() return for this device. 

    1+2+4+32 + 1+2+4+32,

    32, SA_INPUT,   0, "0 - Input 32b. dword\0"

    16, SA_INPUT,   0,  "0 - Input 16b. word\0"
    16, SA_INPUT,  16,  "1 - Input 16b. word\0"
    
    8,  SA_INPUT,   0,  " 0 - Input byte\0"
    8,  SA_INPUT,   8,  " 1 - Input byte\0"
    8,  SA_INPUT,  16,  " 2 - Input byte\0"
    8,  SA_INPUT,  24,  " 3 - Input byte\0"

    1, SA_INPUT,   0,  "  0 - Input Bit\0"
    1, SA_INPUT,   1,  "  1 - Input Bit\0"
    1, SA_INPUT,   2,  "  2 - Input Bit\0"
    1, SA_INPUT,   3,  "  3 - Input Bit\0"
    1, SA_INPUT,   4,  "  4 - Input Bit\0"
    1, SA_INPUT,   5,  "  5 - Input Bit\0"
    1, SA_INPUT,   6,  "  6 - Input Bit\0"
    1, SA_INPUT,   7,  "  7 - Input Bit\0"
    1, SA_INPUT,   8,  "  8 - Input Bit\0"
    1, SA_INPUT,   9,  "  9 - Input Bit\0"
    1, SA_INPUT,  10,  " 10 - Input Bit\0"
    1, SA_INPUT,  11,  " 11 - Input Bit\0"
    1, SA_INPUT,  12,  " 12 - Input Bit\0"
    1, SA_INPUT,  13,  " 13 - Input Bit\0"
    1, SA_INPUT,  14,  " 14 - Input Bit\0"
    1, SA_INPUT,  15,  " 15 - Input Bit\0"
    1, SA_INPUT,  16,  " 16 - Input Bit\0"
    1, SA_INPUT,  17,  " 17 - Input Bit\0"
    1, SA_INPUT,  18,  " 18 - Input Bit\0"
    1, SA_INPUT,  19,  " 19 - Input Bit\0"
    1, SA_INPUT,  20,  " 20 - Input Bit\0"
    1, SA_INPUT,  21,  " 21 - Input Bit\0"
    1, SA_INPUT,  22,  " 22 - Input Bit\0"
    1, SA_INPUT,  23,  " 23 - Input Bit\0"
    1, SA_INPUT,  24,  " 24 - Input Bit\0"
    1, SA_INPUT,  25,  " 25 - Input Bit\0"
    1, SA_INPUT,  26,  " 26 - Input Bit\0"
    1, SA_INPUT,  27,  " 27 - Input Bit\0"
    1, SA_INPUT,  28,  " 28 - Input Bit\0"
    1, SA_INPUT,  29,  " 29 - Input Bit\0"
    1, SA_INPUT,  30,  " 30 - Input Bit\0"
    1, SA_INPUT,  31,  " 31 - Input Bit\0"

    32, SA_OUTPUT,   0, "0 - Output 32b. dword\0"

    16, SA_OUTPUT,   0,  "0 - Output 16b. word\0"
    16, SA_OUTPUT,  16,  "1 - Output 16b. word\0"
    
    8,  SA_OUTPUT,   0,  " 0 - Output byte\0"
    8,  SA_OUTPUT,   8,  " 1 - Output byte\0"
    8,  SA_OUTPUT,  16,  " 2 - Output byte\0"
    8,  SA_OUTPUT,  24,  " 3 - Output byte\0"

    1, SA_OUTPUT,   0,  "  0 - Output Bit\0"
    1, SA_OUTPUT,   1,  "  1 - Output Bit\0"
    1, SA_OUTPUT,   2,  "  2 - Output Bit\0"
    1, SA_OUTPUT,   3,  "  3 - Output Bit\0"
    1, SA_OUTPUT,   4,  "  4 - Output Bit\0"
    1, SA_OUTPUT,   5,  "  5 - Output Bit\0"
    1, SA_OUTPUT,   6,  "  6 - Output Bit\0"
    1, SA_OUTPUT,   7,  "  7 - Output Bit\0"
    1, SA_OUTPUT,   8,  "  8 - Output Bit\0"
    1, SA_OUTPUT,   9,  "  9 - Output Bit\0"
    1, SA_OUTPUT,  10,  " 10 - Output Bit\0"
    1, SA_OUTPUT,  11,  " 11 - Output Bit\0"
    1, SA_OUTPUT,  12,  " 12 - Output Bit\0"
    1, SA_OUTPUT,  13,  " 13 - Output Bit\0"
    1, SA_OUTPUT,  14,  " 14 - Output Bit\0"
    1, SA_OUTPUT,  15,  " 15 - Output Bit\0"
    1, SA_OUTPUT,  16,  " 16 - Output Bit\0"
    1, SA_OUTPUT,  17,  " 17 - Output Bit\0"
    1, SA_OUTPUT,  18,  " 18 - Output Bit\0"
    1, SA_OUTPUT,  19,  " 19 - Output Bit\0"
    1, SA_OUTPUT,  20,  " 20 - Output Bit\0"
    1, SA_OUTPUT,  21,  " 21 - Output Bit\0"
    1, SA_OUTPUT,  22,  " 22 - Output Bit\0"
    1, SA_OUTPUT,  23,  " 23 - Output Bit\0"
    1, SA_OUTPUT,  24,  " 24 - Output Bit\0"
    1, SA_OUTPUT,  25,  " 25 - Output Bit\0"
    1, SA_OUTPUT,  26,  " 26 - Output Bit\0"
    1, SA_OUTPUT,  27,  " 27 - Output Bit\0"
    1, SA_OUTPUT,  28,  " 28 - Output Bit\0"
    1, SA_OUTPUT,  29,  " 29 - Output Bit\0"
    1, SA_OUTPUT,  30,  " 30 - Output Bit\0"
    1, SA_OUTPUT,  31,  " 31 - Output Bit\0"

DRIVER_SENTINEL        
END

//////////
///////////1W_IANDO

DEVICE_MODULE_1W_IANDO DEVICE_TYPE LOADONCALL DISCARDABLE        // paragraph #5      device type associated!
BEGIN
    // Device Cookie, Dev Prog, In, Out 
    DEVICE_MODULE_1W_IANDO+LONG_PAD,    // ensure a long value 
        0L, 0L, 0L,                     // Ana Prog, In, Out 
        0L, 0L, 0L,                     // Total count of points 
        0,                              // Not used
        // Name 
        "DPR 1 Word Input and Output\0",
        // Description 
        ".\r\n"
        "."
        "\0",
        0L, 0L, 0L, 0L                  // Expansion 

        0,      // p.#3     // RT_USER FuncType - Resource type for network/device functions, 0 if none 
        0,                    // RR_USER FuncRef - Ref to list of network function head, 0 if none 
  
        DEV_CFG_TYPE,       // p.#4     // RT_USER CfgType - Resource type for device config, 0 if none 
        IDD_MODULE,                  // RR_USER CfgRef - Ref to structure def of device config data, 0 if none 

        DEV_PNT_TYPE,       // p.#7     // RT_USER PntType - Resource type for point info, 0 if none 
        DEVICE_MODULE_1W_IANDO,         // RR_USER PntRef - Ref to structure def of point data 
    DRIVER_SENTINEL        
END         


DEVICE_MODULEIO_1W_IANDO DEVICE_TYPE LOADONCALL DISCARDABLE        // paragraph #5      device type associated!
BEGIN
    // Device Cookie, Dev Prog, In, Out 
    DEVICE_MODULEIO_1W_IANDO+LONG_PAD,    // ensure a long value 
        0L, 0L, 0L,                     // Ana Prog, In, Out 
        0L, 0L, 0L,                     // Total count of points 
        0,                              // Not used
        // Name 
        "I/O 1 Word Input and Output\0",
        // Description 
        ".\r\n"
        "."
        "\0",
        0L, 0L, 0L, 0L                  // Expansion 

        0,      // p.#3     // RT_USER FuncType - Resource type for network/device functions, 0 if none 
        0,                    // RR_USER FuncRef - Ref to list of network function head, 0 if none 
  
        DEV_CFG_TYPE,       // p.#4     // RT_USER CfgType - Resource type for device config, 0 if none 
        IDD_MODULEIO,                  // RR_USER CfgRef - Ref to structure def of device config data, 0 if none 

        DEV_PNT_TYPE,       // p.#7     // RT_USER PntType - Resource type for point info, 0 if none 
        DEVICE_MODULE_1W_IANDO,         // RR_USER PntRef - Ref to structure def of point data 
    DRIVER_SENTINEL        
END      






DEVICE_MODULE_1W_IANDO DEV_PNT_TYPE LOADONCALL DISCARDABLE        // paragraph #7
BEGIN
    // Bits (short), Value (UINT32), Text 
    // Note: The points described here must fit what 
    // InputSizer() and OutputSizer() return for this device. 

    0+1+2+16 + 0+1+2+16,

    16, SA_INPUT,   0,  "0 - Input 16b. word\0"
    
    8,  SA_INPUT,   0,  " 0 - Input byte\0"
    8,  SA_INPUT,   8,  " 1 - Input byte\0"

    1, SA_INPUT,   0,  "  0 - Input Bit\0"
    1, SA_INPUT,   1,  "  1 - Input Bit\0"
    1, SA_INPUT,   2,  "  2 - Input Bit\0"
    1, SA_INPUT,   3,  "  3 - Input Bit\0"
    1, SA_INPUT,   4,  "  4 - Input Bit\0"
    1, SA_INPUT,   5,  "  5 - Input Bit\0"
    1, SA_INPUT,   6,  "  6 - Input Bit\0"
    1, SA_INPUT,   7,  "  7 - Input Bit\0"
    1, SA_INPUT,   8,  "  8 - Input Bit\0"
    1, SA_INPUT,   9,  "  9 - Input Bit\0"
    1, SA_INPUT,  10,  " 10 - Input Bit\0"
    1, SA_INPUT,  11,  " 11 - Input Bit\0"
    1, SA_INPUT,  12,  " 12 - Input Bit\0"
    1, SA_INPUT,  13,  " 13 - Input Bit\0"
    1, SA_INPUT,  14,  " 14 - Input Bit\0"
    1, SA_INPUT,  15,  " 15 - Input Bit\0"

    16, SA_OUTPUT,   0,  "0 - Output 16b. word\0"
    
    8,  SA_OUTPUT,   0,  " 0 - Output byte\0"
    8,  SA_OUTPUT,   8,  " 1 - Output byte\0"

    1, SA_OUTPUT,   0,  "  0 - Output Bit\0"
    1, SA_OUTPUT,   1,  "  1 - Output Bit\0"
    1, SA_OUTPUT,   2,  "  2 - Output Bit\0"
    1, SA_OUTPUT,   3,  "  3 - Output Bit\0"
    1, SA_OUTPUT,   4,  "  4 - Output Bit\0"
    1, SA_OUTPUT,   5,  "  5 - Output Bit\0"
    1, SA_OUTPUT,   6,  "  6 - Output Bit\0"
    1, SA_OUTPUT,   7,  "  7 - Output Bit\0"
    1, SA_OUTPUT,   8,  "  8 - Output Bit\0"
    1, SA_OUTPUT,   9,  "  9 - Output Bit\0"
    1, SA_OUTPUT,  10,  " 10 - Output Bit\0"
    1, SA_OUTPUT,  11,  " 11 - Output Bit\0"
    1, SA_OUTPUT,  12,  " 12 - Output Bit\0"
    1, SA_OUTPUT,  13,  " 13 - Output Bit\0"
    1, SA_OUTPUT,  14,  " 14 - Output Bit\0"
    1, SA_OUTPUT,  15,  " 15 - Output Bit\0"

DRIVER_SENTINEL        
END


/////////////
///////////1B_IANDO

DEVICE_MODULE_1B_IANDO DEVICE_TYPE LOADONCALL DISCARDABLE        // paragraph #5      device type associated!
BEGIN
    // Device Cookie, Dev Prog, In, Out 
    DEVICE_MODULE_1B_IANDO+LONG_PAD,    // ensure a long value 
        0L, 0L, 0L,                     // Ana Prog, In, Out 
        0L, 0L, 0L,                     // Total count of points 
        0,                              // Not used
        // Name 
        "DPR 1 Byte Input and Output\0",
        // Description 
        ".\r\n"
        "."
        "\0",
        0L, 0L, 0L, 0L                  // Expansion 

        0,      // p.#3     // RT_USER FuncType - Resource type for network/device functions, 0 if none 
        0,                    // RR_USER FuncRef - Ref to list of network function head, 0 if none 
  
        DEV_CFG_TYPE,       // p.#4     // RT_USER CfgType - Resource type for device config, 0 if none 
        IDD_MODULE,                  // RR_USER CfgRef - Ref to structure def of device config data, 0 if none 

        DEV_PNT_TYPE,       // p.#7     // RT_USER PntType - Resource type for point info, 0 if none 
        DEVICE_MODULE_1B_IANDO,         // RR_USER PntRef - Ref to structure def of point data 
    DRIVER_SENTINEL        
END         


DEVICE_MODULEIO_1B_IANDO DEVICE_TYPE LOADONCALL DISCARDABLE        // paragraph #5      device type associated!
BEGIN
    // Device Cookie, Dev Prog, In, Out 
    DEVICE_MODULEIO_1B_IANDO+LONG_PAD,    // ensure a long value 
        0L, 0L, 0L,                     // Ana Prog, In, Out 
        0L, 0L, 0L,                     // Total count of points 
        0,                              // Not used
        // Name 
        "I/O 1 Byte Input and Output\0",
        // Description 
        ".\r\n"
        "."
        "\0",
        0L, 0L, 0L, 0L                  // Expansion 

        0,      // p.#3     // RT_USER FuncType - Resource type for network/device functions, 0 if none 
        0,                    // RR_USER FuncRef - Ref to list of network function head, 0 if none 
  
        DEV_CFG_TYPE,       // p.#4     // RT_USER CfgType - Resource type for device config, 0 if none 
        IDD_MODULEIO,                  // RR_USER CfgRef - Ref to structure def of device config data, 0 if none 

        DEV_PNT_TYPE,       // p.#7     // RT_USER PntType - Resource type for point info, 0 if none 
        DEVICE_MODULE_1B_IANDO,         // RR_USER PntRef - Ref to structure def of point data 
    DRIVER_SENTINEL        
END      


DEVICE_MODULE_1B_IANDO DEV_PNT_TYPE LOADONCALL DISCARDABLE        // paragraph #7
BEGIN
    // Bits (short), Value (UINT32), Text 
    // Note: The points described here must fit what 
    // InputSizer() and OutputSizer() return for this device. 

    0+0+1+8 + 0+0+1+8,

    8,  SA_INPUT,   0,  " 0 - Input byte\0"

    1, SA_INPUT,   0,  "  0 - Input Bit\0"
    1, SA_INPUT,   1,  "  1 - Input Bit\0"
    1, SA_INPUT,   2,  "  2 - Input Bit\0"
    1, SA_INPUT,   3,  "  3 - Input Bit\0"
    1, SA_INPUT,   4,  "  4 - Input Bit\0"
    1, SA_INPUT,   5,  "  5 - Input Bit\0"
    1, SA_INPUT,   6,  "  6 - Input Bit\0"
    1, SA_INPUT,   7,  "  7 - Input Bit\0"
    
    8,  SA_OUTPUT,   0,  " 0 - Output byte\0"

    1, SA_OUTPUT,   0,  "  0 - Output Bit\0"
    1, SA_OUTPUT,   1,  "  1 - Output Bit\0"
    1, SA_OUTPUT,   2,  "  2 - Output Bit\0"
    1, SA_OUTPUT,   3,  "  3 - Output Bit\0"
    1, SA_OUTPUT,   4,  "  4 - Output Bit\0"
    1, SA_OUTPUT,   5,  "  5 - Output Bit\0"
    1, SA_OUTPUT,   6,  "  6 - Output Bit\0"
    1, SA_OUTPUT,   7,  "  7 - Output Bit\0"

DRIVER_SENTINEL        
END


// Start PMC code


////////////// start pmc function implementation


// pmc


DC2_RX_BIN NET_PARAM_TYPE LOADONCALL DISCARDABLE          // paragraph #8
BEGIN                                   
    4,                                  // how many parameters does this function has 

    //  1 - UINT16   FunctionId;   Offset FNC_HD_FUNCTIONID, Size FNC_HD_FUNCTIONID_SIZE 
        "\0",                           // short name 
        "\0",
        0L, 0L, 0L, 0L                  // Expansion 
        0,                              // CTRL_ID CtrlId_type - Id of control in dll dialog for this param value or type if using default dlg 
        HELP_IDX_NONE                   // HELP_IDX m_HelpIdx
        FNC_HD_FUNCTIONID,              // DWORD Offset - Offset in config block for this param value 
        FNC_HD_FUNCTIONID_SIZE,         // DWORD Size - Number of bytes in config block for this param value 
        // ParamTypes (WORD) Type - How the data is to be processed 
        PT_CONST,
        DC2_RX_BIN+LONG_PAD,          // function's id. Add 0L to ensure UINT32
    DRIVER_SENTENIAL
        


   //  value
        "Rx Buffer\0",
        "Rx Buffer\0",
        0L, 0L, 0L, 0L,        
        IDC_E_VALUE,           
        HELP_IDX_NONE         
        FNC_BIN_STRING,    
        FNC_BIN_STRING_SIZE,
        PT_BUFFER,
		DRIVER_SENTENIAL

   //  value
        "Read Size\0",
        "Read Size\0",
        0L, 0L, 0L, 0L,        
        IDC_E_VALUE2,           
        HELP_IDX_NONE,         
        FNC_BIN_VALUE,    
        FNC_BIN_VALUE_SIZE,
		PT_SVALUE,
		0L,                           // UINT32 m_Default
        0L,                           // UINT32 m_Min
        255L,                        // UINT32 m_Max
        1L,                           // UINT32 m_Step
		DRIVER_SENTENIAL


  
	// status return function value here !

        "Status\0",    
        "Status\0",
        0L, 0L, 0L, 0L       
        IDC_E_STATUS,        
        HELP_IDX_NONE        
        FNC_HD_RESULT,       
        FNC_HD_RESULT_SIZE,  
        PT_SREF,
		DRIVER_SENTENIAL
    
DRIVER_SENTENIAL        
END








///////////

DC2_TX_BIN1 NET_PARAM_TYPE LOADONCALL DISCARDABLE        
BEGIN                                   
    5,              

    // FunctionId;  
        "Tx Bin\0",       
        "Tx Bin\0",
        0L, 0L, 0L, 0L       
        0,                   
        HELP_IDX_NONE        
        FNC_HD_FUNCTIONID,    
        FNC_HD_FUNCTIONID_SIZE,
        
        PT_CONST,
        DC2_TX_BIN1+LONG_PAD,     
		DRIVER_SENTENIAL
        
	// axis

        "Axis\0",           
        "Axis\0",
        0L, 0L, 0L, 0L,     
        IDC_CHANNEL,      
        HELP_IDX_NONE       
        FNC_BIN_AXIS,       
        FNC_BIN_AXIS_SIZE,  
        
		PT_VALUE,
		1L,                           // UINT32 m_Default
        0L,                           // UINT32 m_Min
        0x08L,                        // UINT32 m_Max
        1L,                           // UINT32 m_Step
		DRIVER_SENTENIAL

    //  function


        "Function\0",    
        "Function\0",
        0L, 0L, 0L, 0L,  
        IDC_CO_FUNCTION, 
        HELP_IDX_NONE    
        FNC_BIN_FUNCTION, 
        FNC_BIN_FUNCTION_SIZE, 
        PT_STRING_LIST,
        PMC_DS+LONG_PAD,
        NET_CFGLIST_TYPE, 
		LIST_FUNCTION1,  
		DRIVER_SENTENIAL


   //  value
        "Tx Buffer\0",
        "Tx Buffer\0",
        0L, 0L, 0L, 0L,        
        IDC_E_VALUE,           
        HELP_IDX_NONE,         
        FNC_BIN_VALUE,    
        FNC_BIN_VALUE_SIZE,
		PT_SVALUE,
		0L,                           // UINT32 m_Default
        0x80000000L,                           // UINT32 m_Min
        0x7FFFFFFFL,                        // UINT32 m_Max
        1L,                           // UINT32 m_Step


		DRIVER_SENTENIAL
  
	// status

        "Status\0",    
        "Status\0",
        0L, 0L, 0L, 0L       
        IDC_E_STATUS,        
        HELP_IDX_NONE        
        FNC_HD_RESULT,       
        FNC_HD_RESULT_SIZE,  
		PT_SREF,
		DRIVER_SENTENIAL
    
DRIVER_SENTENIAL        
END

DC2_TX_BIN2 NET_PARAM_TYPE LOADONCALL DISCARDABLE        
BEGIN                                   
    5,              

    // FunctionId;  
        "Tx Bin\0",       
        "Tx Bin\0",
        0L, 0L, 0L, 0L       
        0,                   
        HELP_IDX_NONE        
        FNC_HD_FUNCTIONID,    
        FNC_HD_FUNCTIONID_SIZE,
        
        PT_CONST,
        DC2_TX_BIN2+LONG_PAD,     
		DRIVER_SENTENIAL
        
	// axis

        "Axis\0",           
        "Axis\0",
        0L, 0L, 0L, 0L,     
        IDC_CHANNEL,      
        HELP_IDX_NONE       
        FNC_BIN_AXIS,       
        FNC_BIN_AXIS_SIZE,  
        
		PT_VALUE,
		1L,                           // UINT32 m_Default
        0L,                           // UINT32 m_Min
        0x08L,                        // UINT32 m_Max
        1L,                           // UINT32 m_Step

		DRIVER_SENTENIAL

    //  function


        "Function\0",    
        "Function\0",
        0L, 0L, 0L, 0L,  
        IDC_CO_FUNCTION, 
        HELP_IDX_NONE    
        FNC_BIN_FUNCTION, 
        FNC_BIN_FUNCTION_SIZE, 
        PT_STRING_LIST,
        PMC_DS+LONG_PAD,
        NET_CFGLIST_TYPE, 
		LIST_FUNCTION2,  
		DRIVER_SENTENIAL


   //  value
        "Tx Buffer\0",
        "Tx Buffer\0",
        0L, 0L, 0L, 0L,        
        IDC_E_VALUE,           
        HELP_IDX_NONE,         
        FNC_BIN_VALUE,    
        FNC_BIN_VALUE_SIZE,
		PT_SVALUE,
		0L,                           // UINT32 m_Default
        0x80000000L,                           // UINT32 m_Min
        0x7FFFFFFFL,                        // UINT32 m_Max
        1L,                           // UINT32 m_Step
		DRIVER_SENTENIAL
  
	// status

        "Status\0",    
        "Status\0",
        0L, 0L, 0L, 0L       
        IDC_E_STATUS,        
        HELP_IDX_NONE        
        FNC_HD_RESULT,       
        FNC_HD_RESULT_SIZE,   
        PT_SREF,
		DRIVER_SENTENIAL
    
DRIVER_SENTENIAL        
END

DC2_TX_BIN4 NET_PARAM_TYPE LOADONCALL DISCARDABLE        
BEGIN                                   
    5,              

    // FunctionId;  
        "Tx Bin\0",       
        "Tx Bin\0",
        0L, 0L, 0L, 0L       
        0,                   
        HELP_IDX_NONE        
        FNC_HD_FUNCTIONID,    
        FNC_HD_FUNCTIONID_SIZE,
        
        PT_CONST,
        DC2_TX_BIN4+LONG_PAD,     
		DRIVER_SENTENIAL
        
	// axis

        "Axis\0",           
        "Axis\0",
        0L, 0L, 0L, 0L,     
        IDC_CHANNEL,      
        HELP_IDX_NONE       
        FNC_BIN_AXIS,       
        FNC_BIN_AXIS_SIZE,  
        
		PT_VALUE,
		1L,                           // UINT32 m_Default
        0L,                           // UINT32 m_Min
        0x08L,                        // UINT32 m_Max
        1L,                           // UINT32 m_Step

		DRIVER_SENTENIAL

    //  function


        "Function\0",    
        "Function\0",
        0L, 0L, 0L, 0L,  
        IDC_CO_FUNCTION, 
        HELP_IDX_NONE    
        FNC_BIN_FUNCTION, 
        FNC_BIN_FUNCTION_SIZE, 
        PT_STRING_LIST,
        PMC_DS+LONG_PAD,
        NET_CFGLIST_TYPE, 
		LIST_FUNCTION4,  
		DRIVER_SENTENIAL


   //  value
        "Tx Buffer\0",
        "Tx Buffer\0",
        0L, 0L, 0L, 0L,        
        IDC_E_VALUE,           
        HELP_IDX_NONE,         
        FNC_BIN_VALUE,    
        FNC_BIN_VALUE_SIZE,
		PT_SVALUE,
		0L,                           // UINT32 m_Default
        0x80000000L,                           // UINT32 m_Min
        0x7FFFFFFFL,                        // UINT32 m_Max
        1L,                           // UINT32 m_Step
		DRIVER_SENTENIAL
  
	// status

        "Status\0",    
        "Status\0",
        0L, 0L, 0L, 0L       
        IDC_E_STATUS,        
        HELP_IDX_NONE        
        FNC_HD_RESULT,       
        FNC_HD_RESULT_SIZE,  
        PT_SREF,
		DRIVER_SENTENIAL
    
DRIVER_SENTENIAL        
END

//

//2 axis 

DC2_TX_2AXIS NET_PARAM_TYPE LOADONCALL DISCARDABLE        
BEGIN                                   
    8,              

    // FunctionId;  
        "2Axis\0",       
        "2Axis\0",
        0L, 0L, 0L, 0L       
        0,                   
        HELP_IDX_NONE        
        FNC_HD_FUNCTIONID,    
        FNC_HD_FUNCTIONID_SIZE,
        
        PT_CONST,
        DC2_TX_2AXIS+LONG_PAD,     
		DRIVER_SENTENIAL
        
	// axis

        "Axis 1\0",           
        "Axis 1\0",
        0L, 0L, 0L, 0L,     
        IDC_CHANNEL,      
        HELP_IDX_NONE       
        FNC_BIN_AXIS,       
        FNC_BIN_AXIS_SIZE,  
        
		PT_VALUE,
		1L,                           // UINT32 m_Default
        0L,                           // UINT32 m_Min
        0x08L,                        // UINT32 m_Max
        1L,                           // UINT32 m_Step

		DRIVER_SENTENIAL

    //  function


        "Function 1\0",    
        "Function 1\0",
        0L, 0L, 0L, 0L,  
        IDC_CO_FUNCTION, 
        HELP_IDX_NONE    
        FNC_BIN_FUNCTION, 
        FNC_BIN_FUNCTION_SIZE, 
        PT_STRING_LIST,
        PMC_MR+LONG_PAD,
        NET_CFGLIST_TYPE, 
		LIST_FUNCTION3,  
		DRIVER_SENTENIAL


   //  value
        "Move Value 1\0",
        "Move Value 1\0",
        0L, 0L, 0L, 0L,        
        IDC_E_VALUE,           
        HELP_IDX_NONE,         
        FNC_BIN_VALUE,    
        FNC_BIN_VALUE_SIZE,
		PT_SVALUE,
		0L,                           // UINT32 m_Default
        0x80000000L,                           // UINT32 m_Min
        0x7FFFFFFFL,                        // UINT32 m_Max
        1L,                           // UINT32 m_Step
		DRIVER_SENTENIAL

	// axis 2

        "Axis 2\0",           
        "Axis 2\0",
        0L, 0L, 0L, 0L,     
        IDC_CHANNEL2,      
        HELP_IDX_NONE       
        FNC_BIN_AXIS2,       
        FNC_BIN_AXIS_SIZE,  
        
		PT_VALUE,
		2L,                           // UINT32 m_Default
        0L,                           // UINT32 m_Min
        0x08L,                        // UINT32 m_Max
        1L,                           // UINT32 m_Step

		DRIVER_SENTENIAL

    //  function 2


        "Function 2\0",    
        "Function 2\0",
        0L, 0L, 0L, 0L,  
        IDC_CO_FUNCTION2, 
        HELP_IDX_NONE    
        FNC_BIN_FUNCTION2, 
        FNC_BIN_FUNCTION_SIZE, 
        PT_STRING_LIST,
        PMC_MR+LONG_PAD,
        NET_CFGLIST_TYPE, 
		LIST_FUNCTION3,  
		DRIVER_SENTENIAL


   //  value 2
        "Move Value 2\0",
        "Move Value 2\0",
        0L, 0L, 0L, 0L,        
        IDC_E_VALUE2,           
        HELP_IDX_NONE,         
        FNC_BIN_VALUE2,    
        FNC_BIN_VALUE_SIZE,
		PT_SVALUE,
		0L,                           // UINT32 m_Default
        0x80000000L,                           // UINT32 m_Min
        0x7FFFFFFFL,                        // UINT32 m_Max
        1L,                           // UINT32 m_Step
		DRIVER_SENTENIAL
	// status

        "Status\0",    
        "Status\0",
        0L, 0L, 0L, 0L       
        IDC_E_STATUS,        
        HELP_IDX_NONE        
        FNC_HD_RESULT,       
        FNC_HD_RESULT_SIZE,  
		PT_SREF,
		DRIVER_SENTENIAL

    
DRIVER_SENTENIAL        
END


DC2_TX_2AXIS2 NET_PARAM_TYPE LOADONCALL DISCARDABLE        
BEGIN                                   
    8,              

    // FunctionId;  
        "2Axis 0\0",       
        "2Axis 0\0",
        0L, 0L, 0L, 0L       
        0,                   
        HELP_IDX_NONE        
        FNC_HD_FUNCTIONID,    
        FNC_HD_FUNCTIONID_SIZE,
        
        PT_CONST,
        DC2_TX_2AXIS2+LONG_PAD,     
		DRIVER_SENTENIAL
        
	// axis

        "Axis 1\0",           
        "Axis 1\0",
        0L, 0L, 0L, 0L,     
        IDC_CHANNEL,      
        HELP_IDX_NONE       
        FNC_BIN_AXIS,       
        FNC_BIN_AXIS_SIZE,  
        
		PT_VALUE,
		1L,                           // UINT32 m_Default
        0L,                           // UINT32 m_Min
        0x08L,                        // UINT32 m_Max
        1L,                           // UINT32 m_Step

		DRIVER_SENTENIAL

    //  function


        "Function 1\0",    
        "Function 1\0",
        0L, 0L, 0L, 0L,  
        IDC_CO_FUNCTION, 
        HELP_IDX_NONE    
        FNC_BIN_FUNCTION, 
        FNC_BIN_FUNCTION_SIZE, 
        PT_STRING_LIST,
        PMC_AB+LONG_PAD,
        NET_CFGLIST_TYPE, 
		LIST_FUNCTION6,  
		DRIVER_SENTENIAL


   //  value
        "Move Value 1\0",
        "Move Value 1\0",
        0L, 0L, 0L, 0L,        
        IDC_E_VALUE,           
        HELP_IDX_NONE,         
        FNC_BIN_VALUE,    
        FNC_BIN_VALUE_SIZE,
		PT_SVALUE,
		0L,                           // UINT32 m_Default
        0x80000000L,                           // UINT32 m_Min
        0x7FFFFFFFL,                        // UINT32 m_Max
        1L,                           // UINT32 m_Step
		DRIVER_SENTENIAL

	// axis 2

        "Axis 2\0",           
        "Axis 2\0",
        0L, 0L, 0L, 0L,     
        IDC_CHANNEL2,      
        HELP_IDX_NONE       
        FNC_BIN_AXIS2,       
        FNC_BIN_AXIS_SIZE,  
        
		PT_VALUE,
		2L,                           // UINT32 m_Default
        0L,                           // UINT32 m_Min
        0x08L,                        // UINT32 m_Max
        1L,                           // UINT32 m_Step

		DRIVER_SENTENIAL

    //  function 2


        "Function 2\0",    
        "Function 2\0",
        0L, 0L, 0L, 0L,  
        IDC_CO_FUNCTION2, 
        HELP_IDX_NONE    
        FNC_BIN_FUNCTION2, 
        FNC_BIN_FUNCTION_SIZE, 
        PT_STRING_LIST,
        PMC_AB+LONG_PAD,
        NET_CFGLIST_TYPE, 
		LIST_FUNCTION6,  
		DRIVER_SENTENIAL


   //  value 2
        "Move Value 2\0",
        "Move Value 2\0",
        0L, 0L, 0L, 0L,        
        IDC_E_VALUE2,           
        HELP_IDX_NONE,         
        FNC_BIN_VALUE2,    
        FNC_BIN_VALUE_SIZE,
		PT_SVALUE,
		0L,                           // UINT32 m_Default
        0x80000000L,                           // UINT32 m_Min
        0x7FFFFFFFL,                        // UINT32 m_Max
        1L,                           // UINT32 m_Step
		DRIVER_SENTENIAL
	// status

        "Status\0",    
        "Status\0",
        0L, 0L, 0L, 0L       
        IDC_E_STATUS,        
        HELP_IDX_NONE        
        FNC_HD_RESULT,       
        FNC_HD_RESULT_SIZE,  
		PT_SREF,
		DRIVER_SENTENIAL

    
DRIVER_SENTENIAL        
END



// tx ascii
DC2_TX_ASCII NET_PARAM_TYPE LOADONCALL DISCARDABLE          // paragraph #8
BEGIN                                   
    4,                                  // how many parameters does this function has 

    //  1 - UINT16   FunctionId;   Offset FNC_HD_FUNCTIONID, Size FNC_HD_FUNCTIONID_SIZE 
        "\0",                           // short name 
        "\0",
        0L, 0L, 0L, 0L                  // Expansion 
        0,                              // CTRL_ID CtrlId_type - Id of control in dll dialog for this param value or type if using default dlg 
        HELP_IDX_NONE                   // HELP_IDX m_HelpIdx
        FNC_HD_FUNCTIONID,              // DWORD Offset - Offset in config block for this param value 
        FNC_HD_FUNCTIONID_SIZE,         // DWORD Size - Number of bytes in config block for this param value 
        // ParamTypes (WORD) Type - How the data is to be processed 
        PT_CONST,
        DC2_TX_ASCII+LONG_PAD,          // function's id. Add 0L to ensure UINT32
    DRIVER_SENTENIAL
        


   //  value
        "Tx Buffer\0",
        "Tx Buffer\0",
        0L, 0L, 0L, 0L,        
        IDC_E_TX,           
        HELP_IDX_NONE         
        FNC_CM_RBUFFER,    
        FNC_CM_RBUFFER_SIZE,
        PT_BUFFER,
		DRIVER_SENTENIAL

		"Result\0",			
        "Result\0",
        0L, 0L, 0L, 0L      
        IDC_E_RESULT,       
        HELP_IDX_NONE       
        FNC_HD_RESULT,      
        FNC_HD_RESULT_SIZE, 
        PT_SREF,
		DRIVER_SENTINEL
  
	// status return function value here !

        "Status\0",    
        "Status\0",
        0L, 0L, 0L, 0L       
        IDC_E_STATUS,        
        HELP_IDX_NONE        
        FNC_HD_STATUS,       
        FNC_HD_STATUS_SIZE,  
        PT_SREF,
		DRIVER_SENTENIAL
    
DRIVER_SENTENIAL        
END

// rx ascii
DC2_RX_ASCII NET_PARAM_TYPE LOADONCALL DISCARDABLE          // paragraph #8
BEGIN                                   
    4,                                  // how many parameters does this function has 

    //  1 - UINT16   FunctionId;   Offset FNC_HD_FUNCTIONID, Size FNC_HD_FUNCTIONID_SIZE 
        "\0",                           // short name 
        "\0",
        0L, 0L, 0L, 0L                  // Expansion 
        0,                              // CTRL_ID CtrlId_type - Id of control in dll dialog for this param value or type if using default dlg 
        HELP_IDX_NONE                   // HELP_IDX m_HelpIdx
        FNC_HD_FUNCTIONID,              // DWORD Offset - Offset in config block for this param value 
        FNC_HD_FUNCTIONID_SIZE,         // DWORD Size - Number of bytes in config block for this param value 
        // ParamTypes (WORD) Type - How the data is to be processed 
        PT_CONST,
        DC2_RX_ASCII+LONG_PAD,          // function's id. Add 0L to ensure UINT32
    DRIVER_SENTENIAL
        


   //  value
        "Rx Buffer\0",
        "Rx Buffer\0",
        0L, 0L, 0L, 0L,        
        IDC_E_TX,           
        HELP_IDX_NONE         
        FNC_CM_WBUFFER,    
        FNC_CM_WBUFFER_SIZE,
        PT_BUFFER,
		DRIVER_SENTENIAL

		"Result\0",			
        "Result\0",
        0L, 0L, 0L, 0L      
        IDC_E_RESULT,       
        HELP_IDX_NONE       
        FNC_HD_RESULT,      
        FNC_HD_RESULT_SIZE, 
        PT_SREF,
		DRIVER_SENTINEL

  
	// status return function value here !

        "Status\0",    
        "Status\0",
        0L, 0L, 0L, 0L       
        IDC_E_STATUS,        
        HELP_IDX_NONE        
        FNC_HD_STATUS,       
        FNC_HD_STATUS_SIZE,  
        PT_SREF,
		DRIVER_SENTENIAL
    
DRIVER_SENTENIAL        
END


// end function implementation

// IDC_CO_CHANNEL NET_CFGLIST_TYPE LOADONCALL DISCARDABLE      
// BEGIN
//    10,
//    0L,	"All Axis\0"    // Default
//    1L,	"1\0"          
//    2L,	"2\0"          
//    3L,	"3\0"          
//    4L, "4\0"          
//    5L, "5\0"          
//    6L, "6\0"          
//    7L, "7\0"          
//    8L, "8\0"
//	0x80L, "Register\0"
//
//    DRIVER_SENTINEL        
// END


// pmc motion station

IDD_MOTION_STATION DEV_CFG_TYPE LOADONCALL DISCARDABLE      // paragraph #4    device confif dlg box  associated!
BEGIN
    IDD_MOTION_STATION,                        // DLG_ID - Id of dialog for this function, 0 if use default dialog
    0,                                  // CTRL_ID - DescId of the Description area
    IDHELP,                             // HELP_ID - CtrlId of the Help button
    IDH_STATION+LONG_PAD,               // HELP_IDX m_HelpIdx
    0L, 0L, 0L, 0L                      // Expansion 
    DEVCONFIG_SIZE,                     // UINT16 TotalSize - Number of bytes in config block
    5,                                  // UINT16 CfgCount - Number of inline entries
    DRIVER_SENTINEL
    
    //  1 - UINT32  NetcfgId, Offset DEV_HD_DRVID, Size DEV_HD_DRVID_SIZE 
    "NetcfgId\0",
    "\0",
    0L, 0L, 0L, 0L                      // Expansion 
    0,                                  // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE                       // HELP_IDX m_HelpIdx
    DEV_HD_DRVID,                          // UINT16 - Offset in DEVICONFIG where value is
    0,                                  // UINT16 m_Bit - Bit offset in byte indexed by offset
    DEV_HD_DRVID_SIZE,                     // UINT16 m_Bits - Number of bits wide the value is
    CT_CONST,                           // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
    NETCONFIG_ID,                       // UINT32 const value
    DRIVER_SENTINEL        
    
    //  2 - UINT32  DevcfgId, Offset DEV_HD_ID, Size DEV_HD_ID_SIZE 
    "DevcfgId\0",
    "\0",
    0L, 0L, 0L, 0L                      // Expansion 
    0,                                  // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE                       // HELP_IDX m_HelpIdx
    DEV_HD_ID,                          // UINT16 - Offset in DEVICONFIG where value is
    0,                                  // UINT16 m_Bit - Bit offset in byte indexed by offset
    DEV_HD_ID_SIZE,                     // UINT16 m_Bits - Number of bits wide the value is
    CT_CONST,                           // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
    STATIONCONFIG_ID,                    // UINT32 const value
    DRIVER_SENTINEL        
    
    //  3 - UINT32  DevcfgVers, Offset DEV_HD_VERS, Size DEV_HD_VERS_SIZE 
    "DevcfgVers\0",
    "\0",
    0L, 0L, 0L, 0L,                     // Expansion 
    0,                                  // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE,                      // HELP_IDX m_HelpIdx
    DEV_HD_VERS,                        // UINT16 - Offset in DEVICONFIG where value is
    0                                   // UINT16 m_Bit - Bit offset in byte indexed by offset
    DEV_HD_VERS_SIZE,                   // UINT16 m_Bits - Number of bits wide the value is
    CT_CONST,                           // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
    STATIONCONFIG_VERS,                 // UINT32 const value
    DRIVER_SENTINEL        
    
    
    //  4 - UINT16 Address, Offset DEV_ST_ADDRESS, Size DEV_ST_ADDRESS_SIZE 
    "Station Address\0",
    "Network link address for this device\0",
    0L, 0L, 0L, 0L,                     // Expansion 
    IDC_CO_ADDRESS,                     // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE,                      // HELP_IDX m_HelpIdx
    DEV_ST_ADDRESS,                     // UINT16 - Offset in DEVICONFIG where value is
    0,                                  // UINT16 m_Bit - Bit offset in byte indexed by offset
    DEV_ST_ADDRESS_SIZE,                // UINT16 m_Bits - Number of bits wide the value is
    CT_VALLIST,                         // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
      MOTION_STATION_DEF,                               // UINT32 m_Default
      MOTION_STATION_MIN,                               // UINT32 m_Min
      MOTION_STATION_MAX,           // UINT32 m_Max
      1L,                               // UINT32 m_Step
    "%ld\0"                             // CString m_Text/Fmt
    DRIVER_SENTINEL        
    
    //  5 - UINT16 bCritical; Offset DEV_ST_CRITICAL, Size DEV_ST_CRITICAL_SIZE 
    "Critical Device\0",
    "If any device having Critical Device control ON misses at Run (Online()) time, this command will fail \0",
    0L, 0L, 0L, 0L,                     // Expansion 
    IDC_CB_CRITICAL,                    // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE,                      // HELP_IDX m_HelpIdx
    DEV_ST_CRITICAL,                    // UINT16 Offset in data block where value is
    0,                                  // UINT16 m_Bit - Bit offset in byte indexed by offset
    DEV_ST_CRITICAL_SIZE,               // UINT16 m_Bits - Number of bits wide the value is
    CT_CHECK,                           // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
    1L,                                 // UINT32 m_Default
    0L,                                 // UINT32 m_Off
    1L,                                 // UINT32 m_On
    DRIVER_SENTINEL        

DRIVER_SENTINEL
END



////////////////////////////////   station descriptors   ///////////////////////////////////

DEVICE_MOTION_STATION DEVICE_TYPE LOADONCALL DISCARDABLE        // paragraph #5      device type associated!
BEGIN
    // Device Cookie, Dev Prog, In, Out 
    DEVICE_MOTION_STATION+LONG_PAD,            // ensure a long value 
        0L, 0L, 0L,                     // Ana Prog, In, Out 
        0L, 0L, 0L,                     // Total count of points 
        0,                              // Not used
        // Name 
        "MOTION Axis \0",
        // Description 
        ". \r\n"
        ".\0",
        0L, 0L, 0L, 0L,                 // Expansion 

        0,      // p.#3     // RT_USER FuncType - Resource type for network/device functions, 0 if none 
        0,               // RR_USER FuncRef - Ref to list of network function head, 0 if none 
  
        DEV_CFG_TYPE,       // p.#4     // RT_USER CfgType - Resource type for device config, 0 if none 
        IDD_MOTION_STATION,                    // RR_USER CfgRef - Ref to structure def of device config data, 0 if none 

        DEV_PNT_TYPE,       // p.#7     // RT_USER PntType - Resource type for point info, 0 if none 
        MOTION_STATION,					// RR_USER PntRef - Ref to structure def of point data 
    DRIVER_SENTINEL    


DRIVER_SENTINEL
END         


//////////other on board
IDD_OTHER_MOTION_STATION DEV_CFG_TYPE LOADONCALL DISCARDABLE      // paragraph #4    device confif dlg box  associated!
BEGIN
    IDD_OTHER_MOTION_STATION,                        // DLG_ID - Id of dialog for this function, 0 if use default dialog
    0,                                  // CTRL_ID - DescId of the Description area
    IDHELP,                             // HELP_ID - CtrlId of the Help button
    IDH_STATION+LONG_PAD,               // HELP_IDX m_HelpIdx
    0L, 0L, 0L, 0L                      // Expansion 
    DEVCONFIG_SIZE,                     // UINT16 TotalSize - Number of bytes in config block
    5,                                  // UINT16 CfgCount - Number of inline entries
    DRIVER_SENTINEL
    
    //  1 - UINT32  NetcfgId, Offset DEV_HD_DRVID, Size DEV_HD_DRVID_SIZE 
    "NetcfgId\0",
    "\0",
    0L, 0L, 0L, 0L                      // Expansion 
    0,                                  // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE                       // HELP_IDX m_HelpIdx
    DEV_HD_DRVID,                          // UINT16 - Offset in DEVICONFIG where value is
    0,                                  // UINT16 m_Bit - Bit offset in byte indexed by offset
    DEV_HD_DRVID_SIZE,                     // UINT16 m_Bits - Number of bits wide the value is
    CT_CONST,                           // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
    NETCONFIG_ID,                       // UINT32 const value
    DRIVER_SENTINEL        
    
    //  2 - UINT32  DevcfgId, Offset DEV_HD_ID, Size DEV_HD_ID_SIZE 
    "DevcfgId\0",
    "\0",
    0L, 0L, 0L, 0L                      // Expansion 
    0,                                  // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE                       // HELP_IDX m_HelpIdx
    DEV_HD_ID,                          // UINT16 - Offset in DEVICONFIG where value is
    0,                                  // UINT16 m_Bit - Bit offset in byte indexed by offset
    DEV_HD_ID_SIZE,                     // UINT16 m_Bits - Number of bits wide the value is
    CT_CONST,                           // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
    STATIONCONFIG_ID,                    // UINT32 const value
    DRIVER_SENTINEL        
    
    //  3 - UINT32  DevcfgVers, Offset DEV_HD_VERS, Size DEV_HD_VERS_SIZE 
    "DevcfgVers\0",
    "\0",
    0L, 0L, 0L, 0L,                     // Expansion 
    0,                                  // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE,                      // HELP_IDX m_HelpIdx
    DEV_HD_VERS,                        // UINT16 - Offset in DEVICONFIG where value is
    0                                   // UINT16 m_Bit - Bit offset in byte indexed by offset
    DEV_HD_VERS_SIZE,                   // UINT16 m_Bits - Number of bits wide the value is
    CT_CONST,                           // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
    STATIONCONFIG_VERS,                 // UINT32 const value
    DRIVER_SENTINEL        
    
    
    //  4 - UINT16 Address, Offset DEV_ST_ADDRESS, Size DEV_ST_ADDRESS_SIZE 
    "Station Address\0",
    "Network link address for this device\0",
    0L, 0L, 0L, 0L,                     // Expansion 
    IDC_CO_ADDRESS,                     // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE,                      // HELP_IDX m_HelpIdx
    DEV_ST_ADDRESS,                     // UINT16 - Offset in DEVICONFIG where value is
    0,                                  // UINT16 m_Bit - Bit offset in byte indexed by offset
    DEV_ST_ADDRESS_SIZE,                // UINT16 m_Bits - Number of bits wide the value is
    CT_VALLIST,                         // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
      OTHER_MOTION_STATION_DEF,                               // UINT32 m_Default
      OTHER_MOTION_STATION_MIN,                               // UINT32 m_Min
      OTHER_MOTION_STATION_MAX,           // UINT32 m_Max
      1L,                               // UINT32 m_Step
    "%ld\0"                             // CString m_Text/Fmt
    DRIVER_SENTINEL        
    
    //  5 - UINT16 bCritical; Offset DEV_ST_CRITICAL, Size DEV_ST_CRITICAL_SIZE 
    "Critical Device\0",
    "If any device having Critical Device control ON misses at Run (Online()) time, this command will fail \0",
    0L, 0L, 0L, 0L,                     // Expansion 
    IDC_CB_CRITICAL,                    // CTRL_ID m_CtrlId - 
    HELP_IDX_NONE,                      // HELP_IDX m_HelpIdx
    DEV_ST_CRITICAL,                    // UINT16 Offset in data block where value is
    0,                                  // UINT16 m_Bit - Bit offset in byte indexed by offset
    DEV_ST_CRITICAL_SIZE,               // UINT16 m_Bits - Number of bits wide the value is
    CT_CHECK,                           // CFG_TYPES m_CfgType
    //Variable depending on CFG_TYPES
    1L,                                 // UINT32 m_Default
    0L,                                 // UINT32 m_Off
    1L,                                 // UINT32 m_On
    DRIVER_SENTINEL        

DRIVER_SENTINEL
END



////////////////////////////////   station descriptors   ///////////////////////////////////

DEVICE_OTHER_MOTION_STATION DEVICE_TYPE LOADONCALL DISCARDABLE        // paragraph #5      device type associated!
BEGIN
    // Device Cookie, Dev Prog, In, Out 
    DEVICE_OTHER_MOTION_STATION+LONG_PAD,            // ensure a long value 
        0L, 0L, 0L,                     // Ana Prog, In, Out 
        0L, 0L, 0L,                     // Total count of points 
        0,                              // Not used
        // Name 
        "OnBoard i/o's \0",
        // Description 
        ". \r\n"
        ".\0",
        0L, 0L, 0L, 0L,                 // Expansion 

        0,      // p.#3     // RT_USER FuncType - Resource type for network/device functions, 0 if none 
        0,               // RR_USER FuncRef - Ref to list of network function head, 0 if none 
  
        DEV_CFG_TYPE,       // p.#4     // RT_USER CfgType - Resource type for device config, 0 if none 
        IDD_OTHER_MOTION_STATION,                    // RR_USER CfgRef - Ref to structure def of device config data, 0 if none 

        DEV_PNT_TYPE,       // p.#7     // RT_USER PntType - Resource type for point info, 0 if none 
        OTHER_MOTION_STATION,					// RR_USER PntRef - Ref to structure def of point data 
    DRIVER_SENTINEL    


DRIVER_SENTINEL
END         





////on board end


////// pmc on board io's



MOTION_STATION DEV_PNT_TYPE LOADONCALL DISCARDABLE        // paragraph #7
BEGIN
    // Bits (short), Value (UINT32), Text 
    // Note: The points described here must fit what 
    // InputSizer() and OutputSizer() return for this device. 

    6+32,

    32, SA_INPUT,   0, "Motor Status \0"
    32, SA_INPUT,  32, "Current Position \0"
	32, SA_INPUT,  64, "Target Position \0"
	32, SA_INPUT,  96, "Programmed Velocity \0"
	32, SA_INPUT,  128, "Programmed Acceleration\0"
	32, SA_INPUT,  160, "Programmed Deceleration \0"

	1, SA_INPUT, 0 , "0- Motor Updating\0"
	1, SA_INPUT, 1 , "1- Motor On\0"
	1, SA_INPUT, 2 , "2- Velocity Mode\0"
	1, SA_INPUT, 3 , "3- Move Trajectory Completed\0"
	1, SA_INPUT, 4 , "4- Direction\0"
	1, SA_INPUT, 5 , "5- Phaseing\0"
	1, SA_INPUT, 6 , "6- Motor Homed\0"
	1, SA_INPUT, 7 , "7- Motor Error\0"
	1, SA_INPUT, 8 , "8- Look For Index\0"
	1, SA_INPUT, 9 , "9- Look For Edge\0"
	1, SA_INPUT, 10 , "10- Moving Positive Dir\0"
	1, SA_INPUT, 11 , "11- Moving Negative Dir\0"
	1, SA_INPUT, 12, "12- Break Point Reached\0"
	1, SA_INPUT, 13 , "13- Motor Joging\0"
	1, SA_INPUT, 14 , "14- Amplifier Fault Enable\0"
	1, SA_INPUT, 15 , "15- Amplifier Fault Tripped\0"
	1, SA_INPUT, 16 , "16- Limit Positive Enable\0"
	1, SA_INPUT, 17 , "17- Limit Positive Tripped\0"
	1, SA_INPUT, 18 , "18- Limit Negative Enable\0"
	1, SA_INPUT, 19 , "19- Limit Negative Tripped\0"
	1, SA_INPUT, 20 , "20- Jog Right Enable\0"
	1, SA_INPUT, 22 , "21- Jog Right Active\0"
	1, SA_INPUT, 22 , "22- Jog Left Enable\0"
	1, SA_INPUT, 23, "23- Jog Left Active\0"
	1, SA_INPUT, 24 , "24- Index Aux Encoder\0"
	1, SA_INPUT, 25 , "25- Course Home\0"
	1, SA_INPUT, 26 , "26- Amplifier Fault\0"
	1, SA_INPUT, 27 , "27- Reserved\0"
	1, SA_INPUT, 28 , "28- Limit Positive\0"
	1, SA_INPUT, 29 , "29- Limit Negative\0"
	1, SA_INPUT, 30 , "30- Jog Right\0"
	1, SA_INPUT, 31, "31- Jog Left\0"

DRIVER_SENTINEL        
END



OTHER_MOTION_STATION DEV_PNT_TYPE LOADONCALL DISCARDABLE        // paragraph #7
BEGIN
    // Bits (short), Value (UINT32), Text 
    // Note: The points described here must fit what 
    // InputSizer() and OutputSizer() return for this device. 
    5 + 16,

	16, SA_INPUT, 0 , "0- Digital I/O\0"
	16, SA_INPUT, 16 , "1- Analog Ch 1\0"
	16, SA_INPUT, 32 , "2- Analog Ch 2\0"
	16, SA_INPUT, 48 , "3- Analog Ch 3\0"
	16, SA_INPUT, 64 , "4- Analog Ch 4\0"

	1, SA_INPUT, 0 , "Ch 00\0"
	1, SA_INPUT, 1 , "Ch 01\0"
	1, SA_INPUT, 2 , "Ch 02\0"
	1, SA_INPUT, 3 , "Ch 03\0"
	1, SA_INPUT, 4 , "Ch 04\0"
	1, SA_INPUT, 5 , "Ch 05\0"
	1, SA_INPUT, 6 , "Ch 06\0"
	1, SA_INPUT, 7 , "Ch 07\0"
	1, SA_INPUT, 8 , "Ch 08\0"
	1, SA_INPUT, 9 , "Ch 09\0"
	1, SA_INPUT, 10 , "Ch 10\0"
	1, SA_INPUT, 11 , "Ch 11\0"
	1, SA_INPUT, 12, "Ch 12\0"
	1, SA_INPUT, 13 , "Ch 13\0"
	1, SA_INPUT, 14 , "Ch 14\0"
	1, SA_INPUT, 15 , "Ch 15\0"

DRIVER_SENTINEL        
END




// pmc function list



LIST_FUNCTION1 NET_CFGLIST_TYPE LOADONCALL DISCARDABLE       // paragraph #6
BEGIN
    28,
	PMC_CF+LONG_PAD,	"CF  Channel ofF \0",
 	PMC_CH+LONG_PAD,	"CH  Channel High true \0",
 	PMC_CI+LONG_PAD,	"CI  Channel In \0",
 	PMC_CL+LONG_PAD,	"CL  Channel Low true \0",
 	PMC_CN+LONG_PAD,	"CN  channel oN \0",
 	PMC_CT+LONG_PAD,	"CT  Channel ouT \0",

	PMC_DS+LONG_PAD,	"DS  Deceleration Set\0",
	PMC_FR+LONG_PAD,	"FR  Set derivative sampling period\0",
	PMC_IL+LONG_PAD,	"IL  Set Integration Limit\0",
	PMC_JG+LONG_PAD,	"JG  Set Jog proportional Gain\0",
	PMC_JD+LONG_PAD,	"JD  Set Jog Derivative Gain\0",
	PMC_JO+LONG_PAD,	"JO  Set Jog Offset\0",
	PMC_JB+LONG_PAD,	"JB  Set Jog DeadBand\0",
	PMC_LF+LONG_PAD,	"LF  Limit switch Off\0",
	PMC_LM+LONG_PAD,	"LM  Limit switch Mode\0",
	PMC_LN+LONG_PAD,	"LN  Limit switch On\0",

	PMC_PH+LONG_PAD,	"PH  Phasing\0",
	PMC_SA+LONG_PAD,	"SA  Set Acceleration\0",
	PMC_SD+LONG_PAD,	"SD  Set Derivative Gain\0",
	PMC_SE+LONG_PAD,	"SE  Stop on Error\0",
	PMC_SG+LONG_PAD,	"SG  Set Gain\0",
	PMC_SI+LONG_PAD,	"SI  Set Integral Gain\0",
	PMC_SQ+LONG_PAD,	"SQ  Set torQue\0",
	PMC_SV+LONG_PAD,	"SV  Set Velocity\0",
	PMC_VA+LONG_PAD,	"VA  Vector Acceleration\0",
	PMC_VD+LONG_PAD,	"VD  Vector Deceleration\0",

	PMC_VG+LONG_PAD,	"VG  Set Velocity Gain\0",
	PMC_VV+LONG_PAD,	"VV  Vector Velocity\0",


    DRIVER_SENTENIAL        
END

// motion commands

LIST_FUNCTION2 NET_CFGLIST_TYPE LOADONCALL DISCARDABLE       // paragraph #6
BEGIN
    24,
	PMC_AB+LONG_PAD,	"AB  ABort\0",
	PMC_DH+LONG_PAD,	"DH  Define Home\0",
	PMC_DI+LONG_PAD,	"DI  DIrection\0",
	PMC_FE+LONG_PAD,	"FE  Find Edge\0",
	PMC_FI+LONG_PAD,	"FI  Find Index\0",
	PMC_GH+LONG_PAD,	"GH  Go Home\0",
	PMC_GM+LONG_PAD,	"GM  Gain Mode\0",
	PMC_GO+LONG_PAD,	"GO  GO\0",
	PMC_HO+LONG_PAD,	"HO  HOme\0",
	PMC_MA+LONG_PAD,	"MA  Move Absolute\0",

	PMC_MF+LONG_PAD,	"MF  Motor ofF\0",
	PMC_MN+LONG_PAD,	"MN  Motor oN\0",
	PMC_MR+LONG_PAD,	"MR  Move Relative\0",
	PMC_NS+LONG_PAD,	"NS  No Syncronization\0",
	PMC_PM+LONG_PAD,	"PM  Position Mode\0",
	PMC_QM+LONG_PAD,	"QM  Torque Mode\0",
	PMC_SE+LONG_PAD,	"SE  Stop on Error\0",
	PMC_SM+LONG_PAD,	"SM  Set Master\0",
	PMC_SN+LONG_PAD,	"SN  Syncronization oN\0",
	PMC_ST+LONG_PAD,	"ST  STop\0",

	PMC_VM+LONG_PAD,	"VM  Velocity Mode\0",
	PMC_SA+LONG_PAD,	"SA  Set Acceleration\0",
	PMC_DS+LONG_PAD,	"DS  Deceleration Set\0",
	PMC_GE+LONG_PAD,	"GE  Go Until home Edge Occurs\0",



    DRIVER_SENTENIAL        
END


// misc.

LIST_FUNCTION4 NET_CFGLIST_TYPE LOADONCALL DISCARDABLE       // paragraph #6
BEGIN
    26,

	PMC_RT+LONG_PAD,	"RT  ReseT system \0",
 	PMC_MC+LONG_PAD,	"MC  Macro Call Command \0",
 	PMC_RM+LONG_PAD,	"RM  Reset Macros \0",
	PMC_TM+LONG_PAD,	"TM  Tell Macros \0",
	PMC_TE+LONG_PAD,	"TE  Tell Error \0",
	PMC_TF+LONG_PAD,	"TF  Tell Following error \0",
	PMC_DA+LONG_PAD,	"DA  Position capture Display & Arm \0",
	PMC_DR+LONG_PAD,	"DR  Display Recorded position \0",
	PMC_DO+LONG_PAD,	"DO  Display recorded Optimal position \0",
	PMC_PA+LONG_PAD,	"PA  Position capture Arm \0",

	PMC_PD+LONG_PAD,	"PD  Position capture display \0",
	PMC_PR+LONG_PAD,	"PR  Position Record enable \0",
	PMC_TA+LONG_PAD,	"TA  Tell A/d \0",
	PMC_TC+LONG_PAD,	"TC  Tell Channel \0",
	PMC_TD+LONG_PAD,	"TD  Tell Derivative Gain \0",
	PMC_TE+LONG_PAD,	"TE  Tell Error \0",
	PMC_TF+LONG_PAD,	"TF  Tell Following error \0",
	PMC_TG+LONG_PAD,	"TG  Tell Position Gain \0",
	PMC_TI+LONG_PAD,	"TI  Tell Integral Gain \0",
	PMC_TL+LONG_PAD,	"TL  Tell Integration Limit \0",
	
	PMC_TO+LONG_PAD,	"TO  Tell Optimal \0",
	PMC_TP+LONG_PAD,	"TP  Tell Position \0",
	PMC_TS+LONG_PAD,	"TS  Tell Status \0",
	PMC_TT+LONG_PAD,	"TT  Tell Target \0",
	PMC_TV+LONG_PAD,	"TV  Tell Velocity \0",
	PMC_VE+LONG_PAD,	"VE  tell VErsion \0",





    DRIVER_SENTENIAL        
END



// no value parameter

// LIST_FUNCTION5 NET_CFGLIST_TYPE LOADONCALL DISCARDABLE       // paragraph #6
// BEGIN
//     19,
//     DRIVER_SENTENIAL        
// END

//2 axis

LIST_FUNCTION3 NET_CFGLIST_TYPE LOADONCALL DISCARDABLE       // paragraph #6
BEGIN
    6,
	PMC_MA+LONG_PAD,	"MA  Move Absolute\0",
	PMC_MR+LONG_PAD,	"MR  Move Relative\0",
	PMC_SA+LONG_PAD,	"SA  Set Acceleration\0",

	PMC_DS+LONG_PAD,	"DS  Deceleration Set\0",
	PMC_DH+LONG_PAD,	"DH  Define Home\0",
	PMC_DI+LONG_PAD,	"DI  DIrection\0",



    DRIVER_SENTENIAL        
END


LIST_FUNCTION6 NET_CFGLIST_TYPE LOADONCALL DISCARDABLE       // paragraph #6
BEGIN
    12,


	PMC_AB+LONG_PAD,	"AB  ABort\0",
	PMC_ST+LONG_PAD,	"ST  STop\0",
	PMC_FE+LONG_PAD,	"FE  Find Edge\0",
	PMC_FI+LONG_PAD,	"FI  Find Index\0",
	PMC_GH+LONG_PAD,	"GH  Go Home\0",
	PMC_GO+LONG_PAD,	"GO  GO\0",
	PMC_HO+LONG_PAD,	"HO  HOme\0",
	PMC_MF+LONG_PAD,	"MF  Motor ofF\0",
	PMC_MN+LONG_PAD,	"MN  Motor oN\0",
	PMC_PM+LONG_PAD,	"PM  Position Mode\0",
 	PMC_MC+LONG_PAD,	"MC  Macro Call Command \0",

	PMC_VM+LONG_PAD,	"VM  Velocity Mode\0",

    DRIVER_SENTENIAL        
END



//////////////////////////   The End  ////////////////////////////






